{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/build/webpack/loaders/next-flight-loader/server-reference.ts","turbopack:///[project]/node_modules/next/src/server/lib/trace/constants.ts","turbopack:///[project]/node_modules/next/src/shared/lib/is-thenable.ts","turbopack:///[project]/node_modules/next/src/server/lib/trace/tracer.ts","turbopack:///[project]/node_modules/next/src/client/components/hooks-server-context.ts","turbopack:///[project]/node_modules/next/src/client/components/static-generation-bailout.ts","turbopack:///[project]/node_modules/next/src/server/dynamic-rendering-utils.ts","turbopack:///[project]/node_modules/next/src/lib/framework/boundary-constants.tsx","turbopack:///[project]/node_modules/next/src/lib/scheduler.ts","turbopack:///[project]/node_modules/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts","turbopack:///[project]/node_modules/next/src/shared/lib/promise-with-resolvers.ts","turbopack:///[project]/node_modules/next/src/server/app-render/staged-rendering.ts","turbopack:///[project]/node_modules/next/src/server/app-render/dynamic-rendering.ts","turbopack:///[project]/node_modules/next/src/server/lib/clone-response.ts","turbopack:///[project]/node_modules/next/src/server/lib/dedupe-fetch.ts","turbopack:///[project]/node_modules/next/src/server/response-cache/types.ts","turbopack:///[project]/node_modules/next/src/lib/detached-promise.ts","turbopack:///[project]/node_modules/next/src/lib/batcher.ts","turbopack:///[project]/node_modules/next/src/server/stream-utils/encoded-tags.ts","turbopack:///[project]/node_modules/next/src/server/stream-utils/uint8array-helpers.ts","turbopack:///[project]/node_modules/next/src/shared/lib/errors/constants.ts","turbopack:///[project]/node_modules/next/src/shared/lib/segment-cache/output-export-prefetch-encoding.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/cache-busting-search-param.ts","turbopack:///[project]/node_modules/next/src/server/stream-utils/node-web-streams-helper.ts","turbopack:///[project]/node_modules/next/src/server/request-meta.ts","turbopack:///[project]/node_modules/next/src/shared/lib/i18n/detect-domain-locale.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/parse-path.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/add-path-prefix.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/add-path-suffix.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/path-has-prefix.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/add-locale.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/format-next-pathname-info.ts","turbopack:///[project]/node_modules/next/src/shared/lib/get-hostname.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/remove-path-prefix.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/get-next-pathname-info.ts","turbopack:///[project]/node_modules/next/src/server/web/next-url.ts","turbopack:///[project]/node_modules/next/src/server/web/error.ts","turbopack:///[project]/node_modules/next/src/server/web/spec-extension/cookies.ts","turbopack:///[project]/node_modules/next/src/server/web/spec-extension/request.ts","turbopack:///[project]/node_modules/next/src/server/base-http/helpers.ts","turbopack:///[project]/node_modules/next/src/server/web/spec-extension/adapters/next-request.ts","turbopack:///[project]/node_modules/next/src/server/client-component-renderer-logger.ts","turbopack:///[project]/node_modules/next/src/server/pipe-readable.ts","turbopack:///[project]/node_modules/next/src/server/render-result.ts","turbopack:///[project]/node_modules/next/src/server/route-kind.ts","turbopack:///[project]/node_modules/next/src/server/response-cache/utils.ts","turbopack:///[project]/node_modules/next/src/server/response-cache/index.ts","turbopack:///[project]/node_modules/next/src/server/lib/patch-fetch.ts","turbopack:///[project]/node_modules/next/src/server/web/spec-extension/unstable-cache.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/sorted-routes.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/is-dynamic.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/index.ts","turbopack:///[project]/node_modules/next/src/server/web/spec-extension/revalidate.ts","turbopack:///[project]/node_modules/next/src/server/web/spec-extension/unstable-no-store.ts","turbopack:///[project]/node_modules/next/src/server/use-cache/cache-life.ts","turbopack:///[project]/node_modules/next/src/server/use-cache/cache-tag.ts","turbopack:///[project]/node_modules/next/cache.js","turbopack:///[project]/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-validate.ts","turbopack:///[project]/app/actions.ts","turbopack:///[project]/node_modules/date-fns/constants.js","turbopack:///[project]/node_modules/date-fns/constructFrom.js","turbopack:///[project]/node_modules/date-fns/toDate.js","turbopack:///[project]/node_modules/date-fns/addDays.js","turbopack:///[project]/node_modules/date-fns/subDays.js","turbopack:///[project]/node_modules/date-fns/addMonths.js","turbopack:///[project]/node_modules/date-fns/subMonths.js","turbopack:///[project]/node_modules/date-fns/sub.js"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nexport { registerServerReference } from 'react-server-dom-webpack/server'\n","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/\n\n// eslint typescript has a bug with TS enums\n\nenum BaseServerSpan {\n  handleRequest = 'BaseServer.handleRequest',\n  run = 'BaseServer.run',\n  pipe = 'BaseServer.pipe',\n  getStaticHTML = 'BaseServer.getStaticHTML',\n  render = 'BaseServer.render',\n  renderToResponseWithComponents = 'BaseServer.renderToResponseWithComponents',\n  renderToResponse = 'BaseServer.renderToResponse',\n  renderToHTML = 'BaseServer.renderToHTML',\n  renderError = 'BaseServer.renderError',\n  renderErrorToResponse = 'BaseServer.renderErrorToResponse',\n  renderErrorToHTML = 'BaseServer.renderErrorToHTML',\n  render404 = 'BaseServer.render404',\n}\n\nenum LoadComponentsSpan {\n  loadDefaultErrorComponents = 'LoadComponents.loadDefaultErrorComponents',\n  loadComponents = 'LoadComponents.loadComponents',\n}\n\nenum NextServerSpan {\n  getRequestHandler = 'NextServer.getRequestHandler',\n  getRequestHandlerWithMetadata = 'NextServer.getRequestHandlerWithMetadata',\n  getServer = 'NextServer.getServer',\n  getServerRequestHandler = 'NextServer.getServerRequestHandler',\n  createServer = 'createServer.createServer',\n}\n\nenum NextNodeServerSpan {\n  compression = 'NextNodeServer.compression',\n  getBuildId = 'NextNodeServer.getBuildId',\n  createComponentTree = 'NextNodeServer.createComponentTree',\n  clientComponentLoading = 'NextNodeServer.clientComponentLoading',\n  getLayoutOrPageModule = 'NextNodeServer.getLayoutOrPageModule',\n  generateStaticRoutes = 'NextNodeServer.generateStaticRoutes',\n  generateFsStaticRoutes = 'NextNodeServer.generateFsStaticRoutes',\n  generatePublicRoutes = 'NextNodeServer.generatePublicRoutes',\n  generateImageRoutes = 'NextNodeServer.generateImageRoutes.route',\n  sendRenderResult = 'NextNodeServer.sendRenderResult',\n  proxyRequest = 'NextNodeServer.proxyRequest',\n  runApi = 'NextNodeServer.runApi',\n  render = 'NextNodeServer.render',\n  renderHTML = 'NextNodeServer.renderHTML',\n  imageOptimizer = 'NextNodeServer.imageOptimizer',\n  getPagePath = 'NextNodeServer.getPagePath',\n  getRoutesManifest = 'NextNodeServer.getRoutesManifest',\n  findPageComponents = 'NextNodeServer.findPageComponents',\n  getFontManifest = 'NextNodeServer.getFontManifest',\n  getServerComponentManifest = 'NextNodeServer.getServerComponentManifest',\n  getRequestHandler = 'NextNodeServer.getRequestHandler',\n  renderToHTML = 'NextNodeServer.renderToHTML',\n  renderError = 'NextNodeServer.renderError',\n  renderErrorToHTML = 'NextNodeServer.renderErrorToHTML',\n  render404 = 'NextNodeServer.render404',\n  startResponse = 'NextNodeServer.startResponse',\n\n  // nested inner span, does not require parent scope name\n  route = 'route',\n  onProxyReq = 'onProxyReq',\n  apiResolver = 'apiResolver',\n  internalFetch = 'internalFetch',\n}\n\nenum StartServerSpan {\n  startServer = 'startServer.startServer',\n}\n\nenum RenderSpan {\n  getServerSideProps = 'Render.getServerSideProps',\n  getStaticProps = 'Render.getStaticProps',\n  renderToString = 'Render.renderToString',\n  renderDocument = 'Render.renderDocument',\n  createBodyResult = 'Render.createBodyResult',\n}\n\nenum AppRenderSpan {\n  renderToString = 'AppRender.renderToString',\n  renderToReadableStream = 'AppRender.renderToReadableStream',\n  getBodyResult = 'AppRender.getBodyResult',\n  fetch = 'AppRender.fetch',\n}\n\nenum RouterSpan {\n  executeRoute = 'Router.executeRoute',\n}\n\nenum NodeSpan {\n  runHandler = 'Node.runHandler',\n}\n\nenum AppRouteRouteHandlersSpan {\n  runHandler = 'AppRouteRouteHandlers.runHandler',\n}\n\nenum ResolveMetadataSpan {\n  generateMetadata = 'ResolveMetadata.generateMetadata',\n  generateViewport = 'ResolveMetadata.generateViewport',\n}\n\nenum MiddlewareSpan {\n  execute = 'Middleware.execute',\n}\n\ntype SpanTypes =\n  | `${BaseServerSpan}`\n  | `${LoadComponentsSpan}`\n  | `${NextServerSpan}`\n  | `${StartServerSpan}`\n  | `${NextNodeServerSpan}`\n  | `${RenderSpan}`\n  | `${RouterSpan}`\n  | `${AppRenderSpan}`\n  | `${NodeSpan}`\n  | `${AppRouteRouteHandlersSpan}`\n  | `${ResolveMetadataSpan}`\n  | `${MiddlewareSpan}`\n\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n  MiddlewareSpan.execute,\n  BaseServerSpan.handleRequest,\n  RenderSpan.getServerSideProps,\n  RenderSpan.getStaticProps,\n  AppRenderSpan.fetch,\n  AppRenderSpan.getBodyResult,\n  RenderSpan.renderDocument,\n  NodeSpan.runHandler,\n  AppRouteRouteHandlersSpan.runHandler,\n  ResolveMetadataSpan.generateMetadata,\n  ResolveMetadataSpan.generateViewport,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.getLayoutOrPageModule,\n  NextNodeServerSpan.startResponse,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\nexport {\n  BaseServerSpan,\n  LoadComponentsSpan,\n  NextServerSpan,\n  NextNodeServerSpan,\n  StartServerSpan,\n  RenderSpan,\n  RouterSpan,\n  AppRenderSpan,\n  NodeSpan,\n  AppRouteRouteHandlersSpan,\n  ResolveMetadataSpan,\n  MiddlewareSpan,\n}\n\nexport type { SpanTypes }\n","/**\n * Check to see if a value is Thenable.\n *\n * @param promise the maybe-thenable value\n * @returns true if the value is thenable\n */\nexport function isThenable<T = unknown>(\n  promise: Promise<T> | T\n): promise is Promise<T> {\n  return (\n    promise !== null &&\n    typeof promise === 'object' &&\n    'then' in promise &&\n    typeof promise.then === 'function'\n  )\n}\n","import type { FetchEventResult } from '../../web/types'\nimport type { TextMapSetter } from '@opentelemetry/api'\nimport type { SpanTypes } from './constants'\nimport { LogSpanAllowList, NextVanillaSpanAllowlist } from './constants'\n\nimport type {\n  ContextAPI,\n  Span,\n  SpanOptions,\n  Tracer,\n  AttributeValue,\n  TextMapGetter,\n} from 'next/dist/compiled/@opentelemetry/api'\nimport { isThenable } from '../../../shared/lib/is-thenable'\n\nlet api: typeof import('next/dist/compiled/@opentelemetry/api')\n\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (process.env.NEXT_RUNTIME === 'edge') {\n  api = require('@opentelemetry/api') as typeof import('@opentelemetry/api')\n} else {\n  try {\n    api = require('@opentelemetry/api') as typeof import('@opentelemetry/api')\n  } catch (err) {\n    api =\n      require('next/dist/compiled/@opentelemetry/api') as typeof import('next/dist/compiled/@opentelemetry/api')\n  }\n}\n\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } =\n  api\n\nexport class BubbledError extends Error {\n  constructor(\n    public readonly bubble?: boolean,\n    public readonly result?: FetchEventResult\n  ) {\n    super()\n  }\n}\n\nexport function isBubbledError(error: unknown): error is BubbledError {\n  if (typeof error !== 'object' || error === null) return false\n  return error instanceof BubbledError\n}\n\nconst closeSpanWithError = (span: Span, error?: Error) => {\n  if (isBubbledError(error) && error.bubble) {\n    span.setAttribute('next.bubble', true)\n  } else {\n    if (error) {\n      span.recordException(error)\n      span.setAttribute('error.type', error.name)\n    }\n    span.setStatus({ code: SpanStatusCode.ERROR, message: error?.message })\n  }\n  span.end()\n}\n\ntype TracerSpanOptions = Omit<SpanOptions, 'attributes'> & {\n  parentSpan?: Span\n  spanName?: string\n  attributes?: Partial<Record<AttributeNames, AttributeValue | undefined>>\n  hideSpan?: boolean\n}\n\ninterface NextTracer {\n  getContext(): ContextAPI\n\n  /**\n   * Instruments a function by automatically creating a span activated on its\n   * scope.\n   *\n   * The span will automatically be finished when one of these conditions is\n   * met:\n   *\n   * * The function returns a promise, in which case the span will finish when\n   * the promise is resolved or rejected.\n   * * The function takes a callback as its second parameter, in which case the\n   * span will finish when that callback is called.\n   * * The function doesn't accept a callback and doesn't return a promise, in\n   * which case the span will finish at the end of the function execution.\n   *\n   */\n  trace<T>(\n    type: SpanTypes,\n    fn: (span?: Span, done?: (error?: Error) => any) => Promise<T>\n  ): Promise<T>\n  trace<T>(\n    type: SpanTypes,\n    fn: (span?: Span, done?: (error?: Error) => any) => T\n  ): T\n  trace<T>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: (span?: Span, done?: (error?: Error) => any) => Promise<T>\n  ): Promise<T>\n  trace<T>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: (span?: Span, done?: (error?: Error) => any) => T\n  ): T\n\n  /**\n   * Wrap a function to automatically create a span activated on its\n   * scope when it's called.\n   *\n   * The span will automatically be finished when one of these conditions is\n   * met:\n   *\n   * * The function returns a promise, in which case the span will finish when\n   * the promise is resolved or rejected.\n   * * The function takes a callback as its last parameter, in which case the\n   * span will finish when that callback is called.\n   * * The function doesn't accept a callback and doesn't return a promise, in\n   * which case the span will finish at the end of the function execution.\n   */\n  wrap<T = (...args: Array<any>) => any>(type: SpanTypes, fn: T): T\n  wrap<T = (...args: Array<any>) => any>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: T\n  ): T\n  wrap<T = (...args: Array<any>) => any>(\n    type: SpanTypes,\n    options: (...args: any[]) => TracerSpanOptions,\n    fn: T\n  ): T\n\n  /**\n   * Starts and returns a new Span representing a logical unit of work.\n   *\n   * This method do NOT modify the current Context by default. In result, any inner span will not\n   * automatically set its parent context to the span created by this method unless manually activate\n   * context via `tracer.getContext().with`. `trace`, or `wrap` is generally recommended as it gracefully\n   * handles context activation. (ref: https://github.com/open-telemetry/opentelemetry-js/issues/1923)\n   */\n  startSpan(type: SpanTypes): Span\n  startSpan(type: SpanTypes, options: TracerSpanOptions): Span\n\n  /**\n   * Returns currently activated span if current context is in the scope of the span.\n   * Returns undefined otherwise.\n   */\n  getActiveScopeSpan(): Span | undefined\n\n  /**\n   * Returns trace propagation data for the currently active context. The format is equal to data provided\n   * through the OpenTelemetry propagator API.\n   */\n  getTracePropagationData(): ClientTraceDataEntry[]\n}\n\ntype NextAttributeNames =\n  | 'next.route'\n  | 'next.page'\n  | 'next.rsc'\n  | 'next.segment'\n  | 'next.span_name'\n  | 'next.span_type'\n  | 'next.clientComponentLoadCount'\ntype OTELAttributeNames = `http.${string}` | `net.${string}`\ntype AttributeNames = NextAttributeNames | OTELAttributeNames\n\n/** we use this map to propagate attributes from nested spans to the top span */\nconst rootSpanAttributesStore = new Map<\n  number,\n  Map<AttributeNames, AttributeValue | undefined>\n>()\nconst rootSpanIdKey = api.createContextKey('next.rootSpanId')\nlet lastSpanId = 0\nconst getSpanId = () => lastSpanId++\n\nexport interface ClientTraceDataEntry {\n  key: string\n  value: string\n}\n\nconst clientTraceDataSetter: TextMapSetter<ClientTraceDataEntry[]> = {\n  set(carrier, key, value) {\n    carrier.push({\n      key,\n      value,\n    })\n  },\n}\n\nclass NextTracerImpl implements NextTracer {\n  /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */\n  private getTracerInstance(): Tracer {\n    return trace.getTracer('next.js', '0.0.1')\n  }\n\n  public getContext(): ContextAPI {\n    return context\n  }\n\n  public getTracePropagationData(): ClientTraceDataEntry[] {\n    const activeContext = context.active()\n    const entries: ClientTraceDataEntry[] = []\n    propagation.inject(activeContext, entries, clientTraceDataSetter)\n    return entries\n  }\n\n  public getActiveScopeSpan(): Span | undefined {\n    return trace.getSpan(context?.active())\n  }\n\n  public withPropagatedContext<T, C>(\n    carrier: C,\n    fn: () => T,\n    getter?: TextMapGetter<C>\n  ): T {\n    const activeContext = context.active()\n    if (trace.getSpanContext(activeContext)) {\n      // Active span is already set, too late to propagate.\n      return fn()\n    }\n    const remoteContext = propagation.extract(activeContext, carrier, getter)\n    return context.with(remoteContext, fn)\n  }\n\n  // Trace, wrap implementation is inspired by datadog trace implementation\n  // (https://datadoghq.dev/dd-trace-js/interfaces/tracer.html#trace).\n  public trace<T>(\n    type: SpanTypes,\n    fn: (span?: Span, done?: (error?: Error) => any) => Promise<T>\n  ): Promise<T>\n  public trace<T>(\n    type: SpanTypes,\n    fn: (span?: Span, done?: (error?: Error) => any) => T\n  ): T\n  public trace<T>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: (span?: Span, done?: (error?: Error) => any) => Promise<T>\n  ): Promise<T>\n  public trace<T>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: (span?: Span, done?: (error?: Error) => any) => T\n  ): T\n  public trace<T>(...args: Array<any>) {\n    const [type, fnOrOptions, fnOrEmpty] = args\n\n    // coerce options form overload\n    const {\n      fn,\n      options,\n    }: {\n      fn: (span?: Span, done?: (error?: Error) => any) => T | Promise<T>\n      options: TracerSpanOptions\n    } =\n      typeof fnOrOptions === 'function'\n        ? {\n            fn: fnOrOptions,\n            options: {},\n          }\n        : {\n            fn: fnOrEmpty,\n            options: { ...fnOrOptions },\n          }\n\n    const spanName = options.spanName ?? type\n\n    if (\n      (!NextVanillaSpanAllowlist.includes(type) &&\n        process.env.NEXT_OTEL_VERBOSE !== '1') ||\n      options.hideSpan\n    ) {\n      return fn()\n    }\n\n    // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n    let spanContext = this.getSpanContext(\n      options?.parentSpan ?? this.getActiveScopeSpan()\n    )\n    let isRootSpan = false\n\n    if (!spanContext) {\n      spanContext = context?.active() ?? ROOT_CONTEXT\n      isRootSpan = true\n    } else if (trace.getSpanContext(spanContext)?.isRemote) {\n      isRootSpan = true\n    }\n\n    const spanId = getSpanId()\n\n    options.attributes = {\n      'next.span_name': spanName,\n      'next.span_type': type,\n      ...options.attributes,\n    }\n\n    return context.with(spanContext.setValue(rootSpanIdKey, spanId), () =>\n      this.getTracerInstance().startActiveSpan(\n        spanName,\n        options,\n        (span: Span) => {\n          const startTime =\n            'performance' in globalThis && 'measure' in performance\n              ? globalThis.performance.now()\n              : undefined\n\n          const onCleanup = () => {\n            rootSpanAttributesStore.delete(spanId)\n            if (\n              startTime &&\n              process.env.NEXT_OTEL_PERFORMANCE_PREFIX &&\n              LogSpanAllowList.includes(type || ('' as any))\n            ) {\n              performance.measure(\n                `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(\n                  type.split('.').pop() || ''\n                ).replace(\n                  /[A-Z]/g,\n                  (match: string) => '-' + match.toLowerCase()\n                )}`,\n                {\n                  start: startTime,\n                  end: performance.now(),\n                }\n              )\n            }\n          }\n\n          if (isRootSpan) {\n            rootSpanAttributesStore.set(\n              spanId,\n              new Map(\n                Object.entries(options.attributes ?? {}) as [\n                  AttributeNames,\n                  AttributeValue | undefined,\n                ][]\n              )\n            )\n          }\n          try {\n            if (fn.length > 1) {\n              return fn(span, (err) => closeSpanWithError(span, err))\n            }\n\n            const result = fn(span)\n            if (isThenable(result)) {\n              // If there's error make sure it throws\n              return result\n                .then((res) => {\n                  span.end()\n                  // Need to pass down the promise result,\n                  // it could be react stream response with error { error, stream }\n                  return res\n                })\n                .catch((err) => {\n                  closeSpanWithError(span, err)\n                  throw err\n                })\n                .finally(onCleanup)\n            } else {\n              span.end()\n              onCleanup()\n            }\n\n            return result\n          } catch (err: any) {\n            closeSpanWithError(span, err)\n            onCleanup()\n            throw err\n          }\n        }\n      )\n    )\n  }\n\n  public wrap<T = (...args: Array<any>) => any>(type: SpanTypes, fn: T): T\n  public wrap<T = (...args: Array<any>) => any>(\n    type: SpanTypes,\n    options: TracerSpanOptions,\n    fn: T\n  ): T\n  public wrap<T = (...args: Array<any>) => any>(\n    type: SpanTypes,\n    options: (...args: any[]) => TracerSpanOptions,\n    fn: T\n  ): T\n  public wrap(...args: Array<any>) {\n    const tracer = this\n    const [name, options, fn] =\n      args.length === 3 ? args : [args[0], {}, args[1]]\n\n    if (\n      !NextVanillaSpanAllowlist.includes(name) &&\n      process.env.NEXT_OTEL_VERBOSE !== '1'\n    ) {\n      return fn\n    }\n\n    return function (this: any) {\n      let optionsObj = options\n      if (typeof optionsObj === 'function' && typeof fn === 'function') {\n        optionsObj = optionsObj.apply(this, arguments)\n      }\n\n      const lastArgId = arguments.length - 1\n      const cb = arguments[lastArgId]\n\n      if (typeof cb === 'function') {\n        const scopeBoundCb = tracer.getContext().bind(context.active(), cb)\n        return tracer.trace(name, optionsObj, (_span, done) => {\n          arguments[lastArgId] = function (err: any) {\n            done?.(err)\n            return scopeBoundCb.apply(this, arguments)\n          }\n\n          return fn.apply(this, arguments)\n        })\n      } else {\n        return tracer.trace(name, optionsObj, () => fn.apply(this, arguments))\n      }\n    }\n  }\n\n  public startSpan(type: SpanTypes): Span\n  public startSpan(type: SpanTypes, options: TracerSpanOptions): Span\n  public startSpan(...args: Array<any>): Span {\n    const [type, options]: [string, TracerSpanOptions | undefined] = args as any\n\n    const spanContext = this.getSpanContext(\n      options?.parentSpan ?? this.getActiveScopeSpan()\n    )\n    return this.getTracerInstance().startSpan(type, options, spanContext)\n  }\n\n  private getSpanContext(parentSpan?: Span) {\n    const spanContext = parentSpan\n      ? trace.setSpan(context.active(), parentSpan)\n      : undefined\n\n    return spanContext\n  }\n\n  public getRootSpanAttributes() {\n    const spanId = context.active().getValue(rootSpanIdKey) as number\n    return rootSpanAttributesStore.get(spanId)\n  }\n\n  public setRootSpanAttribute(key: AttributeNames, value: AttributeValue) {\n    const spanId = context.active().getValue(rootSpanIdKey) as number\n    const attributes = rootSpanAttributesStore.get(spanId)\n    if (attributes && !attributes.has(key)) {\n      attributes.set(key, value)\n    }\n  }\n}\n\nconst getTracer = (() => {\n  const tracer = new NextTracerImpl()\n\n  return () => tracer\n})()\n\nexport { getTracer, SpanStatusCode, SpanKind }\nexport type { NextTracer, Span, SpanOptions, ContextAPI, TracerSpanOptions }\n","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n","import type { NonStaticRenderStage } from './app-render/staged-rendering'\nimport type { RequestStore } from './app-render/work-unit-async-storage.external'\n\nexport function isHangingPromiseRejectionError(\n  err: unknown\n): err is HangingPromiseRejectionError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === HANGING_PROMISE_REJECTION\n}\n\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION'\n\nclass HangingPromiseRejectionError extends Error {\n  public readonly digest = HANGING_PROMISE_REJECTION\n\n  constructor(\n    public readonly route: string,\n    public readonly expression: string\n  ) {\n    super(\n      `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context. This occurred at route \"${route}\".`\n    )\n  }\n}\n\ntype AbortListeners = Array<(err: unknown) => void>\nconst abortListenersBySignal = new WeakMap<AbortSignal, AbortListeners>()\n\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for cacheComponents where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  route: string,\n  expression: string\n): Promise<T> {\n  if (signal.aborted) {\n    return Promise.reject(new HangingPromiseRejectionError(route, expression))\n  } else {\n    const hangingPromise = new Promise<T>((_, reject) => {\n      const boundRejection = reject.bind(\n        null,\n        new HangingPromiseRejectionError(route, expression)\n      )\n      let currentListeners = abortListenersBySignal.get(signal)\n      if (currentListeners) {\n        currentListeners.push(boundRejection)\n      } else {\n        const listeners = [boundRejection]\n        abortListenersBySignal.set(signal, listeners)\n        signal.addEventListener(\n          'abort',\n          () => {\n            for (let i = 0; i < listeners.length; i++) {\n              listeners[i]()\n            }\n          },\n          { once: true }\n        )\n      }\n    })\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject)\n    return hangingPromise\n  }\n}\n\nfunction ignoreReject() {}\n\nexport function makeDevtoolsIOAwarePromise<T>(\n  underlying: T,\n  requestStore: RequestStore,\n  stage: NonStaticRenderStage\n): Promise<T> {\n  if (requestStore.stagedRendering) {\n    // We resolve each stage in a timeout, so React DevTools will pick this up as IO.\n    return requestStore.stagedRendering.delayUntilStage(\n      stage,\n      undefined,\n      underlying\n    )\n  }\n  // in React DevTools if we resolve in a setTimeout we will observe\n  // the promise resolution as something that can suspend a boundary or root.\n  return new Promise<T>((resolve) => {\n    // Must use setTimeout to be considered IO React DevTools. setImmediate will not work.\n    setTimeout(() => {\n      resolve(underlying)\n    }, 0)\n  })\n}\n","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__'\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__'\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__'\nexport const ROOT_LAYOUT_BOUNDARY_NAME = '__next_root_layout_boundary__'\n","export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = (cb: ScheduledFn<void>) => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = (cb: ScheduledFn<void>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n","// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n","export function createPromiseWithResolvers<T>(): PromiseWithResolvers<T> {\n  // Shim of Stage 4 Promise.withResolvers proposal\n  let resolve: (value: T | PromiseLike<T>) => void\n  let reject: (reason: any) => void\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res\n    reject = rej\n  })\n  return { resolve: resolve!, reject: reject!, promise }\n}\n","import { InvariantError } from '../../shared/lib/invariant-error'\nimport { createPromiseWithResolvers } from '../../shared/lib/promise-with-resolvers'\n\nexport enum RenderStage {\n  Static = 1,\n  Runtime = 2,\n  Dynamic = 3,\n}\n\nexport type NonStaticRenderStage = RenderStage.Runtime | RenderStage.Dynamic\n\nexport class StagedRenderingController {\n  currentStage: RenderStage = RenderStage.Static\n\n  private runtimeStagePromise = createPromiseWithResolvers<void>()\n  private dynamicStagePromise = createPromiseWithResolvers<void>()\n\n  constructor(private abortSignal: AbortSignal | null = null) {\n    if (abortSignal) {\n      abortSignal.addEventListener(\n        'abort',\n        () => {\n          const { reason } = abortSignal\n          if (this.currentStage < RenderStage.Runtime) {\n            this.runtimeStagePromise.promise.catch(ignoreReject) // avoid unhandled rejections\n            this.runtimeStagePromise.reject(reason)\n          }\n          if (this.currentStage < RenderStage.Dynamic) {\n            this.dynamicStagePromise.promise.catch(ignoreReject) // avoid unhandled rejections\n            this.dynamicStagePromise.reject(reason)\n          }\n        },\n        { once: true }\n      )\n    }\n  }\n\n  advanceStage(stage: NonStaticRenderStage) {\n    // If we're already at the target stage or beyond, do nothing.\n    // (this can happen e.g. if sync IO advanced us to the dynamic stage)\n    if (this.currentStage >= stage) {\n      return\n    }\n    this.currentStage = stage\n    // Note that we might be going directly from Static to Dynamic,\n    // so we need to resolve the runtime stage as well.\n    if (stage >= RenderStage.Runtime) {\n      this.runtimeStagePromise.resolve()\n    }\n    if (stage >= RenderStage.Dynamic) {\n      this.dynamicStagePromise.resolve()\n    }\n  }\n\n  private getStagePromise(stage: NonStaticRenderStage): Promise<void> {\n    switch (stage) {\n      case RenderStage.Runtime: {\n        return this.runtimeStagePromise.promise\n      }\n      case RenderStage.Dynamic: {\n        return this.dynamicStagePromise.promise\n      }\n      default: {\n        stage satisfies never\n        throw new InvariantError(`Invalid render stage: ${stage}`)\n      }\n    }\n  }\n\n  waitForStage(stage: NonStaticRenderStage) {\n    return this.getStagePromise(stage)\n  }\n\n  delayUntilStage<T>(\n    stage: NonStaticRenderStage,\n    displayName: string | undefined,\n    resolvedValue: T\n  ) {\n    const ioTriggerPromise = this.getStagePromise(stage)\n\n    const promise = makeDevtoolsIOPromiseFromIOTrigger(\n      ioTriggerPromise,\n      displayName,\n      resolvedValue\n    )\n\n    // Analogously to `makeHangingPromise`, we might reject this promise if the signal is invoked.\n    // (e.g. in the case where we don't want want the render to proceed to the dynamic stage and abort it).\n    // We shouldn't consider this an unhandled rejection, so we attach a noop catch handler here to suppress this warning.\n    if (this.abortSignal) {\n      promise.catch(ignoreReject)\n    }\n    return promise\n  }\n}\n\nfunction ignoreReject() {}\n\n// TODO(restart-on-cache-miss): the layering of `delayUntilStage`,\n// `makeDevtoolsIOPromiseFromIOTrigger` and and `makeDevtoolsIOAwarePromise`\n// is confusing, we should clean it up.\nfunction makeDevtoolsIOPromiseFromIOTrigger<T>(\n  ioTrigger: Promise<any>,\n  displayName: string | undefined,\n  resolvedValue: T\n): Promise<T> {\n  // If we create a `new Promise` and give it a displayName\n  // (with no userspace code above us in the stack)\n  // React Devtools will use it as the IO cause when determining \"suspended by\".\n  // In particular, it should shadow any inner IO that resolved/rejected the promise\n  // (in case of staged rendering, this will be the `setTimeout` that triggers the relevant stage)\n  const promise = new Promise<T>((resolve, reject) => {\n    ioTrigger.then(resolve.bind(null, resolvedValue), reject)\n  })\n  if (displayName !== undefined) {\n    // @ts-expect-error\n    promise.displayName = displayName\n  }\n  return promise\n}\n","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n  PrerenderStoreModernRuntime,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport {\n  getRuntimeStagePromise,\n  throwForMissingRequestStore,\n  workUnitAsyncStorage,\n} from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n  ROOT_LAYOUT_BOUNDARY_NAME,\n} from '../../lib/framework/boundary-constants'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { RenderStage } from './staged-rendering'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicErrorWithStack: null | Error\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspenseAboveBody: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasAllowedDynamic: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspenseAboveBody: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasAllowedDynamic: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'cache':\n      case 'unstable-cache':\n        // Inside cache scopes, marking a scope as dynamic has no effect,\n        // because the outer cache scope creates a cache boundary. This is\n        // subtly different from reading a dynamic data source, which is\n        // forbidden inside a cache scope.\n        return\n      case 'private-cache':\n        // A private cache scope is already dynamic by definition.\n        return\n      case 'prerender-legacy':\n      case 'prerender-ppr':\n      case 'request':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-ppr':\n        return postponeWithTracking(\n          store.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      case 'prerender-legacy':\n        workUnitStore.revalidate = 0\n\n        // We aren't prerendering, but we are generating a static page. We need\n        // to bail out of static generation.\n        const err = new DynamicServerError(\n          `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n        )\n        store.dynamicUsageDescription = expression\n        store.dynamicUsageStack = err.stack\n\n        throw err\n      case 'request':\n        if (process.env.NODE_ENV !== 'production') {\n          workUnitStore.usedDynamic = true\n        }\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\n/**\n * This function is meant to be used when prerendering without cacheComponents or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(workUnitStore: WorkUnitStore) {\n  switch (workUnitStore.type) {\n    case 'cache':\n    case 'unstable-cache':\n      // Inside cache scopes, marking a scope as dynamic has no effect,\n      // because the outer cache scope creates a cache boundary. This is\n      // subtly different from reading a dynamic data source, which is\n      // forbidden inside a cache scope.\n      return\n    case 'private-cache':\n      // A private cache scope is already dynamic by definition.\n      return\n    case 'prerender':\n    case 'prerender-runtime':\n    case 'prerender-legacy':\n    case 'prerender-ppr':\n    case 'prerender-client':\n      break\n    case 'request':\n      if (process.env.NODE_ENV !== 'production') {\n        workUnitStore.usedDynamic = true\n      }\n      break\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  // It is important that we set this tracking value after aborting. Aborts are executed\n  // synchronously except for the case where you abort during render itself. By setting this\n  // value late we can use it to determine if any of the aborted tasks are the task that\n  // called the sync IO expression in the first place.\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of the prerender stage\n  if (requestStore.stagedRendering) {\n    // TODO: error for sync IO in the runtime stage\n    // (which is not currently covered by the validation render in `spawnDynamicValidationInDev`)\n    requestStore.stagedRendering.advanceStage(RenderStage.Dynamic)\n  }\n}\n\n/**\n * use this function when prerendering with cacheComponents. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in cacheComponents mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const prerenderSignal = prerenderStore.controller.signal\n  if (prerenderSignal.aborted === false) {\n    // TODO it would be better to move this aborted check into the callsite so we can avoid making\n    // the error object when it isn't relevant to the aborting of the prerender however\n    // since we need the throw semantics regardless of whether we abort it is easier to land\n    // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n    // to ideal implementation\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n    // It is important that we set this tracking value after aborting. Aborts are executed\n    // synchronously except for the case where you abort during render itself. By setting this\n    // value late we can use it to determine if any of the aborted tasks are the task that\n    // called the sync IO expression in the first place.\n    const dynamicTracking = prerenderStore.dynamicTracking\n    if (dynamicTracking) {\n      if (dynamicTracking.syncDynamicErrorWithStack === null) {\n        dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n      }\n    }\n  }\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createRenderInBrowserAbortSignal(): AbortSignal {\n  const controller = new AbortController()\n  controller.abort(new BailoutToCSRError('Render in Browser'))\n  return controller.signal\n}\n\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */\nexport function createHangingInputAbortSignal(\n  workUnitStore: WorkUnitStore\n): AbortSignal | undefined {\n  switch (workUnitStore.type) {\n    case 'prerender':\n    case 'prerender-runtime':\n      const controller = new AbortController()\n\n      if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If\n        // the input we're waiting on is coming from another cache, we do want\n        // to wait for it so that we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(() => {\n          controller.abort()\n        })\n      } else {\n        // Otherwise we're in the final render and we should already have all\n        // our caches filled.\n        // If the prerender uses stages, we have wait until the runtime stage,\n        // at which point all runtime inputs will be resolved.\n        // (otherwise, a runtime prerender might consider `cookies()` hanging\n        //  even though they'd resolve in the next task.)\n        //\n        // We might still be waiting on some microtasks so we\n        // wait one tick before giving up. When we give up, we still want to\n        // render the content of this cache as deeply as we can so that we can\n        // suspend as deeply as possible in the tree or not at all if we don't\n        // end up waiting for the input.\n        const runtimeStagePromise = getRuntimeStagePromise(workUnitStore)\n        if (runtimeStagePromise) {\n          runtimeStagePromise.then(() =>\n            scheduleOnNextTick(() => controller.abort())\n          )\n        } else {\n          scheduleOnNextTick(() => controller.abort())\n        }\n      }\n\n      return controller.signal\n    case 'prerender-client':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'request':\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      return undefined\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workStore && workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-client':\n      case 'prerender': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n\n        if (fallbackParams && fallbackParams.size > 0) {\n          // We are in a prerender with cacheComponents semantics. We are going to\n          // hang here and never resolve. This will cause the currently\n          // rendering component to effectively be a dynamic hole.\n          React.use(\n            makeHangingPromise(\n              workUnitStore.renderSignal,\n              workStore.route,\n              expression\n            )\n          )\n        }\n        break\n      }\n      case 'prerender-ppr': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          return postponeWithTracking(\n            workStore.route,\n            expression,\n            workUnitStore.dynamicTracking\n          )\n        }\n        break\n      }\n      case 'prerender-runtime':\n        throw new InvariantError(\n          `\\`${expression}\\` was called during a runtime prerender. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'cache':\n      case 'private-cache':\n        throw new InvariantError(\n          `\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'prerender-legacy':\n      case 'request':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\nexport function useDynamicSearchParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (!workStore) {\n    // We assume pages router context and just return\n    return\n  }\n\n  if (!workUnitStore) {\n    throwForMissingRequestStore(expression)\n  }\n\n  switch (workUnitStore.type) {\n    case 'prerender-client': {\n      React.use(\n        makeHangingPromise(\n          workUnitStore.renderSignal,\n          workStore.route,\n          expression\n        )\n      )\n      break\n    }\n    case 'prerender-legacy':\n    case 'prerender-ppr': {\n      if (workStore.forceStatic) {\n        return\n      }\n      throw new BailoutToCSRError(expression)\n    }\n    case 'prerender':\n    case 'prerender-runtime':\n      throw new InvariantError(\n        `\\`${expression}\\` was called from a Server Component. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n      )\n    case 'cache':\n    case 'unstable-cache':\n    case 'private-cache':\n      throw new InvariantError(\n        `\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n      )\n    case 'request':\n      return\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\n\n// Common implicit body tags that React will treat as body when placed directly in html\nconst bodyAndImplicitTags =\n  'body|div|main|section|article|aside|header|footer|nav|form|p|span|h1|h2|h3|h4|h5|h6'\n\n// Detects when RootLayoutBoundary (our framework marker component) appears\n// after Suspense in the component stack, indicating the root layout is wrapped\n// within a Suspense boundary. Ensures no body/html/implicit-body components are in between.\n//\n// Example matches:\n//   at Suspense (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\n//\n// Or with other components in between (but not body/html/implicit-body):\n//   at Suspense (<anonymous>)\n//   at SomeComponent (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\nconst hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex = new RegExp(\n  `\\\\n\\\\s+at Suspense \\\\(<anonymous>\\\\)(?:(?!\\\\n\\\\s+at (?:${bodyAndImplicitTags}) \\\\(<anonymous>\\\\))[\\\\s\\\\S])*?\\\\n\\\\s+at ${ROOT_LAYOUT_BOUNDARY_NAME} \\\\([^\\\\n]*\\\\)`\n)\n\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  workStore: WorkStore,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (\n    hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex.test(\n      componentStack\n    )\n  ) {\n    // For Suspense within body, the prelude wouldn't be empty so it wouldn't violate the empty static shells rule.\n    // But if you have Suspense above body, the prelude is empty but we allow that because having Suspense\n    // is an explicit signal from the user that they acknowledge the empty shell and want dynamic rendering.\n    dynamicValidation.hasAllowedDynamic = true\n    dynamicValidation.hasSuspenseAboveBody = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    // this error had a Suspense boundary above it so we don't need to report it as a source\n    // of disallowed\n    dynamicValidation.hasAllowedDynamic = true\n    return\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    // This task was the task that called the sync error.\n    dynamicValidation.dynamicErrors.push(\n      clientDynamic.syncDynamicErrorWithStack\n    )\n    return\n  } else {\n    const message =\n      `Route \"${workStore.route}\": Uncached data was accessed outside of ` +\n      '<Suspense>. This delays the entire page from rendering, resulting in a ' +\n      'slow user experience. Learn more: ' +\n      'https://nextjs.org/docs/messages/blocking-route'\n    const error = createErrorWithComponentOrOwnerStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\n/**\n * In dev mode, we prefer using the owner stack, otherwise the provided\n * component stack is used.\n */\nfunction createErrorWithComponentOrOwnerStack(\n  message: string,\n  componentStack: string\n) {\n  const ownerStack =\n    process.env.NODE_ENV !== 'production' && React.captureOwnerStack\n      ? React.captureOwnerStack()\n      : null\n\n  const error = new Error(message)\n  error.stack = error.name + ': ' + message + (ownerStack ?? componentStack)\n  return error\n}\n\nexport enum PreludeState {\n  Full = 0,\n  Empty = 1,\n  Errored = 2,\n}\n\nexport function logDisallowedDynamicError(\n  workStore: WorkStore,\n  error: Error\n): void {\n  console.error(error)\n\n  if (!workStore.dev) {\n    if (workStore.hasReadableErrorStacks) {\n      console.error(\n        `To get a more detailed stack trace and pinpoint the issue, start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.`\n      )\n    } else {\n      console.error(`To get a more detailed stack trace and pinpoint the issue, try one of the following:\n  - Start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.\n  - Rerun the production build with \\`next build --debug-prerender\\` to generate better stack traces.`)\n    }\n  }\n}\n\nexport function throwIfDisallowedDynamic(\n  workStore: WorkStore,\n  prelude: PreludeState,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState\n): void {\n  if (serverDynamic.syncDynamicErrorWithStack) {\n    logDisallowedDynamicError(\n      workStore,\n      serverDynamic.syncDynamicErrorWithStack\n    )\n    throw new StaticGenBailoutError()\n  }\n\n  if (prelude !== PreludeState.Full) {\n    if (dynamicValidation.hasSuspenseAboveBody) {\n      // This route has opted into allowing fully dynamic rendering\n      // by including a Suspense boundary above the body. In this case\n      // a lack of a shell is not considered disallowed so we simply return\n      return\n    }\n\n    // We didn't have any sync bailouts but there may be user code which\n    // blocked the root. We would have captured these during the prerender\n    // and can log them here and then terminate the build/validating render\n    const dynamicErrors = dynamicValidation.dynamicErrors\n    if (dynamicErrors.length > 0) {\n      for (let i = 0; i < dynamicErrors.length; i++) {\n        logDisallowedDynamicError(workStore, dynamicErrors[i])\n      }\n\n      throw new StaticGenBailoutError()\n    }\n\n    // If we got this far then the only other thing that could be blocking\n    // the root is dynamic Viewport. If this is dynamic then\n    // you need to opt into that by adding a Suspense boundary above the body\n    // to indicate your are ok with fully dynamic rendering.\n    if (dynamicValidation.hasDynamicViewport) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) without explicitly allowing fully dynamic rendering. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-viewport`\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    if (prelude === PreludeState.Empty) {\n      // If we ever get this far then we messed up the tracking of invalid dynamic.\n      // We still adhere to the constraint that you must produce a shell but invite the\n      // user to report this as a bug in Next.js.\n      console.error(\n        `Route \"${workStore.route}\" did not produce a static shell and Next.js was unable to determine a reason. This is a bug in Next.js.`\n      )\n      throw new StaticGenBailoutError()\n    }\n  } else {\n    if (\n      dynamicValidation.hasAllowedDynamic === false &&\n      dynamicValidation.hasDynamicMetadata\n    ) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) when the rest of the route does not. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-metadata`\n      )\n      throw new StaticGenBailoutError()\n    }\n  }\n}\n\nexport function delayUntilRuntimeStage<T>(\n  prerenderStore: PrerenderStoreModernRuntime,\n  result: Promise<T>\n): Promise<T> {\n  if (prerenderStore.runtimeStagePromise) {\n    return prerenderStore.runtimeStagePromise.then(() => result)\n  }\n  return result\n}\n","const noop = () => {}\n\nlet registry: FinalizationRegistry<WeakRef<ReadableStream>> | undefined\n\nif (globalThis.FinalizationRegistry) {\n  registry = new FinalizationRegistry((weakRef: WeakRef<ReadableStream>) => {\n    const stream = weakRef.deref()\n    if (stream && !stream.locked) {\n      stream.cancel('Response object has been garbage collected').then(noop)\n    }\n  })\n}\n\n/**\n * Clones a response by teeing the body so we can return two independent\n * ReadableStreams from it. This avoids the bug in the undici library around\n * response cloning.\n *\n * After cloning, the original response's body will be consumed and closed.\n *\n * @see https://github.com/vercel/next.js/pull/73274\n *\n * @param original - The original response to clone.\n * @returns A tuple containing two independent clones of the original response.\n */\nexport function cloneResponse(original: Response): [Response, Response] {\n  // If the response has no body, then we can just return the original response\n  // twice because it's immutable.\n  if (!original.body) {\n    return [original, original]\n  }\n\n  const [body1, body2] = original.body.tee()\n\n  const cloned1 = new Response(body1, {\n    status: original.status,\n    statusText: original.statusText,\n    headers: original.headers,\n  })\n\n  Object.defineProperty(cloned1, 'url', {\n    value: original.url,\n    // How the original response.url behaves\n    configurable: true,\n    enumerable: true,\n    writable: false,\n  })\n\n  // The Fetch Standard allows users to skip consuming the response body by\n  // relying on garbage collection to release connection resources.\n  // https://github.com/nodejs/undici?tab=readme-ov-file#garbage-collection\n  //\n  // To cancel the stream you then need to cancel both resulting branches.\n  // Teeing a stream will generally lock it for the duration, preventing other\n  // readers from locking it.\n  // https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/tee\n\n  // cloned2 is stored in a react cache and cloned for subsequent requests.\n  // It is the original request, and is is garbage collected by a\n  // FinalizationRegistry in Undici, but since we're tee-ing the stream\n  // ourselves, we need to cancel clone1's stream (the response returned from\n  // our dedupe fetch) when clone1 is reclaimed, otherwise we leak memory.\n  if (registry && cloned1.body) {\n    registry.register(cloned1, new WeakRef(cloned1.body))\n  }\n\n  const cloned2 = new Response(body2, {\n    status: original.status,\n    statusText: original.statusText,\n    headers: original.headers,\n  })\n\n  Object.defineProperty(cloned2, 'url', {\n    value: original.url,\n    // How the original response.url behaves\n    configurable: true,\n    enumerable: true,\n    writable: false,\n  })\n\n  return [cloned1, cloned2]\n}\n","/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */\nimport * as React from 'react'\nimport { cloneResponse } from './clone-response'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n\n// Headers that should not affect deduplication\n// traceparent and tracestate are used for distributed tracing and should not affect cache keys\nconst headersToExcludeInCacheKey = new Set(['traceparent', 'tracestate'])\n\nfunction generateCacheKey(request: Request): string {\n  // We pick the fields that goes into the key used to dedupe requests.\n  // We don't include the `cache` field, because we end up using whatever\n  // caching resulted from the first request.\n  // Notably we currently don't consider non-standard (or future) options.\n  // This might not be safe. TODO: warn for non-standard extensions differing.\n  // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n\n  const filteredHeaders = Array.from(request.headers.entries()).filter(\n    ([key]) => !headersToExcludeInCacheKey.has(key.toLowerCase())\n  )\n\n  return JSON.stringify([\n    request.method,\n    filteredHeaders,\n    request.mode,\n    request.redirect,\n    request.credentials,\n    request.referrer,\n    request.referrerPolicy,\n    request.integrity,\n  ])\n}\n\ntype CacheEntry = [\n  key: string,\n  promise: Promise<Response>,\n  response: Response | null,\n]\n\nexport function createDedupeFetch(originalFetch: typeof fetch) {\n  const getCacheEntries = React.cache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    (url: string): CacheEntry[] => []\n  )\n\n  return function dedupeFetch(\n    resource: URL | RequestInfo,\n    options?: RequestInit\n  ): Promise<Response> {\n    if (options && options.signal) {\n      // If we're passed a signal, then we assume that\n      // someone else controls the lifetime of this object and opts out of\n      // caching. It's effectively the opt-out mechanism.\n      // Ideally we should be able to check this on the Request but\n      // it always gets initialized with its own signal so we don't\n      // know if it's supposed to override - unless we also override the\n      // Request constructor.\n      return originalFetch(resource, options)\n    }\n    // Normalize the Request\n    let url: string\n    let cacheKey: string\n    if (typeof resource === 'string' && !options) {\n      // Fast path.\n      cacheKey = simpleCacheKey\n      url = resource\n    } else {\n      // Normalize the request.\n      // if resource is not a string or a URL (its an instance of Request)\n      // then do not instantiate a new Request but instead\n      // reuse the request as to not disturb the body in the event it's a ReadableStream.\n      const request =\n        typeof resource === 'string' || resource instanceof URL\n          ? new Request(resource, options)\n          : resource\n      if (\n        (request.method !== 'GET' && request.method !== 'HEAD') ||\n        request.keepalive\n      ) {\n        // We currently don't dedupe requests that might have side-effects. Those\n        // have to be explicitly cached. We assume that the request doesn't have a\n        // body if it's GET or HEAD.\n        // keepalive gets treated the same as if you passed a custom cache signal.\n        return originalFetch(resource, options)\n      }\n      cacheKey = generateCacheKey(request)\n      url = request.url\n    }\n\n    const cacheEntries = getCacheEntries(url)\n    for (let i = 0, j = cacheEntries.length; i < j; i += 1) {\n      const [key, promise] = cacheEntries[i]\n      if (key === cacheKey) {\n        return promise.then(() => {\n          const response = cacheEntries[i][2]\n          if (!response) throw new InvariantError('No cached response')\n\n          // We're cloning the response using this utility because there exists\n          // a bug in the undici library around response cloning. See the\n          // following pull request for more details:\n          // https://github.com/vercel/next.js/pull/73274\n          const [cloned1, cloned2] = cloneResponse(response)\n          cacheEntries[i][2] = cloned2\n          return cloned1\n        })\n      }\n    }\n\n    // We pass the original arguments here in case normalizing the Request\n    // doesn't include all the options in this environment.\n    const promise = originalFetch(resource, options)\n    const entry: CacheEntry = [cacheKey, promise, null]\n    cacheEntries.push(entry)\n\n    return promise.then((response) => {\n      // We're cloning the response using this utility because there exists\n      // a bug in the undici library around response cloning. See the\n      // following pull request for more details:\n      // https://github.com/vercel/next.js/pull/73274\n      const [cloned1, cloned2] = cloneResponse(response)\n      entry[2] = cloned2\n      return cloned1\n    })\n  }\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type RenderResult from '../render-result'\nimport type { CacheControl, Revalidate } from '../lib/cache-control'\nimport type { RouteKind } from '../route-kind'\n\nexport interface ResponseCacheBase {\n  get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalCache\n      /**\n       * This is a hint to the cache to help it determine what kind of route\n       * this is so it knows where to look up the cache entry from. If not\n       * provided it will test the filesystem to check.\n       */\n      routeKind: RouteKind\n\n      /**\n       * True if this is a fallback request.\n       */\n      isFallback?: boolean\n\n      /**\n       * True if the route is enabled for PPR.\n       */\n      isRoutePPREnabled?: boolean\n    }\n  ): Promise<ResponseCacheEntry | null>\n}\n\n// The server components HMR cache might store other data as well in the future,\n// at which point this should be refactored to a discriminated union type.\nexport interface ServerComponentsHmrCache {\n  get(key: string): CachedFetchData | undefined\n  set(key: string, data: CachedFetchData): void\n}\n\nexport type CachedFetchData = {\n  headers: Record<string, string>\n  body: string\n  url: string\n  status?: number\n}\n\nexport const enum CachedRouteKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  REDIRECT = 'REDIRECT',\n  IMAGE = 'IMAGE',\n}\n\nexport interface CachedFetchValue {\n  kind: CachedRouteKind.FETCH\n  data: CachedFetchData\n  // tags are only present with file-system-cache\n  // fetch cache stores tags outside of cache entry\n  tags?: string[]\n  revalidate: number\n}\n\nexport interface CachedRedirectValue {\n  kind: CachedRouteKind.REDIRECT\n  props: Object\n}\n\nexport interface CachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  rscData: Buffer | undefined\n  status: number | undefined\n  postponed: string | undefined\n  headers: OutgoingHttpHeaders | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface CachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  pageData: Object\n  status: number | undefined\n  headers: OutgoingHttpHeaders | undefined\n}\n\nexport interface CachedRouteValue {\n  kind: CachedRouteKind.APP_ROUTE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  body: Buffer\n  status: number\n  headers: OutgoingHttpHeaders\n}\n\nexport interface CachedImageValue {\n  kind: CachedRouteKind.IMAGE\n  etag: string\n  upstreamEtag: string\n  buffer: Buffer\n  extension: string\n  isMiss?: boolean\n  isStale?: boolean\n}\n\nexport interface IncrementalCachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  rscData: Buffer | undefined\n  headers: OutgoingHttpHeaders | undefined\n  postponed: string | undefined\n  status: number | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface IncrementalCachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  pageData: Object\n  headers: OutgoingHttpHeaders | undefined\n  status: number | undefined\n}\n\nexport interface IncrementalResponseCacheEntry {\n  cacheControl?: CacheControl\n  /**\n   * timestamp in milliseconds to revalidate after\n   */\n  revalidateAfter?: Revalidate\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  isMiss?: boolean\n  value: Exclude<IncrementalCacheValue, CachedFetchValue> | null\n}\n\nexport interface IncrementalFetchCacheEntry {\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  value: CachedFetchValue\n}\n\nexport type IncrementalCacheEntry =\n  | IncrementalResponseCacheEntry\n  | IncrementalFetchCacheEntry\n\nexport type IncrementalCacheValue =\n  | CachedRedirectValue\n  | IncrementalCachedPageValue\n  | IncrementalCachedAppPageValue\n  | CachedImageValue\n  | CachedFetchValue\n  | CachedRouteValue\n\nexport type ResponseCacheValue =\n  | CachedRedirectValue\n  | CachedPageValue\n  | CachedAppPageValue\n  | CachedImageValue\n  | CachedRouteValue\n\nexport type ResponseCacheEntry = {\n  cacheControl?: CacheControl\n  value: ResponseCacheValue | null\n  isStale?: boolean | -1\n  isMiss?: boolean\n}\n\n/**\n * @param hasResolved whether the responseGenerator has resolved it's promise\n * @param previousCacheEntry the previous cache entry if it exists or the current\n */\nexport type ResponseGenerator = (state: {\n  hasResolved: boolean\n  previousCacheEntry?: IncrementalResponseCacheEntry | null\n  isRevalidating?: boolean\n  span?: any\n\n  /**\n   * When true, this indicates that the response generator is being called in a\n   * context where the response must be generated statically.\n   *\n   * CRITICAL: This should only currently be used when revalidating due to a\n   * dynamic RSC request.\n   */\n  forceStaticRender?: boolean\n}) => Promise<ResponseCacheEntry | null>\n\nexport const enum IncrementalCacheKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  IMAGE = 'IMAGE',\n}\n\nexport interface GetIncrementalFetchCacheContext {\n  kind: IncrementalCacheKind.FETCH\n  revalidate?: Revalidate\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  softTags?: string[]\n}\n\nexport interface GetIncrementalResponseCacheContext {\n  kind: Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH>\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback: boolean\n}\n\nexport interface SetIncrementalFetchCacheContext {\n  fetchCache: true\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  isImplicitBuildTimeCache?: boolean\n}\n\nexport interface SetIncrementalResponseCacheContext {\n  fetchCache?: false\n  cacheControl?: CacheControl\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback?: boolean\n}\n\nexport interface IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n\nexport interface IncrementalCache extends IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext\n  ): Promise<IncrementalFetchCacheEntry | null>\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: CachedFetchValue | null,\n    ctx: SetIncrementalFetchCacheContext\n  ): Promise<void>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n  revalidateTag(\n    tags: string | string[],\n    durations?: { expire?: number }\n  ): Promise<void>\n}\n","/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */\nexport class DetachedPromise<T = any> {\n  public readonly resolve: (value: T | PromiseLike<T>) => void\n  public readonly reject: (reason: any) => void\n  public readonly promise: Promise<T>\n\n  constructor() {\n    let resolve: (value: T | PromiseLike<T>) => void\n    let reject: (reason: any) => void\n\n    // Create the promise and assign the resolvers to the object.\n    this.promise = new Promise<T>((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n\n    // We know that resolvers is defined because the Promise constructor runs\n    // synchronously.\n    this.resolve = resolve!\n    this.reject = reject!\n  }\n}\n","import type { SchedulerFn } from './scheduler'\n\nimport { DetachedPromise } from './detached-promise'\n\ntype CacheKeyFn<K, C extends string | number | null> = (\n  key: K\n) => PromiseLike<C> | C\n\ntype BatcherOptions<K, C extends string | number | null> = {\n  cacheKeyFn?: CacheKeyFn<K, C>\n  schedulerFn?: SchedulerFn<void>\n}\n\ntype WorkFnContext<V, K> = {\n  resolve: (value: V | PromiseLike<V>) => void\n  key: K\n}\n\ntype WorkFn<V, K> = (context: WorkFnContext<V, K>) => Promise<V>\n\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */\nexport class Batcher<K, V, C extends string | number | null> {\n  private readonly pending = new Map<C, Promise<V>>()\n\n  protected constructor(\n    private readonly cacheKeyFn?: CacheKeyFn<K, C>,\n    /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */\n    private readonly schedulerFn: SchedulerFn<void> = (fn) => fn()\n  ) {}\n\n  /**\n   * Creates a new instance of PendingWrapper. If the key extends a string or\n   * number, the key will be used as the cache key. If the key is an object, a\n   * cache key function must be provided.\n   */\n  public static create<K extends string | number | null, V>(\n    options?: BatcherOptions<K, K>\n  ): Batcher<K, V, K>\n  public static create<K, V, C extends string | number | null>(\n    options: BatcherOptions<K, C> &\n      Required<Pick<BatcherOptions<K, C>, 'cacheKeyFn'>>\n  ): Batcher<K, V, C>\n  public static create<K, V, C extends string | number | null>(\n    options?: BatcherOptions<K, C>\n  ): Batcher<K, V, C> {\n    return new Batcher<K, V, C>(options?.cacheKeyFn, options?.schedulerFn)\n  }\n\n  /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */\n  public async batch(key: K, fn: WorkFn<V, K>): Promise<V> {\n    const cacheKey = (this.cacheKeyFn ? await this.cacheKeyFn(key) : key) as C\n    if (cacheKey === null) {\n      return fn({ resolve: (value) => Promise.resolve(value), key })\n    }\n\n    const pending = this.pending.get(cacheKey)\n    if (pending) return pending\n\n    const { promise, resolve, reject } = new DetachedPromise<V>()\n    this.pending.set(cacheKey, promise)\n\n    this.schedulerFn(async () => {\n      try {\n        const result = await fn({ resolve, key })\n\n        // Resolving a promise multiple times is a no-op, so we can safely\n        // resolve all pending promises with the same result.\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      } finally {\n        this.pending.delete(cacheKey)\n      }\n    })\n\n    return promise\n  }\n}\n","export const ENCODED_TAGS = {\n  // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n  OPENING: {\n    // <html\n    HTML: new Uint8Array([60, 104, 116, 109, 108]),\n    // <body\n    BODY: new Uint8Array([60, 98, 111, 100, 121]),\n  },\n  CLOSED: {\n    // </head>\n    HEAD: new Uint8Array([60, 47, 104, 101, 97, 100, 62]),\n    // </body>\n    BODY: new Uint8Array([60, 47, 98, 111, 100, 121, 62]),\n    // </html>\n    HTML: new Uint8Array([60, 47, 104, 116, 109, 108, 62]),\n    // </body></html>\n    BODY_AND_HTML: new Uint8Array([\n      60, 47, 98, 111, 100, 121, 62, 60, 47, 104, 116, 109, 108, 62,\n    ]),\n  },\n  META: {\n    // Only the match the prefix cause the suffix can be different wether it's xml compatible or not \">\" or \"/>\"\n    // <meta name=\"«nxt-icon»\"\n    // This is a special mark that will be replaced by the icon insertion script tag.\n    ICON_MARK: new Uint8Array([\n      60, 109, 101, 116, 97, 32, 110, 97, 109, 101, 61, 34, 194, 171, 110, 120,\n      116, 45, 105, 99, 111, 110, 194, 187, 34,\n    ]),\n  },\n} as const\n","/**\n * Find the starting index of Uint8Array `b` within Uint8Array `a`.\n */\nexport function indexOfUint8Array(a: Uint8Array, b: Uint8Array) {\n  if (b.length === 0) return 0\n  if (a.length === 0 || b.length > a.length) return -1\n\n  // start iterating through `a`\n  for (let i = 0; i <= a.length - b.length; i++) {\n    let completeMatch = true\n    // from index `i`, iterate through `b` and check for mismatch\n    for (let j = 0; j < b.length; j++) {\n      // if the values do not match, then this isn't a complete match, exit `b` iteration early and iterate to next index of `a`.\n      if (a[i + j] !== b[j]) {\n        completeMatch = false\n        break\n      }\n    }\n\n    if (completeMatch) {\n      return i\n    }\n  }\n\n  return -1\n}\n\n/**\n * Check if two Uint8Arrays are strictly equivalent.\n */\nexport function isEquivalentUint8Arrays(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false\n  }\n\n  return true\n}\n\n/**\n * Remove Uint8Array `b` from Uint8Array `a`.\n *\n * If `b` is not in `a`, `a` is returned unchanged.\n *\n * Otherwise, the function returns a new Uint8Array instance with size `a.length - b.length`\n */\nexport function removeFromUint8Array(a: Uint8Array, b: Uint8Array) {\n  const tagIndex = indexOfUint8Array(a, b)\n  if (tagIndex === 0) return a.subarray(b.length)\n  if (tagIndex > -1) {\n    const removed = new Uint8Array(a.length - b.length)\n    removed.set(a.slice(0, tagIndex))\n    removed.set(a.slice(tagIndex + b.length), tagIndex)\n    return removed\n  } else {\n    return a\n  }\n}\n","export const MISSING_ROOT_TAGS_ERROR = 'NEXT_MISSING_ROOT_TAGS'\n","// In output: export mode, the build id is added to the start of the HTML\n// document, directly after the doctype declaration. During a prefetch, the\n// client performs a range request to get the build id, so it can check whether\n// the target page belongs to the same build.\n//\n// The first 64 bytes of the document are requested. The exact number isn't\n// too important; it must be larger than the build id + doctype + closing and\n// ending comment markers, but it doesn't need to match the end of the\n// comment exactly.\n//\n// Build ids are 21 bytes long in the default implementation, though this\n// can be overridden in the Next.js config. For the purposes of this check,\n// it's OK to only match the start of the id, so we'll truncate it if exceeds\n// a certain length.\n\nconst DOCTYPE_PREFIX = '<!DOCTYPE html>' // 15 bytes\nconst MAX_BUILD_ID_LENGTH = 24\n\n// Request the first 64 bytes. The Range header is inclusive of the end value.\nexport const DOC_PREFETCH_RANGE_HEADER_VALUE = 'bytes=0-63'\n\nfunction escapeBuildId(buildId: string) {\n  // If the build id is longer than the given limit, it's OK for our purposes\n  // to only match the beginning.\n  const truncated = buildId.slice(0, MAX_BUILD_ID_LENGTH)\n  // Replace hyphens with underscores so it doesn't break the HTML comment.\n  // (Unlikely, but if this did happen it would break the whole document.)\n  return truncated.replace(/-/g, '_')\n}\n\nexport function insertBuildIdComment(originalHtml: string, buildId: string) {\n  if (\n    // Skip if the build id contains a closing comment marker.\n    buildId.includes('-->') ||\n    // React always inserts a doctype at the start of the document. Skip if it\n    // isn't present. Shouldn't happen; suggests an issue elsewhere.\n    !originalHtml.startsWith(DOCTYPE_PREFIX)\n  ) {\n    // Return the original HTML unchanged. This means the document will not\n    // be prefetched.\n    // TODO: The build id comment is currently only used during prefetches, but\n    // if we eventually use this mechanism for regular navigations, we may need\n    // to error during build if we fail to insert it for some reason.\n    return originalHtml\n  }\n  // The comment must be inserted after the doctype.\n  return originalHtml.replace(\n    DOCTYPE_PREFIX,\n    DOCTYPE_PREFIX + '<!--' + escapeBuildId(buildId) + '-->'\n  )\n}\n\nexport function doesExportedHtmlMatchBuildId(\n  partialHtmlDocument: string,\n  buildId: string\n) {\n  // Check whether the document starts with the expected buildId.\n  return partialHtmlDocument.startsWith(\n    DOCTYPE_PREFIX + '<!--' + escapeBuildId(buildId) + '-->'\n  )\n}\n","import { hexHash } from '../../hash'\n\nexport function computeCacheBustingSearchParam(\n  prefetchHeader: '1' | '2' | '0' | undefined,\n  segmentPrefetchHeader: string | string[] | undefined,\n  stateTreeHeader: string | string[] | undefined,\n  nextUrlHeader: string | string[] | undefined\n): string {\n  if (\n    (prefetchHeader === undefined || prefetchHeader === '0') &&\n    segmentPrefetchHeader === undefined &&\n    stateTreeHeader === undefined &&\n    nextUrlHeader === undefined\n  ) {\n    return ''\n  }\n  return hexHash(\n    [\n      prefetchHeader || '0',\n      segmentPrefetchHeader || '0',\n      stateTreeHeader || '0',\n      nextUrlHeader || '0',\n    ].join(',')\n  )\n}\n","import type { ReactDOMServerReadableStream } from 'react-dom/server'\nimport { getTracer } from '../lib/trace/tracer'\nimport { AppRenderSpan } from '../lib/trace/constants'\nimport { DetachedPromise } from '../../lib/detached-promise'\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler'\nimport { ENCODED_TAGS } from './encoded-tags'\nimport {\n  indexOfUint8Array,\n  isEquivalentUint8Arrays,\n  removeFromUint8Array,\n} from './uint8array-helpers'\nimport { MISSING_ROOT_TAGS_ERROR } from '../../shared/lib/errors/constants'\nimport { insertBuildIdComment } from '../../shared/lib/segment-cache/output-export-prefetch-encoding'\nimport {\n  RSC_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n  NEXT_RSC_UNION_QUERY,\n} from '../../client/components/app-router-headers'\nimport { computeCacheBustingSearchParam } from '../../shared/lib/router/utils/cache-busting-search-param'\n\nfunction voidCatch() {\n  // this catcher is designed to be used with pipeTo where we expect the underlying\n  // pipe implementation to forward errors but we don't want the pipeTo promise to reject\n  // and be unhandled\n}\n\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder()\n\nexport function chainStreams<T>(\n  ...streams: ReadableStream<T>[]\n): ReadableStream<T> {\n  // If we have no streams, return an empty stream. This behavior is\n  // intentional as we're now providing the `RenderResult.EMPTY` value.\n  if (streams.length === 0) {\n    return new ReadableStream<T>({\n      start(controller) {\n        controller.close()\n      },\n    })\n  }\n\n  // If we only have 1 stream we fast path it by returning just this stream\n  if (streams.length === 1) {\n    return streams[0]\n  }\n\n  const { readable, writable } = new TransformStream()\n\n  // We always initiate pipeTo immediately. We know we have at least 2 streams\n  // so we need to avoid closing the writable when this one finishes.\n  let promise = streams[0].pipeTo(writable, { preventClose: true })\n\n  let i = 1\n  for (; i < streams.length - 1; i++) {\n    const nextStream = streams[i]\n    promise = promise.then(() =>\n      nextStream.pipeTo(writable, { preventClose: true })\n    )\n  }\n\n  // We can omit the length check because we halted before the last stream and there\n  // is at least two streams so the lastStream here will always be defined\n  const lastStream = streams[i]\n  promise = promise.then(() => lastStream.pipeTo(writable))\n\n  // Catch any errors from the streams and ignore them, they will be handled\n  // by whatever is consuming the readable stream.\n  promise.catch(voidCatch)\n\n  return readable\n}\n\nexport function streamFromString(str: string): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(encoder.encode(str))\n      controller.close()\n    },\n  })\n}\n\nexport function streamFromBuffer(chunk: Buffer): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(chunk)\n      controller.close()\n    },\n  })\n}\n\nexport async function streamToBuffer(\n  stream: ReadableStream<Uint8Array>\n): Promise<Buffer> {\n  const reader = stream.getReader()\n  const chunks: Uint8Array[] = []\n\n  while (true) {\n    const { done, value } = await reader.read()\n    if (done) {\n      break\n    }\n\n    chunks.push(value)\n  }\n\n  return Buffer.concat(chunks)\n}\n\nexport async function streamToString(\n  stream: ReadableStream<Uint8Array>,\n  signal?: AbortSignal\n): Promise<string> {\n  const decoder = new TextDecoder('utf-8', { fatal: true })\n  let string = ''\n\n  for await (const chunk of stream) {\n    if (signal?.aborted) {\n      return string\n    }\n\n    string += decoder.decode(chunk, { stream: true })\n  }\n\n  string += decoder.decode()\n\n  return string\n}\n\nexport type BufferedTransformOptions = {\n  /**\n   * Flush synchronously once the buffer reaches this many bytes.\n   */\n  readonly maxBufferByteLength?: number\n}\n\nexport function createBufferedTransformStream(\n  options: BufferedTransformOptions = {}\n): TransformStream<Uint8Array, Uint8Array> {\n  const { maxBufferByteLength = Infinity } = options\n\n  let bufferedChunks: Array<Uint8Array> = []\n  let bufferByteLength: number = 0\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    try {\n      if (bufferedChunks.length === 0) {\n        return\n      }\n\n      const chunk = new Uint8Array(bufferByteLength)\n      let copiedBytes = 0\n\n      for (let i = 0; i < bufferedChunks.length; i++) {\n        const bufferedChunk = bufferedChunks[i]\n        chunk.set(bufferedChunk, copiedBytes)\n        copiedBytes += bufferedChunk.byteLength\n      }\n      // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n      // and our bufferByteLength to prepare for the next round of buffered chunks\n      bufferedChunks.length = 0\n      bufferByteLength = 0\n      controller.enqueue(chunk)\n    } catch {\n      // If an error occurs while enqueuing, it can't be due to this\n      // transformer. It's most likely caused by the controller having been\n      // errored (for example, if the stream was cancelled).\n    }\n  }\n\n  const scheduleFlush = (controller: TransformStreamDefaultController) => {\n    if (pending) {\n      return\n    }\n\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        flush(controller)\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      // Combine the previous buffer with the new chunk.\n      bufferedChunks.push(chunk)\n      bufferByteLength += chunk.byteLength\n\n      if (bufferByteLength >= maxBufferByteLength) {\n        flush(controller)\n      } else {\n        scheduleFlush(controller)\n      }\n    },\n    flush() {\n      return pending?.promise\n    },\n  })\n}\n\nfunction createPrefetchCommentStream(\n  isBuildTimePrerendering: boolean,\n  buildId: string\n): TransformStream<Uint8Array, Uint8Array> {\n  // Insert an extra comment at the beginning of the HTML document. This must\n  // come after the DOCTYPE, which is inserted by React.\n  //\n  // The first chunk sent by React will contain the doctype. After that, we can\n  // pass through the rest of the chunks as-is.\n  let didTransformFirstChunk = false\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (isBuildTimePrerendering && !didTransformFirstChunk) {\n        didTransformFirstChunk = true\n        const decoder = new TextDecoder('utf-8', { fatal: true })\n        const chunkStr = decoder.decode(chunk, {\n          stream: true,\n        })\n        const updatedChunkStr = insertBuildIdComment(chunkStr, buildId)\n        controller.enqueue(encoder.encode(updatedChunkStr))\n        return\n      }\n      controller.enqueue(chunk)\n    },\n  })\n}\n\nexport function renderToInitialFizzStream({\n  ReactDOMServer,\n  element,\n  streamOptions,\n}: {\n  ReactDOMServer: {\n    renderToReadableStream: typeof import('react-dom/server').renderToReadableStream\n  }\n  element: React.ReactElement\n  streamOptions?: Parameters<typeof ReactDOMServer.renderToReadableStream>[1]\n}): Promise<ReactDOMServerReadableStream> {\n  return getTracer().trace(AppRenderSpan.renderToReadableStream, async () =>\n    ReactDOMServer.renderToReadableStream(element, streamOptions)\n  )\n}\n\nfunction createMetadataTransformStream(\n  insert: () => Promise<string> | string\n): TransformStream<Uint8Array, Uint8Array> {\n  let chunkIndex = -1\n  let isMarkRemoved = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      let iconMarkIndex = -1\n      let closedHeadIndex = -1\n      chunkIndex++\n\n      if (isMarkRemoved) {\n        controller.enqueue(chunk)\n        return\n      }\n      let iconMarkLength = 0\n      // Only search for the closed head tag once\n      if (iconMarkIndex === -1) {\n        iconMarkIndex = indexOfUint8Array(chunk, ENCODED_TAGS.META.ICON_MARK)\n        if (iconMarkIndex === -1) {\n          controller.enqueue(chunk)\n          return\n        } else {\n          // When we found the `<meta name=\"«nxt-icon»\"` tag prefix, we will remove it from the chunk.\n          // Its close tag could either be `/>` or `>`, checking the next char to ensure we cover both cases.\n          iconMarkLength = ENCODED_TAGS.META.ICON_MARK.length\n          // Check if next char is /, this is for xml mode.\n          if (chunk[iconMarkIndex + iconMarkLength] === 47) {\n            iconMarkLength += 2\n          } else {\n            // The last char is `>`\n            iconMarkLength++\n          }\n        }\n      }\n\n      // Check if icon mark is inside <head> tag in the first chunk.\n      if (chunkIndex === 0) {\n        closedHeadIndex = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        if (iconMarkIndex !== -1) {\n          // The mark icon is located in the 1st chunk before the head tag.\n          // We do not need to insert the script tag in this case because it's in the head.\n          // Just remove the icon mark from the chunk.\n          if (iconMarkIndex < closedHeadIndex) {\n            const replaced = new Uint8Array(chunk.length - iconMarkLength)\n\n            // Remove the icon mark from the chunk.\n            replaced.set(chunk.subarray(0, iconMarkIndex))\n            replaced.set(\n              chunk.subarray(iconMarkIndex + iconMarkLength),\n              iconMarkIndex\n            )\n            chunk = replaced\n          } else {\n            // The icon mark is after the head tag, replace and insert the script tag at that position.\n            const insertion = await insert()\n            const encodedInsertion = encoder.encode(insertion)\n            const insertionLength = encodedInsertion.length\n            const replaced = new Uint8Array(\n              chunk.length - iconMarkLength + insertionLength\n            )\n            replaced.set(chunk.subarray(0, iconMarkIndex))\n            replaced.set(encodedInsertion, iconMarkIndex)\n            replaced.set(\n              chunk.subarray(iconMarkIndex + iconMarkLength),\n              iconMarkIndex + insertionLength\n            )\n            chunk = replaced\n          }\n          isMarkRemoved = true\n        }\n        // If there's no icon mark located, it will be handled later when if present in the following chunks.\n      } else {\n        // When it's appeared in the following chunks, we'll need to\n        // remove the mark and then insert the script tag at that position.\n        const insertion = await insert()\n        const encodedInsertion = encoder.encode(insertion)\n        const insertionLength = encodedInsertion.length\n        // Replace the icon mark with the hoist script or empty string.\n        const replaced = new Uint8Array(\n          chunk.length - iconMarkLength + insertionLength\n        )\n        // Set the first part of the chunk, before the icon mark.\n        replaced.set(chunk.subarray(0, iconMarkIndex))\n        // Set the insertion after the icon mark.\n        replaced.set(encodedInsertion, iconMarkIndex)\n\n        // Set the rest of the chunk after the icon mark.\n        replaced.set(\n          chunk.subarray(iconMarkIndex + iconMarkLength),\n          iconMarkIndex + insertionLength\n        )\n        chunk = replaced\n        isMarkRemoved = true\n      }\n      controller.enqueue(chunk)\n    },\n  })\n}\n\nfunction createHeadInsertionTransformStream(\n  insert: () => Promise<string>\n): TransformStream<Uint8Array, Uint8Array> {\n  let inserted = false\n\n  // We need to track if this transform saw any bytes because if it didn't\n  // we won't want to insert any server HTML at all\n  let hasBytes = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      hasBytes = true\n\n      const insertion = await insert()\n      if (inserted) {\n        if (insertion) {\n          const encodedInsertion = encoder.encode(insertion)\n          controller.enqueue(encodedInsertion)\n        }\n        controller.enqueue(chunk)\n      } else {\n        // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n        const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        // In fully static rendering or non PPR rendering cases:\n        // `/head>` will always be found in the chunk in first chunk rendering.\n        if (index !== -1) {\n          if (insertion) {\n            const encodedInsertion = encoder.encode(insertion)\n            // Get the total count of the bytes in the chunk and the insertion\n            // e.g.\n            // chunk = <head><meta charset=\"utf-8\"></head>\n            // insertion = <script>...</script>\n            // output = <head><meta charset=\"utf-8\"> [ <script>...</script> ] </head>\n            const insertedHeadContent = new Uint8Array(\n              chunk.length + encodedInsertion.length\n            )\n            // Append the first part of the chunk, before the head tag\n            insertedHeadContent.set(chunk.slice(0, index))\n            // Append the server inserted content\n            insertedHeadContent.set(encodedInsertion, index)\n            // Append the rest of the chunk\n            insertedHeadContent.set(\n              chunk.slice(index),\n              index + encodedInsertion.length\n            )\n            controller.enqueue(insertedHeadContent)\n          } else {\n            controller.enqueue(chunk)\n          }\n          inserted = true\n        } else {\n          // This will happens in PPR rendering during next start, when the page is partially rendered.\n          // When the page resumes, the head tag will be found in the middle of the chunk.\n          // Where we just need to append the insertion and chunk to the current stream.\n          // e.g.\n          // PPR-static: <head>...</head><body> [ resume content ] </body>\n          // PPR-resume: [ insertion ] [ rest content ]\n          if (insertion) {\n            controller.enqueue(encoder.encode(insertion))\n          }\n          controller.enqueue(chunk)\n          inserted = true\n        }\n      }\n    },\n    async flush(controller) {\n      // Check before closing if there's anything remaining to insert.\n      if (hasBytes) {\n        const insertion = await insert()\n        if (insertion) {\n          controller.enqueue(encoder.encode(insertion))\n        }\n      }\n    },\n  })\n}\n\nfunction createClientResumeScriptInsertionTransformStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  const segmentPath = '/_full'\n  const cacheBustingHeader = computeCacheBustingSearchParam(\n    '1', //            headers[NEXT_ROUTER_PREFETCH_HEADER]\n    '/_full', //       headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER]\n    undefined, //      headers[NEXT_ROUTER_STATE_TREE_HEADER]\n    undefined //       headers[NEXT_URL]\n  )\n  const searchStr = `${NEXT_RSC_UNION_QUERY}=${cacheBustingHeader}`\n  const NEXT_CLIENT_RESUME_SCRIPT = `<script>__NEXT_CLIENT_RESUME=fetch(location.pathname+'?${searchStr}',{credentials:'same-origin',headers:{'${RSC_HEADER}': '1','${NEXT_ROUTER_PREFETCH_HEADER}': '1','${NEXT_ROUTER_SEGMENT_PREFETCH_HEADER}': '${segmentPath}'}})</script>`\n\n  let didAlreadyInsert = false\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (didAlreadyInsert) {\n        // Already inserted the script into the head. Pass through.\n        controller.enqueue(chunk)\n        return\n      }\n      // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n      const headClosingTagIndex = indexOfUint8Array(\n        chunk,\n        ENCODED_TAGS.CLOSED.HEAD\n      )\n\n      if (headClosingTagIndex === -1) {\n        // In fully static rendering or non PPR rendering cases:\n        // `/head>` will always be found in the chunk in first chunk rendering.\n        controller.enqueue(chunk)\n        return\n      }\n\n      const encodedInsertion = encoder.encode(NEXT_CLIENT_RESUME_SCRIPT)\n      // Get the total count of the bytes in the chunk and the insertion\n      // e.g.\n      // chunk = <head><meta charset=\"utf-8\"></head>\n      // insertion = <script>...</script>\n      // output = <head><meta charset=\"utf-8\"> [ <script>...</script> ] </head>\n      const insertedHeadContent = new Uint8Array(\n        chunk.length + encodedInsertion.length\n      )\n      // Append the first part of the chunk, before the head tag\n      insertedHeadContent.set(chunk.slice(0, headClosingTagIndex))\n      // Append the server inserted content\n      insertedHeadContent.set(encodedInsertion, headClosingTagIndex)\n      // Append the rest of the chunk\n      insertedHeadContent.set(\n        chunk.slice(headClosingTagIndex),\n        headClosingTagIndex + encodedInsertion.length\n      )\n\n      controller.enqueue(insertedHeadContent)\n      didAlreadyInsert = true\n    },\n  })\n}\n\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(\n  suffix: string\n): TransformStream<Uint8Array, Uint8Array> {\n  let flushed = false\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        controller.enqueue(encoder.encode(suffix))\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // If we've already flushed, we're done.\n      if (flushed) return\n\n      // Schedule the flush to happen.\n      flushed = true\n      flush(controller)\n    },\n    flush(controller) {\n      if (pending) return pending.promise\n      if (flushed) return\n\n      // Flush now.\n      controller.enqueue(encoder.encode(suffix))\n    },\n  })\n}\n\nfunction createFlightDataInjectionTransformStream(\n  stream: ReadableStream<Uint8Array>,\n  delayDataUntilFirstHtmlChunk: boolean\n): TransformStream<Uint8Array, Uint8Array> {\n  let htmlStreamFinished = false\n\n  let pull: Promise<void> | null = null\n  let donePulling = false\n\n  function startOrContinuePulling(\n    controller: TransformStreamDefaultController\n  ) {\n    if (!pull) {\n      pull = startPulling(controller)\n    }\n    return pull\n  }\n\n  async function startPulling(controller: TransformStreamDefaultController) {\n    const reader = stream.getReader()\n\n    if (delayDataUntilFirstHtmlChunk) {\n      // NOTE: streaming flush\n      // We are buffering here for the inlined data stream because the\n      // \"shell\" stream might be chunkenized again by the underlying stream\n      // implementation, e.g. with a specific high-water mark. To ensure it's\n      // the safe timing to pipe the data stream, this extra tick is\n      // necessary.\n\n      // We don't start reading until we've left the current Task to ensure\n      // that it's inserted after flushing the shell. Note that this implementation\n      // might get stale if impl details of Fizz change in the future.\n      await atLeastOneTask()\n    }\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (done) {\n          donePulling = true\n          return\n        }\n\n        // We want to prioritize HTML over RSC data.\n        // The SSR render is based on the same RSC stream, so when we get a new RSC chunk,\n        // we're likely to produce an HTML chunk as well, so give it a chance to flush first.\n        if (!delayDataUntilFirstHtmlChunk && !htmlStreamFinished) {\n          await atLeastOneTask()\n        }\n        controller.enqueue(value)\n      }\n    } catch (err) {\n      controller.error(err)\n    }\n  }\n\n  return new TransformStream({\n    start(controller) {\n      if (!delayDataUntilFirstHtmlChunk) {\n        startOrContinuePulling(controller)\n      }\n    },\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // Start the streaming if it hasn't already been started yet.\n      if (delayDataUntilFirstHtmlChunk) {\n        startOrContinuePulling(controller)\n      }\n    },\n    flush(controller) {\n      htmlStreamFinished = true\n      if (donePulling) {\n        return\n      }\n      return startOrContinuePulling(controller)\n    },\n  })\n}\n\nconst CLOSE_TAG = '</body></html>'\n\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */\nfunction createMoveSuffixStream(): TransformStream<Uint8Array, Uint8Array> {\n  let foundSuffix = false\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (foundSuffix) {\n        return controller.enqueue(chunk)\n      }\n\n      const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n      if (index > -1) {\n        foundSuffix = true\n\n        // If the whole chunk is the suffix, then don't write anything, it will\n        // be written in the flush.\n        if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n          return\n        }\n\n        // Write out the part before the suffix.\n        const before = chunk.slice(0, index)\n        controller.enqueue(before)\n\n        // In the case where the suffix is in the middle of the chunk, we need\n        // to split the chunk into two parts.\n        if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n          // Write out the part after the suffix.\n          const after = chunk.slice(\n            index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length\n          )\n          controller.enqueue(after)\n        }\n      } else {\n        controller.enqueue(chunk)\n      }\n    },\n    flush(controller) {\n      // Even if we didn't find the suffix, the HTML is not valid if we don't\n      // add it, so insert it at the end.\n      controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n    },\n  })\n}\n\nfunction createStripDocumentClosingTagsTransform(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  return new TransformStream({\n    transform(chunk, controller) {\n      // We rely on the assumption that chunks will never break across a code unit.\n      // This is reasonable because we currently concat all of React's output from a single\n      // flush into one chunk before streaming it forward which means the chunk will represent\n      // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n      // longer do this large buffered chunk\n      if (\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)\n      ) {\n        // the entire chunk is the closing tags; return without enqueueing anything.\n        return\n      }\n\n      // We assume these tags will go at together at the end of the document and that\n      // they won't appear anywhere else in the document. This is not really a safe assumption\n      // but until we revamp our streaming infra this is a performant way to string the tags\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY)\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML)\n\n      controller.enqueue(chunk)\n    },\n  })\n}\n\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */\nexport function createRootLayoutValidatorStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let foundHtml = false\n  let foundBody = false\n  return new TransformStream({\n    async transform(chunk, controller) {\n      // Peek into the streamed chunk to see if the tags are present.\n      if (\n        !foundHtml &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1\n      ) {\n        foundHtml = true\n      }\n\n      if (\n        !foundBody &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1\n      ) {\n        foundBody = true\n      }\n\n      controller.enqueue(chunk)\n    },\n    flush(controller) {\n      const missingTags: ('html' | 'body')[] = []\n      if (!foundHtml) missingTags.push('html')\n      if (!foundBody) missingTags.push('body')\n\n      if (!missingTags.length) return\n\n      controller.enqueue(\n        encoder.encode(\n          `<html id=\"__next_error__\">\n            <template\n              data-next-error-message=\"Missing ${missingTags\n                .map((c) => `<${c}>`)\n                .join(\n                  missingTags.length > 1 ? ' and ' : ''\n                )} tags in the root layout.\\nRead more at https://nextjs.org/docs/messages/missing-root-layout-tags\"\n              data-next-error-digest=\"${MISSING_ROOT_TAGS_ERROR}\"\n              data-next-error-stack=\"\"\n            ></template>\n          `\n        )\n      )\n    },\n  })\n}\n\nfunction chainTransformers<T>(\n  readable: ReadableStream<T>,\n  transformers: ReadonlyArray<TransformStream<T, T> | null>\n): ReadableStream<T> {\n  let stream = readable\n  for (const transformer of transformers) {\n    if (!transformer) continue\n\n    stream = stream.pipeThrough(transformer)\n  }\n  return stream\n}\n\nexport type ContinueStreamOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array> | undefined\n  isStaticGeneration: boolean\n  isBuildTimePrerendering: boolean\n  buildId: string\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  validateRootLayout?: boolean\n  /**\n   * Suffix to inject after the buffered data, but before the close tags.\n   */\n  suffix?: string | undefined\n}\n\nexport async function continueFizzStream(\n  renderStream: ReactDOMServerReadableStream,\n  {\n    suffix,\n    inlinedDataStream,\n    isStaticGeneration,\n    isBuildTimePrerendering,\n    buildId,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n    validateRootLayout,\n  }: ContinueStreamOptions\n): Promise<ReadableStream<Uint8Array>> {\n  // Suffix itself might contain close tags at the end, so we need to split it.\n  const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null\n\n  // If we're generating static HTML we need to wait for it to resolve before continuing.\n  if (isStaticGeneration) {\n    await renderStream.allReady\n  }\n\n  return chainTransformers(renderStream, [\n    // Buffer everything to avoid flushing too frequently\n    createBufferedTransformStream(),\n\n    // Add build id comment to start of the HTML document (in export mode)\n    createPrefetchCommentStream(isBuildTimePrerendering, buildId),\n\n    // Transform metadata\n    createMetadataTransformStream(getServerInsertedMetadata),\n\n    // Insert suffix content\n    suffixUnclosed != null && suffixUnclosed.length > 0\n      ? createDeferredSuffixStream(suffixUnclosed)\n      : null,\n\n    // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    inlinedDataStream\n      ? createFlightDataInjectionTransformStream(inlinedDataStream, true)\n      : null,\n\n    // Validate the root layout for missing html or body tags\n    validateRootLayout ? createRootLayoutValidatorStream() : null,\n\n    // Close tags should always be deferred to the end\n    createMoveSuffixStream(),\n\n    // Special head insertions\n    // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n    // hydration errors. Remove this once it's ready to be handled by react itself.\n    createHeadInsertionTransformStream(getServerInsertedHTML),\n  ])\n}\n\ntype ContinueDynamicPrerenderOptions = {\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n}\n\nexport async function continueDynamicPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueDynamicPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      .pipeThrough(createStripDocumentClosingTagsTransform())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n  )\n}\n\ntype ContinueStaticPrerenderOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  isBuildTimePrerendering: boolean\n  buildId: string\n}\n\nexport async function continueStaticPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n    isBuildTimePrerendering,\n    buildId,\n  }: ContinueStaticPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Add build id comment to start of the HTML document (in export mode)\n      .pipeThrough(\n        createPrefetchCommentStream(isBuildTimePrerendering, buildId)\n      )\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(\n        createFlightDataInjectionTransformStream(inlinedDataStream, true)\n      )\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\nexport async function continueStaticFallbackPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n    isBuildTimePrerendering,\n    buildId,\n  }: ContinueStaticPrerenderOptions\n) {\n  // Same as `continueStaticPrerender`, but also inserts an additional script\n  // to instruct the client to start fetching the hydration data as early\n  // as possible.\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Add build id comment to start of the HTML document (in export mode)\n      .pipeThrough(\n        createPrefetchCommentStream(isBuildTimePrerendering, buildId)\n      )\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Insert the client resume script into the head\n      .pipeThrough(createClientResumeScriptInsertionTransformStream())\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(\n        createFlightDataInjectionTransformStream(inlinedDataStream, true)\n      )\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\ntype ContinueResumeOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  delayDataUntilFirstHtmlChunk: boolean\n}\n\nexport async function continueDynamicHTMLResume(\n  renderStream: ReadableStream<Uint8Array>,\n  {\n    delayDataUntilFirstHtmlChunk,\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueResumeOptions\n) {\n  return (\n    renderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(\n        createFlightDataInjectionTransformStream(\n          inlinedDataStream,\n          delayDataUntilFirstHtmlChunk\n        )\n      )\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\nexport function createDocumentClosingStream(): ReadableStream<Uint8Array> {\n  return streamFromString(CLOSE_TAG)\n}\n","import type { IncomingMessage } from 'http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { BaseNextRequest } from './base-http'\nimport type { CloneableBody } from './body-streams'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport type {\n  ResponseCacheEntry,\n  ServerComponentsHmrCache,\n} from './response-cache'\nimport type { PagesDevOverlayBridgeType } from '../next-devtools/userspace/pages/pages-dev-overlay-setup'\nimport type { OpaqueFallbackRouteParams } from './request/fallback-params'\nimport type { IncrementalCache } from './lib/incremental-cache'\n\n// FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta')\n\nexport type NextIncomingMessage = (BaseNextRequest | IncomingMessage) & {\n  [NEXT_REQUEST_META]?: RequestMeta\n}\n\n/**\n * The callback function to call when a response cache entry was generated or\n * looked up in the cache. When it returns true, the server assumes that the\n * handler has already responded to the request and will not do so itself.\n */\nexport type OnCacheEntryHandler = (\n  /**\n   * The response cache entry that was generated or looked up in the cache.\n   */\n  cacheEntry: ResponseCacheEntry,\n\n  /**\n   * The request metadata.\n   */\n  requestMeta: {\n    /**\n     * The URL that was used to make the request.\n     */\n    url: string | undefined\n  }\n) => Promise<boolean | void> | boolean | void\n\nexport interface RequestMeta {\n  /**\n   * The query that was used to make the request.\n   */\n  initQuery?: ParsedUrlQuery\n\n  /**\n   * The URL that was used to make the request.\n   */\n  initURL?: string\n\n  /**\n   * The protocol that was used to make the request.\n   */\n  initProtocol?: string\n\n  /**\n   * The body that was read from the request. This is used to allow the body to\n   * be read multiple times.\n   */\n  clonableBody?: CloneableBody\n\n  /**\n   * True when the request matched a locale domain that was configured in the\n   * next.config.js file.\n   */\n  isLocaleDomain?: boolean\n\n  /**\n   * True when the request had locale information stripped from the pathname\n   * part of the URL.\n   */\n  didStripLocale?: boolean\n\n  /**\n   * If the request had it's URL rewritten, this is the URL it was rewritten to.\n   */\n  rewroteURL?: string\n\n  /**\n   * The cookies that were added by middleware and were added to the response.\n   */\n  middlewareCookie?: string[]\n\n  /**\n   * The match on the request for a given route.\n   */\n  match?: RouteMatch\n\n  /**\n   * The incremental cache to use for the request.\n   */\n  incrementalCache?: IncrementalCache\n\n  /**\n   * The server components HMR cache, only for dev.\n   */\n  serverComponentsHmrCache?: ServerComponentsHmrCache\n\n  /**\n   * Equals the segment path that was used for the prefetch RSC request.\n   */\n  segmentPrefetchRSCRequest?: string\n\n  /**\n   * True when the request is for the prefetch flight data.\n   */\n  isPrefetchRSCRequest?: true\n\n  /**\n   * True when the request is for the flight data.\n   */\n  isRSCRequest?: true\n\n  /**\n   * A search param set by the Next.js client when performing RSC requests.\n   * Because some CDNs do not vary their cache entries on our custom headers,\n   * this search param represents a hash of the header values. For any cached\n   * RSC request, we should verify that the hash matches before responding.\n   * Otherwise this can lead to cache poisoning.\n   * TODO: Consider not using custom request headers at all, and instead encode\n   * everything into the search param.\n   */\n  cacheBustingSearchParam?: string\n\n  /**\n   * True when the request is for the `/_next/data` route using the pages\n   * router.\n   */\n  isNextDataReq?: true\n\n  /**\n   * Postponed state to use for resumption. If present it's assumed that the\n   * request is for a page that has postponed (there are no guarantees that the\n   * page actually has postponed though as it would incur an additional cache\n   * lookup).\n   */\n  postponed?: string\n\n  /**\n   * If provided, this will be called when a response cache entry was generated\n   * or looked up in the cache.\n   *\n   * @deprecated Use `onCacheEntryV2` instead.\n   */\n  onCacheEntry?: OnCacheEntryHandler\n\n  /**\n   * If provided, this will be called when a response cache entry was generated\n   * or looked up in the cache.\n   */\n  onCacheEntryV2?: OnCacheEntryHandler\n\n  /**\n   * The previous revalidate before rendering 404 page for notFound: true\n   */\n  notFoundRevalidate?: number | false\n\n  /**\n   * In development, the original source page that returned a 404.\n   */\n  developmentNotFoundSourcePage?: string\n\n  /**\n   * The path we routed to and should be invoked\n   */\n  invokePath?: string\n\n  /**\n   * The specific page output we should be matching\n   */\n  invokeOutput?: string\n\n  /**\n   * The status we are invoking the request with from routing\n   */\n  invokeStatus?: number\n\n  /**\n   * The routing error we are invoking with\n   */\n  invokeError?: Error\n\n  /**\n   * The query parsed for the invocation\n   */\n  invokeQuery?: Record<string, undefined | string | string[]>\n\n  /**\n   * Whether the request is a middleware invocation\n   */\n  middlewareInvoke?: boolean\n\n  /**\n   * Whether the request should render the fallback shell or not.\n   */\n  renderFallbackShell?: boolean\n\n  /**\n   * Whether the request is for the custom error page.\n   */\n  customErrorRender?: true\n\n  /**\n   * Whether to bubble up the NoFallbackError to the caller when a 404 is\n   * returned.\n   */\n  bubbleNoFallback?: true\n\n  /**\n   * True when the request had locale information inferred from the default\n   * locale.\n   */\n  localeInferredFromDefault?: true\n\n  /**\n   * The locale that was inferred or explicitly set for the request.\n   */\n  locale?: string\n\n  /**\n   * The default locale that was inferred or explicitly set for the request.\n   */\n  defaultLocale?: string\n\n  /**\n   * The relative project dir the server is running in from project root\n   */\n  relativeProjectDir?: string\n\n  /**\n   * The dist directory the server is currently using\n   */\n  distDir?: string\n\n  /**\n   * The query after resolving routes\n   */\n  query?: ParsedUrlQuery\n\n  /**\n   * The params after resolving routes\n   */\n  params?: ParsedUrlQuery\n\n  /**\n   * ErrorOverlay component to use in development for pages router\n   */\n  PagesErrorDebug?: PagesDevOverlayBridgeType\n\n  /**\n   * Whether server is in minimal mode (this will be replaced with more\n   * specific flags in future)\n   */\n  minimalMode?: boolean\n\n  /**\n   * DEV only: The fallback params that should be used when validating prerenders during dev\n   */\n  devValidatingFallbackParams?: OpaqueFallbackRouteParams\n\n  /**\n   * DEV only: Request timings in process.hrtime.bigint()\n   */\n  devRequestTimingStart?: bigint\n  devRequestTimingMiddlewareStart?: bigint\n  devRequestTimingMiddlewareEnd?: bigint\n  devRequestTimingInternalsEnd?: bigint\n}\n\n/**\n * Gets the request metadata. If no key is provided, the entire metadata object\n * is returned.\n *\n * @param req the request to get the metadata from\n * @param key the key to get from the metadata (optional)\n * @returns the value for the key or the entire metadata object\n */\nexport function getRequestMeta(\n  req: NextIncomingMessage,\n  key?: undefined\n): RequestMeta\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key: K\n): RequestMeta[K]\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key?: K\n): RequestMeta | RequestMeta[K] {\n  const meta = req[NEXT_REQUEST_META] || {}\n  return typeof key === 'string' ? meta[key] : meta\n}\n\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */\nexport function setRequestMeta(req: NextIncomingMessage, meta: RequestMeta) {\n  req[NEXT_REQUEST_META] = meta\n  return meta\n}\n\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */\nexport function addRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K,\n  value: RequestMeta[K]\n) {\n  const meta = getRequestMeta(request)\n  meta[key] = value\n  return setRequestMeta(request, meta)\n}\n\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */\nexport function removeRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K\n) {\n  const meta = getRequestMeta(request)\n  delete meta[key]\n  return setRequestMeta(request, meta)\n}\n\ntype NextQueryMetadata = {\n  /**\n   * The `_rsc` query parameter used for cache busting to ensure that the RSC\n   * requests do not get cached by the browser explicitly.\n   */\n  [NEXT_RSC_UNION_QUERY]?: string\n}\n\nexport type NextParsedUrlQuery = ParsedUrlQuery & NextQueryMetadata\n\nexport interface NextUrlWithParsedQuery extends UrlWithParsedQuery {\n  query: NextParsedUrlQuery\n}\n","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: readonly DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: readonly string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type { DomainLocale, I18NConfig } from '../config-shared'\nimport type { I18NProvider } from '../lib/i18n-provider'\n\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info'\n\ninterface Options {\n  base?: string | URL\n  headers?: OutgoingHttpHeaders\n  forceLocale?: boolean\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  i18nProvider?: I18NProvider\n}\n\nconst REGEX_LOCALHOST_HOSTNAME =\n  /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/\n\nfunction parseURL(url: string | URL, base?: string | URL) {\n  return new URL(\n    String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'),\n    base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost')\n  )\n}\n\nconst Internal = Symbol('NextURLInternal')\n\nexport class NextURL {\n  private [Internal]: {\n    basePath: string\n    buildId?: string\n    flightSearchParameters?: Record<string, string>\n    defaultLocale?: string\n    domainLocale?: DomainLocale\n    locale?: string\n    options: Options\n    trailingSlash?: boolean\n    url: URL\n  }\n\n  constructor(input: string | URL, base?: string | URL, opts?: Options)\n  constructor(input: string | URL, opts?: Options)\n  constructor(\n    input: string | URL,\n    baseOrOpts?: string | URL | Options,\n    opts?: Options\n  ) {\n    let base: undefined | string | URL\n    let options: Options\n\n    if (\n      (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts) ||\n      typeof baseOrOpts === 'string'\n    ) {\n      base = baseOrOpts\n      options = opts || {}\n    } else {\n      options = opts || baseOrOpts || {}\n    }\n\n    this[Internal] = {\n      url: parseURL(input, base ?? options.base),\n      options: options,\n      basePath: '',\n    }\n\n    this.analyze()\n  }\n\n  private analyze() {\n    const info = getNextPathnameInfo(this[Internal].url.pathname, {\n      nextConfig: this[Internal].options.nextConfig,\n      parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n      i18nProvider: this[Internal].options.i18nProvider,\n    })\n\n    const hostname = getHostname(\n      this[Internal].url,\n      this[Internal].options.headers\n    )\n    this[Internal].domainLocale = this[Internal].options.i18nProvider\n      ? this[Internal].options.i18nProvider.detectDomainLocale(hostname)\n      : detectDomainLocale(\n          this[Internal].options.nextConfig?.i18n?.domains,\n          hostname\n        )\n\n    const defaultLocale =\n      this[Internal].domainLocale?.defaultLocale ||\n      this[Internal].options.nextConfig?.i18n?.defaultLocale\n\n    this[Internal].url.pathname = info.pathname\n    this[Internal].defaultLocale = defaultLocale\n    this[Internal].basePath = info.basePath ?? ''\n    this[Internal].buildId = info.buildId\n    this[Internal].locale = info.locale ?? defaultLocale\n    this[Internal].trailingSlash = info.trailingSlash\n  }\n\n  private formatPathname() {\n    return formatNextPathnameInfo({\n      basePath: this[Internal].basePath,\n      buildId: this[Internal].buildId,\n      defaultLocale: !this[Internal].options.forceLocale\n        ? this[Internal].defaultLocale\n        : undefined,\n      locale: this[Internal].locale,\n      pathname: this[Internal].url.pathname,\n      trailingSlash: this[Internal].trailingSlash,\n    })\n  }\n\n  private formatSearch() {\n    return this[Internal].url.search\n  }\n\n  public get buildId() {\n    return this[Internal].buildId\n  }\n\n  public set buildId(buildId: string | undefined) {\n    this[Internal].buildId = buildId\n  }\n\n  public get locale() {\n    return this[Internal].locale ?? ''\n  }\n\n  public set locale(locale: string) {\n    if (\n      !this[Internal].locale ||\n      !this[Internal].options.nextConfig?.i18n?.locales.includes(locale)\n    ) {\n      throw new TypeError(\n        `The NextURL configuration includes no locale \"${locale}\"`\n      )\n    }\n\n    this[Internal].locale = locale\n  }\n\n  get defaultLocale() {\n    return this[Internal].defaultLocale\n  }\n\n  get domainLocale() {\n    return this[Internal].domainLocale\n  }\n\n  get searchParams() {\n    return this[Internal].url.searchParams\n  }\n\n  get host() {\n    return this[Internal].url.host\n  }\n\n  set host(value: string) {\n    this[Internal].url.host = value\n  }\n\n  get hostname() {\n    return this[Internal].url.hostname\n  }\n\n  set hostname(value: string) {\n    this[Internal].url.hostname = value\n  }\n\n  get port() {\n    return this[Internal].url.port\n  }\n\n  set port(value: string) {\n    this[Internal].url.port = value\n  }\n\n  get protocol() {\n    return this[Internal].url.protocol\n  }\n\n  set protocol(value: string) {\n    this[Internal].url.protocol = value\n  }\n\n  get href() {\n    const pathname = this.formatPathname()\n    const search = this.formatSearch()\n    return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`\n  }\n\n  set href(url: string) {\n    this[Internal].url = parseURL(url)\n    this.analyze()\n  }\n\n  get origin() {\n    return this[Internal].url.origin\n  }\n\n  get pathname() {\n    return this[Internal].url.pathname\n  }\n\n  set pathname(value: string) {\n    this[Internal].url.pathname = value\n  }\n\n  get hash() {\n    return this[Internal].url.hash\n  }\n\n  set hash(value: string) {\n    this[Internal].url.hash = value\n  }\n\n  get search() {\n    return this[Internal].url.search\n  }\n\n  set search(value: string) {\n    this[Internal].url.search = value\n  }\n\n  get password() {\n    return this[Internal].url.password\n  }\n\n  set password(value: string) {\n    this[Internal].url.password = value\n  }\n\n  get username() {\n    return this[Internal].url.username\n  }\n\n  set username(value: string) {\n    this[Internal].url.username = value\n  }\n\n  get basePath() {\n    return this[Internal].basePath\n  }\n\n  set basePath(value: string) {\n    this[Internal].basePath = value.startsWith('/') ? value : `/${value}`\n  }\n\n  toString() {\n    return this.href\n  }\n\n  toJSON() {\n    return this.href\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      href: this.href,\n      origin: this.origin,\n      protocol: this.protocol,\n      username: this.username,\n      password: this.password,\n      host: this.host,\n      hostname: this.hostname,\n      port: this.port,\n      pathname: this.pathname,\n      search: this.search,\n      searchParams: this.searchParams,\n      hash: this.hash,\n    }\n  }\n\n  clone() {\n    return new NextURL(String(this), this[Internal].options)\n  }\n}\n","export class PageSignatureError extends Error {\n  constructor({ page }: { page: string }) {\n    super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `)\n  }\n}\n\nexport class RemovedPageError extends Error {\n  constructor() {\n    super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `)\n  }\n}\n\nexport class RemovedUAError extends Error {\n  constructor() {\n    super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `)\n  }\n}\n","export {\n  RequestCookies,\n  ResponseCookies,\n  stringifyCookie,\n} from 'next/dist/compiled/@edge-runtime/cookies'\n","import type { I18NConfig } from '../../config-shared'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { RemovedUAError, RemovedPageError } from '../error'\nimport { RequestCookies } from './cookies'\n\nexport const INTERNALS = Symbol('internal request')\n\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */\nexport class NextRequest extends Request {\n  /** @internal */\n  [INTERNALS]: {\n    cookies: RequestCookies\n    url: string\n    nextUrl: NextURL\n  }\n\n  constructor(input: URL | RequestInfo, init: RequestInit = {}) {\n    const url =\n      typeof input !== 'string' && 'url' in input ? input.url : String(input)\n\n    validateURL(url)\n\n    // node Request instance requires duplex option when a body\n    // is present or it errors, we don't handle this for\n    // Request being passed in since it would have already\n    // errored if this wasn't configured\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      if (init.body && init.duplex !== 'half') {\n        init.duplex = 'half'\n      }\n    }\n\n    if (input instanceof Request) super(input, init)\n    else super(url, init)\n\n    const nextUrl = new NextURL(url, {\n      headers: toNodeOutgoingHttpHeaders(this.headers),\n      nextConfig: init.nextConfig,\n    })\n    this[INTERNALS] = {\n      cookies: new RequestCookies(this.headers),\n      nextUrl,\n      url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        ? url\n        : nextUrl.toString(),\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      nextUrl: this.nextUrl,\n      url: this.url,\n      // rest of props come from Request\n      bodyUsed: this.bodyUsed,\n      cache: this.cache,\n      credentials: this.credentials,\n      destination: this.destination,\n      headers: Object.fromEntries(this.headers),\n      integrity: this.integrity,\n      keepalive: this.keepalive,\n      method: this.method,\n      mode: this.mode,\n      redirect: this.redirect,\n      referrer: this.referrer,\n      referrerPolicy: this.referrerPolicy,\n      signal: this.signal,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  public get nextUrl() {\n    return this[INTERNALS].nextUrl\n  }\n\n  /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */\n  public get page() {\n    throw new RemovedPageError()\n  }\n\n  /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */\n  public get ua() {\n    throw new RemovedUAError()\n  }\n\n  public get url() {\n    return this[INTERNALS].url\n  }\n}\n\nexport interface RequestInit extends globalThis.RequestInit {\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  signal?: AbortSignal\n  // see https://github.com/whatwg/fetch/pull/1457\n  duplex?: 'half'\n}\n","import type { BaseNextRequest, BaseNextResponse } from './'\nimport type { NodeNextRequest, NodeNextResponse } from './node'\nimport type { WebNextRequest, WebNextResponse } from './web'\n\n/**\n * This file provides some helpers that should be used in conjunction with\n * explicit environment checks. When combined with the environment checks, it\n * will ensure that the correct typings are used as well as enable code\n * elimination.\n */\n\n/**\n * Type guard to determine if a request is a WebNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base request is a WebNextRequest.\n */\nexport const isWebNextRequest = (req: BaseNextRequest): req is WebNextRequest =>\n  process.env.NEXT_RUNTIME === 'edge'\n\n/**\n * Type guard to determine if a response is a WebNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base response is a WebNextResponse.\n */\nexport const isWebNextResponse = (\n  res: BaseNextResponse\n): res is WebNextResponse => process.env.NEXT_RUNTIME === 'edge'\n\n/**\n * Type guard to determine if a request is a NodeNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base request is a NodeNextRequest.\n */\nexport const isNodeNextRequest = (\n  req: BaseNextRequest\n): req is NodeNextRequest => process.env.NEXT_RUNTIME !== 'edge'\n\n/**\n * Type guard to determine if a response is a NodeNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base response is a NodeNextResponse.\n */\nexport const isNodeNextResponse = (\n  res: BaseNextResponse\n): res is NodeNextResponse => process.env.NEXT_RUNTIME !== 'edge'\n","import type { BaseNextRequest } from '../../../base-http'\nimport type { NodeNextRequest } from '../../../base-http/node'\nimport type { WebNextRequest } from '../../../base-http/web'\nimport type { Writable } from 'node:stream'\n\nimport { getRequestMeta } from '../../../request-meta'\nimport { fromNodeOutgoingHttpHeaders } from '../../utils'\nimport { NextRequest } from '../request'\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers'\n\nexport const ResponseAbortedName = 'ResponseAborted'\nexport class ResponseAborted extends Error {\n  public readonly name = ResponseAbortedName\n}\n\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */\nexport function createAbortController(response: Writable): AbortController {\n  const controller = new AbortController()\n\n  // If `finish` fires first, then `res.end()` has been called and the close is\n  // just us finishing the stream on our side. If `close` fires first, then we\n  // know the client disconnected before we finished.\n  response.once('close', () => {\n    if (response.writableFinished) return\n\n    controller.abort(new ResponseAborted())\n  })\n\n  return controller\n}\n\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */\nexport function signalFromNodeResponse(response: Writable): AbortSignal {\n  const { errored, destroyed } = response\n  if (errored || destroyed) {\n    return AbortSignal.abort(errored ?? new ResponseAborted())\n  }\n\n  const { signal } = createAbortController(response)\n  return signal\n}\n\nexport class NextRequestAdapter {\n  public static fromBaseNextRequest(\n    request: BaseNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME === 'edge' &&\n      isWebNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromWebNextRequest(request)\n    } else if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME !== 'edge' &&\n      isNodeNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromNodeNextRequest(request, signal)\n    } else {\n      throw new Error('Invariant: Unsupported NextRequest type')\n    }\n  }\n\n  public static fromNodeNextRequest(\n    request: NodeNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: BodyInit | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n      // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n      body = request.body\n    }\n\n    let url: URL\n    if (request.url.startsWith('http')) {\n      url = new URL(request.url)\n    } else {\n      // Grab the full URL from the request metadata.\n      const base = getRequestMeta(request, 'initURL')\n      if (!base || !base.startsWith('http')) {\n        // Because the URL construction relies on the fact that the URL provided\n        // is absolute, we need to provide a base URL. We can't use the request\n        // URL because it's relative, so we use a dummy URL instead.\n        url = new URL(request.url, 'http://n')\n      } else {\n        url = new URL(request.url, base)\n      }\n    }\n\n    return new NextRequest(url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n\n  public static fromWebNextRequest(request: WebNextRequest): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: ReadableStream | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD') {\n      body = request.body\n    }\n\n    return new NextRequest(request.url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal: request.request.signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(request.request.signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n}\n","import type { AppPageModule } from './route-modules/app-page/module'\n\n// Combined load times for loading client components\nlet clientComponentLoadStart = 0\nlet clientComponentLoadTimes = 0\nlet clientComponentLoadCount = 0\n\nexport function wrapClientComponentLoader(\n  ComponentMod: AppPageModule\n): AppPageModule['__next_app__'] {\n  if (!('performance' in globalThis)) {\n    return ComponentMod.__next_app__\n  }\n\n  return {\n    require: (...args) => {\n      const startTime = performance.now()\n\n      if (clientComponentLoadStart === 0) {\n        clientComponentLoadStart = startTime\n      }\n\n      try {\n        clientComponentLoadCount += 1\n        return ComponentMod.__next_app__.require(...args)\n      } finally {\n        clientComponentLoadTimes += performance.now() - startTime\n      }\n    },\n    loadChunk: (...args) => {\n      const startTime = performance.now()\n      const result = ComponentMod.__next_app__.loadChunk(...args)\n      // Avoid wrapping `loadChunk`'s result in an extra promise in case something like React depends on its identity.\n      // We only need to know when it's settled.\n      result.finally(() => {\n        clientComponentLoadTimes += performance.now() - startTime\n      })\n      return result\n    },\n  }\n}\n\nexport function getClientComponentLoaderMetrics(\n  options: { reset?: boolean } = {}\n) {\n  const metrics =\n    clientComponentLoadStart === 0\n      ? undefined\n      : {\n          clientComponentLoadStart,\n          clientComponentLoadTimes,\n          clientComponentLoadCount,\n        }\n\n  if (options.reset) {\n    clientComponentLoadStart = 0\n    clientComponentLoadTimes = 0\n    clientComponentLoadCount = 0\n  }\n\n  return metrics\n}\n","import type { ServerResponse } from 'node:http'\n\nimport {\n  ResponseAbortedName,\n  createAbortController,\n} from './web/spec-extension/adapters/next-request'\nimport { DetachedPromise } from '../lib/detached-promise'\nimport { getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger'\n\nexport function isAbortError(e: any): e is Error & { name: 'AbortError' } {\n  return e?.name === 'AbortError' || e?.name === ResponseAbortedName\n}\n\nfunction createWriterFromResponse(\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n): WritableStream<Uint8Array> {\n  let started = false\n\n  // Create a promise that will resolve once the response has drained. See\n  // https://nodejs.org/api/stream.html#stream_event_drain\n  let drained = new DetachedPromise<void>()\n  function onDrain() {\n    drained.resolve()\n  }\n  res.on('drain', onDrain)\n\n  // If the finish event fires, it means we shouldn't block and wait for the\n  // drain event.\n  res.once('close', () => {\n    res.off('drain', onDrain)\n    drained.resolve()\n  })\n\n  // Create a promise that will resolve once the response has finished. See\n  // https://nodejs.org/api/http.html#event-finish_1\n  const finished = new DetachedPromise<void>()\n  res.once('finish', () => {\n    finished.resolve()\n  })\n\n  // Create a writable stream that will write to the response.\n  return new WritableStream<Uint8Array>({\n    write: async (chunk) => {\n      // You'd think we'd want to use `start` instead of placing this in `write`\n      // but this ensures that we don't actually flush the headers until we've\n      // started writing chunks.\n      if (!started) {\n        started = true\n\n        if (\n          'performance' in globalThis &&\n          process.env.NEXT_OTEL_PERFORMANCE_PREFIX\n        ) {\n          const metrics = getClientComponentLoaderMetrics()\n          if (metrics) {\n            performance.measure(\n              `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`,\n              {\n                start: metrics.clientComponentLoadStart,\n                end:\n                  metrics.clientComponentLoadStart +\n                  metrics.clientComponentLoadTimes,\n              }\n            )\n          }\n        }\n\n        res.flushHeaders()\n        getTracer().trace(\n          NextNodeServerSpan.startResponse,\n          {\n            spanName: 'start response',\n          },\n          () => undefined\n        )\n      }\n\n      try {\n        const ok = res.write(chunk)\n\n        // Added by the `compression` middleware, this is a function that will\n        // flush the partially-compressed response to the client.\n        if ('flush' in res && typeof res.flush === 'function') {\n          res.flush()\n        }\n\n        // If the write returns false, it means there's some backpressure, so\n        // wait until it's streamed before continuing.\n        if (!ok) {\n          await drained.promise\n\n          // Reset the drained promise so that we can wait for the next drain event.\n          drained = new DetachedPromise<void>()\n        }\n      } catch (err) {\n        res.end()\n        throw new Error('failed to write chunk to response', { cause: err })\n      }\n    },\n    abort: (err) => {\n      if (res.writableFinished) return\n\n      res.destroy(err)\n    },\n    close: async () => {\n      // if a waitUntil promise was passed, wait for it to resolve before\n      // ending the response.\n      if (waitUntilForEnd) {\n        await waitUntilForEnd\n      }\n\n      if (res.writableFinished) return\n\n      res.end()\n      return finished.promise\n    },\n  })\n}\n\nexport async function pipeToNodeResponse(\n  readable: ReadableStream<Uint8Array>,\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n) {\n  try {\n    // If the response has already errored, then just return now.\n    const { errored, destroyed } = res\n    if (errored || destroyed) return\n\n    // Create a new AbortController so that we can abort the readable if the\n    // client disconnects.\n    const controller = createAbortController(res)\n\n    const writer = createWriterFromResponse(res, waitUntilForEnd)\n\n    await readable.pipeTo(writer, { signal: controller.signal })\n  } catch (err: any) {\n    // If this isn't related to an abort error, re-throw it.\n    if (isAbortError(err)) return\n\n    throw new Error('failed to pipe response', { cause: err })\n  }\n}\n","import type { OutgoingHttpHeaders, ServerResponse } from 'http'\nimport type { CacheControl } from './lib/cache-control'\nimport type { FetchMetrics } from './base-http'\n\nimport {\n  chainStreams,\n  streamFromBuffer,\n  streamFromString,\n  streamToString,\n} from './stream-utils/node-web-streams-helper'\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable'\nimport type { RenderResumeDataCache } from './resume-data-cache/resume-data-cache'\nimport { InvariantError } from '../shared/lib/invariant-error'\nimport type {\n  HTML_CONTENT_TYPE_HEADER,\n  JSON_CONTENT_TYPE_HEADER,\n  TEXT_PLAIN_CONTENT_TYPE_HEADER,\n} from '../lib/constants'\nimport type { RSC_CONTENT_TYPE_HEADER } from '../client/components/app-router-headers'\n\ntype ContentTypeOption =\n  | typeof RSC_CONTENT_TYPE_HEADER // For App Page RSC responses\n  | typeof HTML_CONTENT_TYPE_HEADER // For App Page, Pages HTML responses\n  | typeof JSON_CONTENT_TYPE_HEADER // For API routes, Next.js data requests\n  | typeof TEXT_PLAIN_CONTENT_TYPE_HEADER // For simplified errors\n\nexport type AppPageRenderResultMetadata = {\n  flightData?: Buffer\n  cacheControl?: CacheControl\n  staticBailoutInfo?: {\n    stack?: string\n    description?: string\n  }\n\n  /**\n   * The postponed state if the render had postponed and needs to be resumed.\n   */\n  postponed?: string\n\n  /**\n   * The headers to set on the response that were added by the render.\n   */\n  headers?: OutgoingHttpHeaders\n  statusCode?: number\n  fetchTags?: string\n  fetchMetrics?: FetchMetrics\n\n  segmentData?: Map<string, Buffer>\n\n  /**\n   * In development, the resume data cache is warmed up before the render. This\n   * is attached to the metadata so that it can be used during the render. When\n   * prerendering, the filled resume data cache is also attached to the metadata\n   * so that it can be used when prerendering matching fallback shells.\n   */\n  renderResumeDataCache?: RenderResumeDataCache\n}\n\nexport type PagesRenderResultMetadata = {\n  pageData?: any\n  cacheControl?: CacheControl\n  assetQueryString?: string\n  isNotFound?: boolean\n  isRedirect?: boolean\n}\n\nexport type StaticRenderResultMetadata = {}\n\nexport type RenderResultMetadata = AppPageRenderResultMetadata &\n  PagesRenderResultMetadata &\n  StaticRenderResultMetadata\n\nexport type RenderResultResponse =\n  | ReadableStream<Uint8Array>[]\n  | ReadableStream<Uint8Array>\n  | string\n  | Buffer\n  | null\n\nexport type RenderResultOptions<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> = {\n  contentType: ContentTypeOption | null\n  waitUntil?: Promise<unknown>\n  metadata: Metadata\n}\n\nexport default class RenderResult<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> {\n  /**\n   * The detected content type for the response. This is used to set the\n   * `Content-Type` header.\n   */\n  public readonly contentType: ContentTypeOption | null\n\n  /**\n   * The metadata for the response. This is used to set the revalidation times\n   * and other metadata.\n   */\n  public readonly metadata: Readonly<Metadata>\n\n  /**\n   * The response itself. This can be a string, a stream, or null. If it's a\n   * string, then it's a static response. If it's a stream, then it's a\n   * dynamic response. If it's null, then the response was not found or was\n   * already sent.\n   */\n  private response: RenderResultResponse\n\n  /**\n   * A render result that represents an empty response. This is used to\n   * represent a response that was not found or was already sent.\n   */\n  public static readonly EMPTY = new RenderResult<StaticRenderResultMetadata>(\n    null,\n    { metadata: {}, contentType: null }\n  )\n\n  /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @param contentType the content type of the response\n   * @returns a new RenderResult instance\n   */\n  public static fromStatic(\n    value: string | Buffer,\n    contentType: ContentTypeOption\n  ) {\n    return new RenderResult<StaticRenderResultMetadata>(value, {\n      metadata: {},\n      contentType,\n    })\n  }\n\n  private readonly waitUntil?: Promise<unknown>\n\n  constructor(\n    response: RenderResultResponse,\n    { contentType, waitUntil, metadata }: RenderResultOptions<Metadata>\n  ) {\n    this.response = response\n    this.contentType = contentType\n    this.metadata = metadata\n    this.waitUntil = waitUntil\n  }\n\n  public assignMetadata(metadata: Metadata) {\n    Object.assign(this.metadata, metadata)\n  }\n\n  /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */\n  public get isNull(): boolean {\n    return this.response === null\n  }\n\n  /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */\n  public get isDynamic(): boolean {\n    return typeof this.response !== 'string'\n  }\n\n  /**\n   * Returns the response if it is a string. If the page was dynamic, this will\n   * return a promise if the `stream` option is true, or it will throw an error.\n   *\n   * @param stream Whether or not to return a promise if the response is dynamic\n   * @returns The response as a string\n   */\n  public toUnchunkedString(stream?: false): string\n  public toUnchunkedString(stream: true): Promise<string>\n  public toUnchunkedString(stream = false): Promise<string> | string {\n    if (this.response === null) {\n      // If the response is null, return an empty string. This behavior is\n      // intentional as we're now providing the `RenderResult.EMPTY` value.\n      return ''\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new InvariantError(\n          'dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToString(this.readable)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Returns a readable stream of the response.\n   */\n  private get readable(): ReadableStream<Uint8Array> {\n    if (this.response === null) {\n      // If the response is null, return an empty stream. This behavior is\n      // intentional as we're now providing the `RenderResult.EMPTY` value.\n      return new ReadableStream<Uint8Array>({\n        start(controller) {\n          controller.close()\n        },\n      })\n    }\n\n    if (typeof this.response === 'string') {\n      return streamFromString(this.response)\n    }\n\n    if (Buffer.isBuffer(this.response)) {\n      return streamFromBuffer(this.response)\n    }\n\n    // If the response is an array of streams, then chain them together.\n    if (Array.isArray(this.response)) {\n      return chainStreams(...this.response)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Coerces the response to an array of streams. This will convert the response\n   * to an array of streams if it is not already one.\n   *\n   * @returns An array of streams\n   */\n  private coerce(): ReadableStream<Uint8Array>[] {\n    if (this.response === null) {\n      // If the response is null, return an empty stream. This behavior is\n      // intentional as we're now providing the `RenderResult.EMPTY` value.\n      return []\n    }\n\n    if (typeof this.response === 'string') {\n      return [streamFromString(this.response)]\n    } else if (Array.isArray(this.response)) {\n      return this.response\n    } else if (Buffer.isBuffer(this.response)) {\n      return [streamFromBuffer(this.response)]\n    } else {\n      return [this.response]\n    }\n  }\n\n  /**\n   * Unshifts a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the start of the array. When this response is piped, all of the streams\n   * will be piped one after the other.\n   *\n   * @param readable The new stream to unshift\n   */\n  public unshift(readable: ReadableStream<Uint8Array>): void {\n    // Coerce the response to an array of streams.\n    this.response = this.coerce()\n\n    // Add the new stream to the start of the array.\n    this.response.unshift(readable)\n  }\n\n  /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */\n  public push(readable: ReadableStream<Uint8Array>): void {\n    // Coerce the response to an array of streams.\n    this.response = this.coerce()\n\n    // Add the new stream to the end of the array.\n    this.response.push(readable)\n  }\n\n  /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */\n  public async pipeTo(writable: WritableStream<Uint8Array>): Promise<void> {\n    try {\n      await this.readable.pipeTo(writable, {\n        // We want to close the writable stream ourselves so that we can wait\n        // for the waitUntil promise to resolve before closing it. If an error\n        // is encountered, we'll abort the writable stream if we swallowed the\n        // error.\n        preventClose: true,\n      })\n\n      // If there is a waitUntil promise, wait for it to resolve before\n      // closing the writable stream.\n      if (this.waitUntil) await this.waitUntil\n\n      // Close the writable stream.\n      await writable.close()\n    } catch (err) {\n      // If this is an abort error, we should abort the writable stream (as we\n      // took ownership of it when we started piping). We don't need to re-throw\n      // because we handled the error.\n      if (isAbortError(err)) {\n        // Abort the writable stream if an error is encountered.\n        await writable.abort(err)\n\n        return\n      }\n\n      // We're not aborting the writer here as when this method throws it's not\n      // clear as to how so the caller should assume it's their responsibility\n      // to clean up the writer.\n      throw err\n    }\n  }\n\n  /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */\n  public async pipeToNodeResponse(res: ServerResponse) {\n    await pipeToNodeResponse(this.readable, res, this.waitUntil)\n  }\n}\n","export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n","import {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedAppPageValue,\n  type CachedPageValue,\n  type IncrementalResponseCacheEntry,\n  type ResponseCacheEntry,\n} from './types'\n\nimport RenderResult from '../render-result'\nimport { RouteKind } from '../route-kind'\nimport { HTML_CONTENT_TYPE_HEADER } from '../../lib/constants'\n\nexport async function fromResponseCacheEntry(\n  cacheEntry: ResponseCacheEntry\n): Promise<IncrementalResponseCacheEntry> {\n  return {\n    ...cacheEntry,\n    value:\n      cacheEntry.value?.kind === CachedRouteKind.PAGES\n        ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n          }\n        : cacheEntry.value?.kind === CachedRouteKind.APP_PAGE\n          ? {\n              kind: CachedRouteKind.APP_PAGE,\n              html: await cacheEntry.value.html.toUnchunkedString(true),\n              postponed: cacheEntry.value.postponed,\n              rscData: cacheEntry.value.rscData,\n              headers: cacheEntry.value.headers,\n              status: cacheEntry.value.status,\n              segmentData: cacheEntry.value.segmentData,\n            }\n          : cacheEntry.value,\n  }\n}\n\nexport async function toResponseCacheEntry(\n  response: IncrementalResponseCacheEntry | null\n): Promise<ResponseCacheEntry | null> {\n  if (!response) return null\n\n  return {\n    isMiss: response.isMiss,\n    isStale: response.isStale,\n    cacheControl: response.cacheControl,\n    value:\n      response.value?.kind === CachedRouteKind.PAGES\n        ? ({\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(\n              response.value.html,\n              HTML_CONTENT_TYPE_HEADER\n            ),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status,\n          } satisfies CachedPageValue)\n        : response.value?.kind === CachedRouteKind.APP_PAGE\n          ? ({\n              kind: CachedRouteKind.APP_PAGE,\n              html: RenderResult.fromStatic(\n                response.value.html,\n                HTML_CONTENT_TYPE_HEADER\n              ),\n              rscData: response.value.rscData,\n              headers: response.value.headers,\n              status: response.value.status,\n              postponed: response.value.postponed,\n              segmentData: response.value.segmentData,\n            } satisfies CachedAppPageValue)\n          : response.value,\n  }\n}\n\nexport function routeKindToIncrementalCacheKind(\n  routeKind: RouteKind\n): Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH> {\n  switch (routeKind) {\n    case RouteKind.PAGES:\n      return IncrementalCacheKind.PAGES\n    case RouteKind.APP_PAGE:\n      return IncrementalCacheKind.APP_PAGE\n    case RouteKind.IMAGE:\n      return IncrementalCacheKind.IMAGE\n    case RouteKind.APP_ROUTE:\n      return IncrementalCacheKind.APP_ROUTE\n    case RouteKind.PAGES_API:\n      // Pages Router API routes are not cached in the incremental cache.\n      throw new Error(`Unexpected route kind ${routeKind}`)\n    default:\n      return routeKind satisfies never\n  }\n}\n","import type {\n  ResponseCacheEntry,\n  ResponseGenerator,\n  ResponseCacheBase,\n  IncrementalResponseCacheEntry,\n  IncrementalResponseCache,\n} from './types'\n\nimport { Batcher } from '../../lib/batcher'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport {\n  fromResponseCacheEntry,\n  routeKindToIncrementalCacheKind,\n  toResponseCacheEntry,\n} from './utils'\nimport type { RouteKind } from '../route-kind'\n\nexport * from './types'\n\nexport default class ResponseCache implements ResponseCacheBase {\n  private readonly getBatcher = Batcher.create<\n    { key: string; isOnDemandRevalidate: boolean },\n    IncrementalResponseCacheEntry | null,\n    string\n  >({\n    // Ensure on-demand revalidate doesn't block normal requests, it should be\n    // safe to run an on-demand revalidate for the same key as a normal request.\n    cacheKeyFn: ({ key, isOnDemandRevalidate }) =>\n      `${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n    // We wait to do any async work until after we've added our promise to\n    // `pendingResponses` to ensure that any any other calls will reuse the\n    // same promise until we've fully finished our work.\n    schedulerFn: scheduleOnNextTick,\n  })\n\n  private readonly revalidateBatcher = Batcher.create<\n    string,\n    IncrementalResponseCacheEntry | null\n  >({\n    // We wait to do any async work until after we've added our promise to\n    // `pendingResponses` to ensure that any any other calls will reuse the\n    // same promise until we've fully finished our work.\n    schedulerFn: scheduleOnNextTick,\n  })\n\n  private previousCacheItem?: {\n    key: string\n    entry: IncrementalResponseCacheEntry | null\n    expiresAt: number\n  }\n\n  // we don't use minimal_mode name here as this.minimal_mode is\n  // statically replace for server runtimes but we need it to\n  // be dynamic here\n  private minimal_mode?: boolean\n\n  constructor(minimal_mode: boolean) {\n    this.minimal_mode = minimal_mode\n  }\n\n  /**\n   * Gets the response cache entry for the given key.\n   *\n   * @param key - The key to get the response cache entry for.\n   * @param responseGenerator - The response generator to use to generate the response cache entry.\n   * @param context - The context for the get request.\n   * @returns The response cache entry.\n   */\n  public async get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      routeKind: RouteKind\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalResponseCache\n      isRoutePPREnabled?: boolean\n      isFallback?: boolean\n      waitUntil?: (prom: Promise<any>) => void\n    }\n  ): Promise<ResponseCacheEntry | null> {\n    // If there is no key for the cache, we can't possibly look this up in the\n    // cache so just return the result of the response generator.\n    if (!key) {\n      return responseGenerator({\n        hasResolved: false,\n        previousCacheEntry: null,\n      })\n    }\n\n    // Check minimal mode cache before doing any other work\n    if (\n      this.minimal_mode &&\n      this.previousCacheItem?.key === key &&\n      this.previousCacheItem.expiresAt > Date.now()\n    ) {\n      return toResponseCacheEntry(this.previousCacheItem.entry)\n    }\n\n    const {\n      incrementalCache,\n      isOnDemandRevalidate = false,\n      isFallback = false,\n      isRoutePPREnabled = false,\n      isPrefetch = false,\n      waitUntil,\n      routeKind,\n    } = context\n\n    const response = await this.getBatcher.batch(\n      { key, isOnDemandRevalidate },\n      ({ resolve }) => {\n        const promise = this.handleGet(\n          key,\n          responseGenerator,\n          {\n            incrementalCache,\n            isOnDemandRevalidate,\n            isFallback,\n            isRoutePPREnabled,\n            isPrefetch,\n            routeKind,\n          },\n          resolve\n        )\n\n        // We need to ensure background revalidates are passed to waitUntil.\n        if (waitUntil) waitUntil(promise)\n\n        return promise\n      }\n    )\n\n    return toResponseCacheEntry(response)\n  }\n\n  /**\n   * Handles the get request for the response cache.\n   *\n   * @param key - The key to get the response cache entry for.\n   * @param responseGenerator - The response generator to use to generate the response cache entry.\n   * @param context - The context for the get request.\n   * @param resolve - The resolve function to use to resolve the response cache entry.\n   * @returns The response cache entry.\n   */\n  private async handleGet(\n    key: string,\n    responseGenerator: ResponseGenerator,\n    context: {\n      incrementalCache: IncrementalResponseCache\n      isOnDemandRevalidate: boolean\n      isFallback: boolean\n      isRoutePPREnabled: boolean\n      isPrefetch: boolean\n      routeKind: RouteKind\n    },\n    resolve: (value: IncrementalResponseCacheEntry | null) => void\n  ): Promise<IncrementalResponseCacheEntry | null> {\n    let previousIncrementalCacheEntry: IncrementalResponseCacheEntry | null =\n      null\n    let resolved = false\n\n    try {\n      // Get the previous cache entry if not in minimal mode\n      previousIncrementalCacheEntry = !this.minimal_mode\n        ? await context.incrementalCache.get(key, {\n            kind: routeKindToIncrementalCacheKind(context.routeKind),\n            isRoutePPREnabled: context.isRoutePPREnabled,\n            isFallback: context.isFallback,\n          })\n        : null\n\n      if (previousIncrementalCacheEntry && !context.isOnDemandRevalidate) {\n        resolve(previousIncrementalCacheEntry)\n        resolved = true\n\n        if (!previousIncrementalCacheEntry.isStale || context.isPrefetch) {\n          // The cached value is still valid, so we don't need to update it yet.\n          return previousIncrementalCacheEntry\n        }\n      }\n\n      // Revalidate the cache entry\n      const incrementalResponseCacheEntry = await this.revalidate(\n        key,\n        context.incrementalCache,\n        context.isRoutePPREnabled,\n        context.isFallback,\n        responseGenerator,\n        previousIncrementalCacheEntry,\n        previousIncrementalCacheEntry !== null && !context.isOnDemandRevalidate\n      )\n\n      // Handle null response\n      if (!incrementalResponseCacheEntry) {\n        // Unset the previous cache item if it was set so we don't use it again.\n        if (this.minimal_mode) this.previousCacheItem = undefined\n        return null\n      }\n\n      // Resolve for on-demand revalidation or if not already resolved\n      if (context.isOnDemandRevalidate && !resolved) {\n        return incrementalResponseCacheEntry\n      }\n\n      return incrementalResponseCacheEntry\n    } catch (err) {\n      // If we've already resolved the cache entry, we can't reject as we\n      // already resolved the cache entry so log the error here.\n      if (resolved) {\n        console.error(err)\n        return null\n      }\n\n      throw err\n    }\n  }\n\n  /**\n   * Revalidates the cache entry for the given key.\n   *\n   * @param key - The key to revalidate the cache entry for.\n   * @param incrementalCache - The incremental cache to use to revalidate the cache entry.\n   * @param isRoutePPREnabled - Whether the route is PPR enabled.\n   * @param isFallback - Whether the route is a fallback.\n   * @param responseGenerator - The response generator to use to generate the response cache entry.\n   * @param previousIncrementalCacheEntry - The previous cache entry to use to revalidate the cache entry.\n   * @param hasResolved - Whether the response has been resolved.\n   * @returns The revalidated cache entry.\n   */\n  public async revalidate(\n    key: string,\n    incrementalCache: IncrementalResponseCache,\n    isRoutePPREnabled: boolean,\n    isFallback: boolean,\n    responseGenerator: ResponseGenerator,\n    previousIncrementalCacheEntry: IncrementalResponseCacheEntry | null,\n    hasResolved: boolean,\n    waitUntil?: (prom: Promise<any>) => void\n  ) {\n    return this.revalidateBatcher.batch(key, () => {\n      const promise = this.handleRevalidate(\n        key,\n        incrementalCache,\n        isRoutePPREnabled,\n        isFallback,\n        responseGenerator,\n        previousIncrementalCacheEntry,\n        hasResolved\n      )\n\n      // We need to ensure background revalidates are passed to waitUntil.\n      if (waitUntil) waitUntil(promise)\n\n      return promise\n    })\n  }\n\n  private async handleRevalidate(\n    key: string,\n    incrementalCache: IncrementalResponseCache,\n    isRoutePPREnabled: boolean,\n    isFallback: boolean,\n    responseGenerator: ResponseGenerator,\n    previousIncrementalCacheEntry: IncrementalResponseCacheEntry | null,\n    hasResolved: boolean\n  ) {\n    try {\n      // Generate the response cache entry using the response generator.\n      const responseCacheEntry = await responseGenerator({\n        hasResolved,\n        previousCacheEntry: previousIncrementalCacheEntry,\n        isRevalidating: true,\n      })\n      if (!responseCacheEntry) {\n        return null\n      }\n\n      // Convert the response cache entry to an incremental response cache entry.\n      const incrementalResponseCacheEntry = await fromResponseCacheEntry({\n        ...responseCacheEntry,\n        isMiss: !previousIncrementalCacheEntry,\n      })\n\n      // We want to persist the result only if it has a cache control value\n      // defined.\n      if (incrementalResponseCacheEntry.cacheControl) {\n        if (this.minimal_mode) {\n          this.previousCacheItem = {\n            key,\n            entry: incrementalResponseCacheEntry,\n            expiresAt: Date.now() + 1000,\n          }\n        } else {\n          await incrementalCache.set(key, incrementalResponseCacheEntry.value, {\n            cacheControl: incrementalResponseCacheEntry.cacheControl,\n            isRoutePPREnabled,\n            isFallback,\n          })\n        }\n      }\n\n      return incrementalResponseCacheEntry\n    } catch (err) {\n      // When a path is erroring we automatically re-set the existing cache\n      // with new revalidate and expire times to prevent non-stop retrying.\n      if (previousIncrementalCacheEntry?.cacheControl) {\n        const revalidate = Math.min(\n          Math.max(\n            previousIncrementalCacheEntry.cacheControl.revalidate || 3,\n            3\n          ),\n          30\n        )\n        const expire =\n          previousIncrementalCacheEntry.cacheControl.expire === undefined\n            ? undefined\n            : Math.max(\n                revalidate + 3,\n                previousIncrementalCacheEntry.cacheControl.expire\n              )\n\n        await incrementalCache.set(key, previousIncrementalCacheEntry.value, {\n          cacheControl: { revalidate: revalidate, expire: expire },\n          isRoutePPREnabled,\n          isFallback,\n        })\n      }\n\n      // We haven't resolved yet, so let's throw to indicate an error.\n      throw err\n    }\n  }\n}\n","import type {\n  WorkAsyncStorage,\n  WorkStore,\n} from '../app-render/work-async-storage.external'\n\nimport { AppRenderSpan, NextNodeServerSpan } from './trace/constants'\nimport { getTracer, SpanKind } from './trace/tracer'\nimport {\n  CACHE_ONE_YEAR,\n  INFINITE_CACHE,\n  NEXT_CACHE_TAG_MAX_ITEMS,\n  NEXT_CACHE_TAG_MAX_LENGTH,\n} from '../../lib/constants'\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport type { FetchMetric } from '../base-http'\nimport { createDedupeFetch } from './dedupe-fetch'\nimport {\n  getCacheSignal,\n  type RevalidateStore,\n  type WorkUnitAsyncStorage,\n} from '../app-render/work-unit-async-storage.external'\nimport {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedFetchData,\n  type ServerComponentsHmrCache,\n  type SetIncrementalFetchCacheContext,\n} from '../response-cache'\nimport { cloneResponse } from './clone-response'\nimport type { IncrementalCache } from './incremental-cache'\nimport { RenderStage } from '../app-render/staged-rendering'\n\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge'\n\ntype Fetcher = typeof fetch\n\ntype PatchedFetcher = Fetcher & {\n  readonly __nextPatched: true\n  readonly __nextGetStaticStore: () => WorkAsyncStorage\n  readonly _nextOriginalFetch: Fetcher\n}\n\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch')\n\nfunction isFetchPatched() {\n  return (globalThis as Record<symbol, unknown>)[NEXT_PATCH_SYMBOL] === true\n}\n\nexport function validateRevalidate(\n  revalidateVal: unknown,\n  route: string\n): undefined | number {\n  try {\n    let normalizedRevalidate: number | undefined = undefined\n\n    if (revalidateVal === false) {\n      normalizedRevalidate = INFINITE_CACHE\n    } else if (\n      typeof revalidateVal === 'number' &&\n      !isNaN(revalidateVal) &&\n      revalidateVal > -1\n    ) {\n      normalizedRevalidate = revalidateVal\n    } else if (typeof revalidateVal !== 'undefined') {\n      throw new Error(\n        `Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`\n      )\n    }\n    return normalizedRevalidate\n  } catch (err: any) {\n    // handle client component error from attempting to check revalidate value\n    if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n      throw err\n    }\n    return undefined\n  }\n}\n\nexport function validateTags(tags: any[], description: string) {\n  const validTags: string[] = []\n  const invalidTags: Array<{\n    tag: any\n    reason: string\n  }> = []\n\n  for (let i = 0; i < tags.length; i++) {\n    const tag = tags[i]\n\n    if (typeof tag !== 'string') {\n      invalidTags.push({ tag, reason: 'invalid type, must be a string' })\n    } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n      invalidTags.push({\n        tag,\n        reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`,\n      })\n    } else {\n      validTags.push(tag)\n    }\n\n    if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n      console.warn(\n        `Warning: exceeded max tag count for ${description}, dropped tags:`,\n        tags.slice(i).join(', ')\n      )\n      break\n    }\n  }\n\n  if (invalidTags.length > 0) {\n    console.warn(`Warning: invalid tags passed to ${description}: `)\n\n    for (const { tag, reason } of invalidTags) {\n      console.log(`tag: \"${tag}\" ${reason}`)\n    }\n  }\n  return validTags\n}\n\nfunction trackFetchMetric(\n  workStore: WorkStore,\n  ctx: Omit<FetchMetric, 'end' | 'idx'>\n) {\n  if (!workStore.shouldTrackFetchMetrics) {\n    return\n  }\n\n  workStore.fetchMetrics ??= []\n\n  workStore.fetchMetrics.push({\n    ...ctx,\n    end: performance.timeOrigin + performance.now(),\n    idx: workStore.nextFetchId || 0,\n  })\n}\n\nasync function createCachedPrerenderResponse(\n  res: Response,\n  cacheKey: string,\n  incrementalCacheContext: SetIncrementalFetchCacheContext | undefined,\n  incrementalCache: IncrementalCache,\n  revalidate: number,\n  handleUnlock: () => Promise<void> | void\n): Promise<Response> {\n  // We are prerendering at build time or revalidate time with cacheComponents so we\n  // need to buffer the response so we can guarantee it can be read in a\n  // microtask.\n  const bodyBuffer = await res.arrayBuffer()\n\n  const fetchedData = {\n    headers: Object.fromEntries(res.headers.entries()),\n    body: Buffer.from(bodyBuffer).toString('base64'),\n    status: res.status,\n    url: res.url,\n  }\n\n  // We can skip setting the serverComponentsHmrCache because we aren't in dev\n  // mode.\n\n  if (incrementalCacheContext) {\n    await incrementalCache.set(\n      cacheKey,\n      { kind: CachedRouteKind.FETCH, data: fetchedData, revalidate },\n      incrementalCacheContext\n    )\n  }\n\n  await handleUnlock()\n\n  // We return a new Response to the caller.\n  return new Response(bodyBuffer, {\n    headers: res.headers,\n    status: res.status,\n    statusText: res.statusText,\n  })\n}\n\nasync function createCachedDynamicResponse(\n  workStore: WorkStore,\n  res: Response,\n  cacheKey: string,\n  incrementalCacheContext: SetIncrementalFetchCacheContext | undefined,\n  incrementalCache: IncrementalCache,\n  serverComponentsHmrCache: ServerComponentsHmrCache | undefined,\n  revalidate: number,\n  input: RequestInfo | URL,\n  handleUnlock: () => Promise<void> | void\n): Promise<Response> {\n  // We're cloning the response using this utility because there exists a bug in\n  // the undici library around response cloning. See the following pull request\n  // for more details: https://github.com/vercel/next.js/pull/73274\n  const [cloned1, cloned2] = cloneResponse(res)\n\n  // We are dynamically rendering including dev mode. We want to return the\n  // response to the caller as soon as possible because it might stream over a\n  // very long time.\n  const cacheSetPromise = cloned1\n    .arrayBuffer()\n    .then(async (arrayBuffer) => {\n      const bodyBuffer = Buffer.from(arrayBuffer)\n\n      const fetchedData = {\n        headers: Object.fromEntries(cloned1.headers.entries()),\n        body: bodyBuffer.toString('base64'),\n        status: cloned1.status,\n        url: cloned1.url,\n      }\n\n      serverComponentsHmrCache?.set(cacheKey, fetchedData)\n\n      if (incrementalCacheContext) {\n        await incrementalCache.set(\n          cacheKey,\n          { kind: CachedRouteKind.FETCH, data: fetchedData, revalidate },\n          incrementalCacheContext\n        )\n      }\n    })\n    .catch((error) => console.warn(`Failed to set fetch cache`, input, error))\n    .finally(handleUnlock)\n\n  const pendingRevalidateKey = `cache-set-${cacheKey}`\n  workStore.pendingRevalidates ??= {}\n\n  if (pendingRevalidateKey in workStore.pendingRevalidates) {\n    // there is already a pending revalidate entry that we need to await to\n    // avoid race conditions\n    await workStore.pendingRevalidates[pendingRevalidateKey]\n  }\n\n  workStore.pendingRevalidates[pendingRevalidateKey] = cacheSetPromise.finally(\n    () => {\n      // If the pending revalidate is not present in the store, then we have\n      // nothing to delete.\n      if (!workStore.pendingRevalidates?.[pendingRevalidateKey]) {\n        return\n      }\n\n      delete workStore.pendingRevalidates[pendingRevalidateKey]\n    }\n  )\n\n  return cloned2\n}\n\ninterface PatchableModule {\n  workAsyncStorage: WorkAsyncStorage\n  workUnitAsyncStorage: WorkUnitAsyncStorage\n}\n\nexport function createPatchedFetcher(\n  originFetch: Fetcher,\n  { workAsyncStorage, workUnitAsyncStorage }: PatchableModule\n): PatchedFetcher {\n  // Create the patched fetch function.\n  const patched = async function fetch(\n    input: RequestInfo | URL,\n    init: RequestInit | undefined\n  ): Promise<Response> {\n    let url: URL | undefined\n    try {\n      url = new URL(input instanceof Request ? input.url : input)\n      url.username = ''\n      url.password = ''\n    } catch {\n      // Error caused by malformed URL should be handled by native fetch\n      url = undefined\n    }\n    const fetchUrl = url?.href ?? ''\n    const method = init?.method?.toUpperCase() || 'GET'\n\n    // Do create a new span trace for internal fetches in the\n    // non-verbose mode.\n    const isInternal = (init?.next as any)?.internal === true\n    const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1'\n    // We don't track fetch metrics for internal fetches\n    // so it's not critical that we have a start time, as it won't be recorded.\n    // This is to workaround a flaky issue where performance APIs might\n    // not be available and will require follow-up investigation.\n    const fetchStart: number | undefined = isInternal\n      ? undefined\n      : performance.timeOrigin + performance.now()\n\n    const workStore = workAsyncStorage.getStore()\n    const workUnitStore = workUnitAsyncStorage.getStore()\n\n    let cacheSignal = workUnitStore ? getCacheSignal(workUnitStore) : null\n    if (cacheSignal) {\n      cacheSignal.beginRead()\n    }\n\n    const result = getTracer().trace(\n      isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch,\n      {\n        hideSpan,\n        kind: SpanKind.CLIENT,\n        spanName: ['fetch', method, fetchUrl].filter(Boolean).join(' '),\n        attributes: {\n          'http.url': fetchUrl,\n          'http.method': method,\n          'net.peer.name': url?.hostname,\n          'net.peer.port': url?.port || undefined,\n        },\n      },\n      async () => {\n        // If this is an internal fetch, we should not do any special treatment.\n        if (isInternal) {\n          return originFetch(input, init)\n        }\n\n        // If the workStore is not available, we can't do any\n        // special treatment of fetch, therefore fallback to the original\n        // fetch implementation.\n        if (!workStore) {\n          return originFetch(input, init)\n        }\n\n        // We should also fallback to the original fetch implementation if we\n        // are in draft mode, it does not constitute a static generation.\n        if (workStore.isDraftMode) {\n          return originFetch(input, init)\n        }\n\n        const isRequestInput =\n          input &&\n          typeof input === 'object' &&\n          typeof (input as Request).method === 'string'\n\n        const getRequestMeta = (field: string) => {\n          // If request input is present but init is not, retrieve from input first.\n          const value = (init as any)?.[field]\n          return value || (isRequestInput ? (input as any)[field] : null)\n        }\n\n        let finalRevalidate: number | undefined = undefined\n        const getNextField = (field: 'revalidate' | 'tags') => {\n          return typeof init?.next?.[field] !== 'undefined'\n            ? init?.next?.[field]\n            : isRequestInput\n              ? (input as any).next?.[field]\n              : undefined\n        }\n        // RequestInit doesn't keep extra fields e.g. next so it's\n        // only available if init is used separate\n        const originalFetchRevalidate = getNextField('revalidate')\n        let currentFetchRevalidate = originalFetchRevalidate\n        const tags: string[] = validateTags(\n          getNextField('tags') || [],\n          `fetch ${input.toString()}`\n        )\n\n        let revalidateStore: RevalidateStore | undefined\n\n        if (workUnitStore) {\n          switch (workUnitStore.type) {\n            case 'prerender':\n            case 'prerender-runtime':\n            // TODO: Stop accumulating tags in client prerender. (fallthrough)\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'cache':\n            case 'private-cache':\n              revalidateStore = workUnitStore\n              break\n            case 'request':\n            case 'unstable-cache':\n              break\n            default:\n              workUnitStore satisfies never\n          }\n        }\n\n        if (revalidateStore) {\n          if (Array.isArray(tags)) {\n            // Collect tags onto parent caches or parent prerenders.\n            const collectedTags =\n              revalidateStore.tags ?? (revalidateStore.tags = [])\n            for (const tag of tags) {\n              if (!collectedTags.includes(tag)) {\n                collectedTags.push(tag)\n              }\n            }\n          }\n        }\n\n        const implicitTags = workUnitStore?.implicitTags\n\n        let pageFetchCacheMode = workStore.fetchCache\n\n        if (workUnitStore) {\n          switch (workUnitStore.type) {\n            case 'unstable-cache':\n              // Inside unstable-cache we treat it the same as force-no-store on\n              // the page.\n              pageFetchCacheMode = 'force-no-store'\n              break\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'request':\n            case 'cache':\n            case 'private-cache':\n              break\n            default:\n              workUnitStore satisfies never\n          }\n        }\n\n        const isUsingNoStore = !!workStore.isUnstableNoStore\n\n        let currentFetchCacheConfig = getRequestMeta('cache')\n        let cacheReason = ''\n        let cacheWarning: string | undefined\n\n        if (\n          typeof currentFetchCacheConfig === 'string' &&\n          typeof currentFetchRevalidate !== 'undefined'\n        ) {\n          // If the revalidate value conflicts with the cache value, we should warn the user and unset the conflicting values.\n          const isConflictingRevalidate =\n            // revalidate: 0 and cache: force-cache\n            (currentFetchCacheConfig === 'force-cache' &&\n              currentFetchRevalidate === 0) ||\n            // revalidate: >0 or revalidate: false and cache: no-store\n            (currentFetchCacheConfig === 'no-store' &&\n              (currentFetchRevalidate > 0 || currentFetchRevalidate === false))\n\n          if (isConflictingRevalidate) {\n            cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`\n            currentFetchCacheConfig = undefined\n            currentFetchRevalidate = undefined\n          }\n        }\n\n        const hasExplicitFetchCacheOptOut =\n          // fetch config itself signals not to cache\n          currentFetchCacheConfig === 'no-cache' ||\n          currentFetchCacheConfig === 'no-store' ||\n          // the fetch isn't explicitly caching and the segment level cache config signals not to cache\n          // note: `pageFetchCacheMode` is also set by being in an unstable_cache context.\n          pageFetchCacheMode === 'force-no-store' ||\n          pageFetchCacheMode === 'only-no-store'\n\n        // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n        // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n        // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n        // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n        // other configurations.\n        const noFetchConfigAndForceDynamic =\n          !pageFetchCacheMode &&\n          !currentFetchCacheConfig &&\n          !currentFetchRevalidate &&\n          workStore.forceDynamic\n\n        if (\n          // force-cache was specified without a revalidate value. We set the revalidate value to false\n          // which will signal the cache to not revalidate\n          currentFetchCacheConfig === 'force-cache' &&\n          typeof currentFetchRevalidate === 'undefined'\n        ) {\n          currentFetchRevalidate = false\n        } else if (\n          hasExplicitFetchCacheOptOut ||\n          noFetchConfigAndForceDynamic\n        ) {\n          currentFetchRevalidate = 0\n        }\n\n        if (\n          currentFetchCacheConfig === 'no-cache' ||\n          currentFetchCacheConfig === 'no-store'\n        ) {\n          cacheReason = `cache: ${currentFetchCacheConfig}`\n        }\n\n        finalRevalidate = validateRevalidate(\n          currentFetchRevalidate,\n          workStore.route\n        )\n\n        const _headers = getRequestMeta('headers')\n        const initHeaders: Headers =\n          typeof _headers?.get === 'function'\n            ? _headers\n            : new Headers(_headers || {})\n\n        const hasUnCacheableHeader =\n          initHeaders.get('authorization') || initHeaders.get('cookie')\n\n        const isUnCacheableMethod = !['get', 'head'].includes(\n          getRequestMeta('method')?.toLowerCase() || 'get'\n        )\n\n        /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */\n        const hasNoExplicitCacheConfig =\n          // eslint-disable-next-line eqeqeq\n          pageFetchCacheMode == undefined &&\n          // eslint-disable-next-line eqeqeq\n          (currentFetchCacheConfig == undefined ||\n            // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') &&\n          // eslint-disable-next-line eqeqeq\n          currentFetchRevalidate == undefined\n\n        let autoNoCache = Boolean(\n          (hasUnCacheableHeader || isUnCacheableMethod) &&\n            revalidateStore?.revalidate === 0\n        )\n\n        let isImplicitBuildTimeCache = false\n\n        if (!autoNoCache && hasNoExplicitCacheConfig) {\n          // We don't enable automatic no-cache behavior during build-time\n          // prerendering so that we can still leverage the fetch cache between\n          // export workers.\n          if (workStore.isBuildTimePrerendering) {\n            isImplicitBuildTimeCache = true\n          } else {\n            autoNoCache = true\n          }\n        }\n\n        // If we have no cache config, and we're in Dynamic I/O prerendering,\n        // it'll be a dynamic call. We don't have to issue that dynamic call.\n        if (hasNoExplicitCacheConfig && workUnitStore !== undefined) {\n          switch (workUnitStore.type) {\n            case 'prerender':\n            case 'prerender-runtime':\n            // While we don't want to do caching in the client scope we know the\n            // fetch will be dynamic for cacheComponents so we may as well avoid the\n            // call here. (fallthrough)\n            case 'prerender-client':\n              if (cacheSignal) {\n                cacheSignal.endRead()\n                cacheSignal = null\n              }\n\n              return makeHangingPromise<Response>(\n                workUnitStore.renderSignal,\n                workStore.route,\n                'fetch()'\n              )\n            case 'request':\n              if (\n                process.env.NODE_ENV === 'development' &&\n                workUnitStore.stagedRendering\n              ) {\n                if (cacheSignal) {\n                  cacheSignal.endRead()\n                  cacheSignal = null\n                }\n                await workUnitStore.stagedRendering.waitForStage(\n                  RenderStage.Dynamic\n                )\n              }\n              break\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n              break\n            default:\n              workUnitStore satisfies never\n          }\n        }\n\n        switch (pageFetchCacheMode) {\n          case 'force-no-store': {\n            cacheReason = 'fetchCache = force-no-store'\n            break\n          }\n          case 'only-no-store': {\n            if (\n              currentFetchCacheConfig === 'force-cache' ||\n              (typeof finalRevalidate !== 'undefined' && finalRevalidate > 0)\n            ) {\n              throw new Error(\n                `cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`\n              )\n            }\n            cacheReason = 'fetchCache = only-no-store'\n            break\n          }\n          case 'only-cache': {\n            if (currentFetchCacheConfig === 'no-store') {\n              throw new Error(\n                `cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`\n              )\n            }\n            break\n          }\n          case 'force-cache': {\n            if (\n              typeof currentFetchRevalidate === 'undefined' ||\n              currentFetchRevalidate === 0\n            ) {\n              cacheReason = 'fetchCache = force-cache'\n              finalRevalidate = INFINITE_CACHE\n            }\n            break\n          }\n          case 'default-cache':\n          case 'default-no-store':\n          case 'auto':\n          case undefined:\n            // sometimes we won't match the above cases. the reason we don't move\n            // everything to this switch is the use of autoNoCache which is not a fetchCacheMode\n            // I suspect this could be unified with fetchCacheMode however in which case we could\n            // simplify the switch case and ensure we have an exhaustive switch handling all modes\n            break\n          default:\n            pageFetchCacheMode satisfies never\n        }\n\n        if (typeof finalRevalidate === 'undefined') {\n          if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n            finalRevalidate = INFINITE_CACHE\n            cacheReason = 'fetchCache = default-cache'\n          } else if (pageFetchCacheMode === 'default-no-store') {\n            finalRevalidate = 0\n            cacheReason = 'fetchCache = default-no-store'\n          } else if (isUsingNoStore) {\n            finalRevalidate = 0\n            cacheReason = 'noStore call'\n          } else if (autoNoCache) {\n            finalRevalidate = 0\n            cacheReason = 'auto no cache'\n          } else {\n            // TODO: should we consider this case an invariant?\n            cacheReason = 'auto cache'\n            finalRevalidate = revalidateStore\n              ? revalidateStore.revalidate\n              : INFINITE_CACHE\n          }\n        } else if (!cacheReason) {\n          cacheReason = `revalidate: ${finalRevalidate}`\n        }\n\n        if (\n          // when force static is configured we don't bail from\n          // `revalidate: 0` values\n          !(workStore.forceStatic && finalRevalidate === 0) &&\n          // we don't consider autoNoCache to switch to dynamic for ISR\n          !autoNoCache &&\n          // If the revalidate value isn't currently set or the value is less\n          // than the current revalidate value, we should update the revalidate\n          // value.\n          revalidateStore &&\n          finalRevalidate < revalidateStore.revalidate\n        ) {\n          // If we were setting the revalidate value to 0, we should try to\n          // postpone instead first.\n          if (finalRevalidate === 0) {\n            if (workUnitStore) {\n              switch (workUnitStore.type) {\n                case 'prerender':\n                case 'prerender-client':\n                case 'prerender-runtime':\n                  if (cacheSignal) {\n                    cacheSignal.endRead()\n                    cacheSignal = null\n                  }\n                  return makeHangingPromise<Response>(\n                    workUnitStore.renderSignal,\n                    workStore.route,\n                    'fetch()'\n                  )\n                case 'request':\n                  if (\n                    process.env.NODE_ENV === 'development' &&\n                    workUnitStore.stagedRendering\n                  ) {\n                    if (cacheSignal) {\n                      cacheSignal.endRead()\n                      cacheSignal = null\n                    }\n                    await workUnitStore.stagedRendering.waitForStage(\n                      RenderStage.Dynamic\n                    )\n                  }\n                  break\n                case 'prerender-ppr':\n                case 'prerender-legacy':\n                case 'cache':\n                case 'private-cache':\n                case 'unstable-cache':\n                  break\n                default:\n                  workUnitStore satisfies never\n              }\n            }\n\n            markCurrentScopeAsDynamic(\n              workStore,\n              workUnitStore,\n              `revalidate: 0 fetch ${input} ${workStore.route}`\n            )\n          }\n\n          // We only want to set the revalidate store's revalidate time if it\n          // was explicitly set for the fetch call, i.e.\n          // originalFetchRevalidate.\n          if (revalidateStore && originalFetchRevalidate === finalRevalidate) {\n            revalidateStore.revalidate = finalRevalidate\n          }\n        }\n\n        const isCacheableRevalidate =\n          typeof finalRevalidate === 'number' && finalRevalidate > 0\n\n        let cacheKey: string | undefined\n        const { incrementalCache } = workStore\n        let isHmrRefresh = false\n        let serverComponentsHmrCache: ServerComponentsHmrCache | undefined\n\n        if (workUnitStore) {\n          switch (workUnitStore.type) {\n            case 'request':\n            case 'cache':\n            case 'private-cache':\n              isHmrRefresh = workUnitStore.isHmrRefresh ?? false\n              serverComponentsHmrCache = workUnitStore.serverComponentsHmrCache\n              break\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'unstable-cache':\n              break\n            default:\n              workUnitStore satisfies never\n          }\n        }\n\n        if (\n          incrementalCache &&\n          (isCacheableRevalidate || serverComponentsHmrCache)\n        ) {\n          try {\n            cacheKey = await incrementalCache.generateCacheKey(\n              fetchUrl,\n              isRequestInput ? (input as RequestInit) : init\n            )\n          } catch (err) {\n            console.error(`Failed to generate cache key for`, input)\n          }\n        }\n\n        const fetchIdx = workStore.nextFetchId ?? 1\n        workStore.nextFetchId = fetchIdx + 1\n\n        let handleUnlock: () => Promise<void> | void = () => {}\n\n        const doOriginalFetch = async (\n          isStale?: boolean,\n          cacheReasonOverride?: string\n        ) => {\n          const requestInputFields = [\n            'cache',\n            'credentials',\n            'headers',\n            'integrity',\n            'keepalive',\n            'method',\n            'mode',\n            'redirect',\n            'referrer',\n            'referrerPolicy',\n            'window',\n            'duplex',\n\n            // don't pass through signal when revalidating\n            ...(isStale ? [] : ['signal']),\n          ]\n\n          if (isRequestInput) {\n            const reqInput: Request = input as any\n            const reqOptions: RequestInit = {\n              body: (reqInput as any)._ogBody || reqInput.body,\n            }\n\n            for (const field of requestInputFields) {\n              // @ts-expect-error custom fields\n              reqOptions[field] = reqInput[field]\n            }\n            input = new Request(reqInput.url, reqOptions)\n          } else if (init) {\n            const { _ogBody, body, signal, ...otherInput } =\n              init as RequestInit & { _ogBody?: any }\n            init = {\n              ...otherInput,\n              body: _ogBody || body,\n              signal: isStale ? undefined : signal,\n            }\n          }\n\n          // add metadata to init without editing the original\n          const clonedInit = {\n            ...init,\n            next: { ...init?.next, fetchType: 'origin', fetchIdx },\n          }\n\n          return originFetch(input, clonedInit)\n            .then(async (res) => {\n              if (!isStale && fetchStart) {\n                trackFetchMetric(workStore, {\n                  start: fetchStart,\n                  url: fetchUrl,\n                  cacheReason: cacheReasonOverride || cacheReason,\n                  cacheStatus:\n                    finalRevalidate === 0 || cacheReasonOverride\n                      ? 'skip'\n                      : 'miss',\n                  cacheWarning,\n                  status: res.status,\n                  method: clonedInit.method || 'GET',\n                })\n              }\n              if (\n                res.status === 200 &&\n                incrementalCache &&\n                cacheKey &&\n                (isCacheableRevalidate || serverComponentsHmrCache)\n              ) {\n                const normalizedRevalidate =\n                  finalRevalidate >= INFINITE_CACHE\n                    ? CACHE_ONE_YEAR\n                    : finalRevalidate\n\n                const incrementalCacheConfig:\n                  | SetIncrementalFetchCacheContext\n                  | undefined = isCacheableRevalidate\n                  ? {\n                      fetchCache: true,\n                      fetchUrl,\n                      fetchIdx,\n                      tags,\n                      isImplicitBuildTimeCache,\n                    }\n                  : undefined\n\n                switch (workUnitStore?.type) {\n                  case 'prerender':\n                  case 'prerender-client':\n                  case 'prerender-runtime':\n                    return createCachedPrerenderResponse(\n                      res,\n                      cacheKey,\n                      incrementalCacheConfig,\n                      incrementalCache,\n                      normalizedRevalidate,\n                      handleUnlock\n                    )\n                  case 'request':\n                    if (\n                      process.env.NODE_ENV === 'development' &&\n                      workUnitStore.stagedRendering &&\n                      workUnitStore.cacheSignal\n                    ) {\n                      // We're filling caches for a staged render,\n                      // so we need to wait for the response to finish instead of streaming.\n                      return createCachedPrerenderResponse(\n                        res,\n                        cacheKey,\n                        incrementalCacheConfig,\n                        incrementalCache,\n                        normalizedRevalidate,\n                        handleUnlock\n                      )\n                    }\n                  // fallthrough\n                  case 'prerender-ppr':\n                  case 'prerender-legacy':\n                  case 'cache':\n                  case 'private-cache':\n                  case 'unstable-cache':\n                  case undefined:\n                    return createCachedDynamicResponse(\n                      workStore,\n                      res,\n                      cacheKey,\n                      incrementalCacheConfig,\n                      incrementalCache,\n                      serverComponentsHmrCache,\n                      normalizedRevalidate,\n                      input,\n                      handleUnlock\n                    )\n                  default:\n                    workUnitStore satisfies never\n                }\n              }\n\n              // we had response that we determined shouldn't be cached so we return it\n              // and don't cache it. This also needs to unlock the cache lock we acquired.\n              await handleUnlock()\n\n              return res\n            })\n            .catch((error) => {\n              handleUnlock()\n              throw error\n            })\n        }\n\n        let cacheReasonOverride\n        let isForegroundRevalidate = false\n        let isHmrRefreshCache = false\n\n        if (cacheKey && incrementalCache) {\n          let cachedFetchData: CachedFetchData | undefined\n\n          if (isHmrRefresh && serverComponentsHmrCache) {\n            cachedFetchData = serverComponentsHmrCache.get(cacheKey)\n            isHmrRefreshCache = true\n          }\n\n          if (isCacheableRevalidate && !cachedFetchData) {\n            handleUnlock = await incrementalCache.lock(cacheKey)\n            const entry = workStore.isOnDemandRevalidate\n              ? null\n              : await incrementalCache.get(cacheKey, {\n                  kind: IncrementalCacheKind.FETCH,\n                  revalidate: finalRevalidate,\n                  fetchUrl,\n                  fetchIdx,\n                  tags,\n                  softTags: implicitTags?.tags,\n                })\n\n            if (hasNoExplicitCacheConfig && workUnitStore) {\n              switch (workUnitStore.type) {\n                case 'prerender':\n                case 'prerender-client':\n                case 'prerender-runtime':\n                  // We sometimes use the cache to dedupe fetches that do not\n                  // specify a cache configuration. In these cases we want to\n                  // make sure we still exclude them from prerenders if\n                  // cacheComponents is on so we introduce an artificial task boundary\n                  // here.\n                  await getTimeoutBoundary()\n                  break\n                case 'request':\n                  if (\n                    process.env.NODE_ENV === 'development' &&\n                    workUnitStore.stagedRendering\n                  ) {\n                    await workUnitStore.stagedRendering.waitForStage(\n                      RenderStage.Dynamic\n                    )\n                  }\n                  break\n                case 'prerender-ppr':\n                case 'prerender-legacy':\n                case 'cache':\n                case 'private-cache':\n                case 'unstable-cache':\n                  break\n                default:\n                  workUnitStore satisfies never\n              }\n            }\n\n            if (entry) {\n              await handleUnlock()\n            } else {\n              // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n              // TODO: it seems like we also hit this after revalidates in dev?\n              cacheReasonOverride = 'cache-control: no-cache (hard refresh)'\n            }\n\n            if (entry?.value && entry.value.kind === CachedRouteKind.FETCH) {\n              // when stale and is revalidating we wait for fresh data\n              // so the revalidated entry has the updated data\n              if (workStore.isStaticGeneration && entry.isStale) {\n                isForegroundRevalidate = true\n              } else {\n                if (entry.isStale) {\n                  workStore.pendingRevalidates ??= {}\n                  if (!workStore.pendingRevalidates[cacheKey]) {\n                    const pendingRevalidate = doOriginalFetch(true)\n                      .then(async (response) => ({\n                        body: await response.arrayBuffer(),\n                        headers: response.headers,\n                        status: response.status,\n                        statusText: response.statusText,\n                      }))\n                      .finally(() => {\n                        workStore.pendingRevalidates ??= {}\n                        delete workStore.pendingRevalidates[cacheKey || '']\n                      })\n\n                    // Attach the empty catch here so we don't get a \"unhandled\n                    // promise rejection\" warning.\n                    pendingRevalidate.catch(console.error)\n\n                    workStore.pendingRevalidates[cacheKey] = pendingRevalidate\n                  }\n                }\n\n                cachedFetchData = entry.value.data\n              }\n            }\n          }\n\n          if (cachedFetchData) {\n            if (fetchStart) {\n              trackFetchMetric(workStore, {\n                start: fetchStart,\n                url: fetchUrl,\n                cacheReason,\n                cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                cacheWarning,\n                status: cachedFetchData.status || 200,\n                method: init?.method || 'GET',\n              })\n            }\n\n            const response = new Response(\n              Buffer.from(cachedFetchData.body, 'base64'),\n              {\n                headers: cachedFetchData.headers,\n                status: cachedFetchData.status,\n              }\n            )\n\n            Object.defineProperty(response, 'url', {\n              value: cachedFetchData.url,\n            })\n\n            return response\n          }\n        }\n\n        if (\n          (workStore.isStaticGeneration ||\n            (process.env.NODE_ENV === 'development' &&\n              process.env.__NEXT_CACHE_COMPONENTS &&\n              workUnitStore &&\n              // eslint-disable-next-line no-restricted-syntax\n              workUnitStore.type === 'request' &&\n              workUnitStore.stagedRendering)) &&\n          init &&\n          typeof init === 'object'\n        ) {\n          const { cache } = init\n\n          // Delete `cache` property as Cloudflare Workers will throw an error\n          if (isEdgeRuntime) delete init.cache\n\n          if (cache === 'no-store') {\n            // If enabled, we should bail out of static generation.\n            if (workUnitStore) {\n              switch (workUnitStore.type) {\n                case 'prerender':\n                case 'prerender-client':\n                case 'prerender-runtime':\n                  if (cacheSignal) {\n                    cacheSignal.endRead()\n                    cacheSignal = null\n                  }\n                  return makeHangingPromise<Response>(\n                    workUnitStore.renderSignal,\n                    workStore.route,\n                    'fetch()'\n                  )\n                case 'request':\n                  if (\n                    process.env.NODE_ENV === 'development' &&\n                    workUnitStore.stagedRendering\n                  ) {\n                    if (cacheSignal) {\n                      cacheSignal.endRead()\n                      cacheSignal = null\n                    }\n                    await workUnitStore.stagedRendering.waitForStage(\n                      RenderStage.Dynamic\n                    )\n                  }\n                  break\n                case 'prerender-ppr':\n                case 'prerender-legacy':\n                case 'cache':\n                case 'private-cache':\n                case 'unstable-cache':\n                  break\n                default:\n                  workUnitStore satisfies never\n              }\n            }\n            markCurrentScopeAsDynamic(\n              workStore,\n              workUnitStore,\n              `no-store fetch ${input} ${workStore.route}`\n            )\n          }\n\n          const hasNextConfig = 'next' in init\n          const { next = {} } = init\n          if (\n            typeof next.revalidate === 'number' &&\n            revalidateStore &&\n            next.revalidate < revalidateStore.revalidate\n          ) {\n            if (next.revalidate === 0) {\n              // If enabled, we should bail out of static generation.\n              if (workUnitStore) {\n                switch (workUnitStore.type) {\n                  case 'prerender':\n                  case 'prerender-client':\n                  case 'prerender-runtime':\n                    return makeHangingPromise<Response>(\n                      workUnitStore.renderSignal,\n                      workStore.route,\n                      'fetch()'\n                    )\n                  case 'request':\n                    if (\n                      process.env.NODE_ENV === 'development' &&\n                      workUnitStore.stagedRendering\n                    ) {\n                      await workUnitStore.stagedRendering.waitForStage(\n                        RenderStage.Dynamic\n                      )\n                    }\n                    break\n                  case 'cache':\n                  case 'private-cache':\n                  case 'unstable-cache':\n                  case 'prerender-legacy':\n                  case 'prerender-ppr':\n                    break\n                  default:\n                    workUnitStore satisfies never\n                }\n              }\n              markCurrentScopeAsDynamic(\n                workStore,\n                workUnitStore,\n                `revalidate: 0 fetch ${input} ${workStore.route}`\n              )\n            }\n\n            if (!workStore.forceStatic || next.revalidate !== 0) {\n              revalidateStore.revalidate = next.revalidate\n            }\n          }\n          if (hasNextConfig) delete init.next\n        }\n\n        // if we are revalidating the whole page via time or on-demand and\n        // the fetch cache entry is stale we should still de-dupe the\n        // origin hit if it's a cache-able entry\n        if (cacheKey && isForegroundRevalidate) {\n          const pendingRevalidateKey = cacheKey\n          workStore.pendingRevalidates ??= {}\n          let pendingRevalidate =\n            workStore.pendingRevalidates[pendingRevalidateKey]\n\n          if (pendingRevalidate) {\n            const revalidatedResult: {\n              body: ArrayBuffer\n              headers: Headers\n              status: number\n              statusText: string\n            } = await pendingRevalidate\n            return new Response(revalidatedResult.body, {\n              headers: revalidatedResult.headers,\n              status: revalidatedResult.status,\n              statusText: revalidatedResult.statusText,\n            })\n          }\n\n          // We used to just resolve the Response and clone it however for\n          // static generation with cacheComponents we need the response to be able to\n          // be resolved in a microtask and cloning the response will never have\n          // a body that can resolve in a microtask in node (as observed through\n          // experimentation) So instead we await the body and then when it is\n          // available we construct manually cloned Response objects with the\n          // body as an ArrayBuffer. This will be resolvable in a microtask\n          // making it compatible with cacheComponents.\n          const pendingResponse = doOriginalFetch(true, cacheReasonOverride)\n            // We're cloning the response using this utility because there\n            // exists a bug in the undici library around response cloning.\n            // See the following pull request for more details:\n            // https://github.com/vercel/next.js/pull/73274\n            .then(cloneResponse)\n\n          pendingRevalidate = pendingResponse\n            .then(async (responses) => {\n              const response = responses[0]\n              return {\n                body: await response.arrayBuffer(),\n                headers: response.headers,\n                status: response.status,\n                statusText: response.statusText,\n              }\n            })\n            .finally(() => {\n              // If the pending revalidate is not present in the store, then\n              // we have nothing to delete.\n              if (!workStore.pendingRevalidates?.[pendingRevalidateKey]) {\n                return\n              }\n\n              delete workStore.pendingRevalidates[pendingRevalidateKey]\n            })\n\n          // Attach the empty catch here so we don't get a \"unhandled promise\n          // rejection\" warning\n          pendingRevalidate.catch(() => {})\n\n          workStore.pendingRevalidates[pendingRevalidateKey] = pendingRevalidate\n\n          return pendingResponse.then((responses) => responses[1])\n        } else {\n          return doOriginalFetch(false, cacheReasonOverride)\n        }\n      }\n    )\n\n    if (cacheSignal) {\n      try {\n        return await result\n      } finally {\n        if (cacheSignal) {\n          cacheSignal.endRead()\n        }\n      }\n    }\n    return result\n  }\n\n  // Attach the necessary properties to the patched fetch function.\n  // We don't use this to determine if the fetch function has been patched,\n  // but for external consumers to determine if the fetch function has been\n  // patched.\n  patched.__nextPatched = true as const\n  patched.__nextGetStaticStore = () => workAsyncStorage\n  patched._nextOriginalFetch = originFetch\n  ;(globalThis as Record<symbol, unknown>)[NEXT_PATCH_SYMBOL] = true\n\n  // Assign the function name also as a name property, so that it's preserved\n  // even when mangling is enabled.\n  Object.defineProperty(patched, 'name', { value: 'fetch', writable: false })\n\n  return patched\n}\n\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options: PatchableModule) {\n  // If we've already patched fetch, we should not patch it again.\n  if (isFetchPatched()) return\n\n  // Grab the original fetch function. We'll attach this so we can use it in\n  // the patched fetch function.\n  const original = createDedupeFetch(globalThis.fetch)\n\n  // Set the global fetch to the patched fetch.\n  globalThis.fetch = createPatchedFetcher(original, options)\n}\n\nlet currentTimeoutBoundary: null | Promise<void> = null\nfunction getTimeoutBoundary() {\n  if (!currentTimeoutBoundary) {\n    currentTimeoutBoundary = new Promise((r) => {\n      setTimeout(() => {\n        currentTimeoutBoundary = null\n        r()\n      }, 0)\n    })\n  }\n  return currentTimeoutBoundary\n}\n","import type { IncrementalCache } from '../../lib/incremental-cache'\n\nimport { CACHE_ONE_YEAR } from '../../../lib/constants'\nimport { validateRevalidate, validateTags } from '../../lib/patch-fetch'\nimport {\n  workAsyncStorage,\n  type WorkStore,\n} from '../../app-render/work-async-storage.external'\nimport {\n  getCacheSignal,\n  getDraftModeProviderForCacheScope,\n  workUnitAsyncStorage,\n} from '../../app-render/work-unit-async-storage.external'\nimport {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedFetchData,\n} from '../../response-cache'\nimport type {\n  UnstableCacheStore,\n  WorkUnitStore,\n} from '../../app-render/work-unit-async-storage.external'\n\ntype Callback = (...args: any[]) => Promise<any>\n\nlet noStoreFetchIdx = 0\n\nasync function cacheNewResult<T>(\n  result: T,\n  incrementalCache: IncrementalCache,\n  cacheKey: string,\n  tags: string[],\n  revalidate: number | false | undefined,\n  fetchIdx: number,\n  fetchUrl: string\n): Promise<unknown> {\n  await incrementalCache.set(\n    cacheKey,\n    {\n      kind: CachedRouteKind.FETCH,\n      data: {\n        headers: {},\n        // TODO: handle non-JSON values?\n        body: JSON.stringify(result),\n        status: 200,\n        url: '',\n      } satisfies CachedFetchData,\n      revalidate: typeof revalidate !== 'number' ? CACHE_ONE_YEAR : revalidate,\n    },\n    { fetchCache: true, tags, fetchIdx, fetchUrl }\n  )\n  return\n}\n\n/**\n * This function allows you to cache the results of expensive operations, like database queries, and reuse them across multiple requests.\n *\n * Read more: [Next.js Docs: `unstable_cache`](https://nextjs.org/docs/app/api-reference/functions/unstable_cache)\n */\nexport function unstable_cache<T extends Callback>(\n  cb: T,\n  keyParts?: string[],\n  options: {\n    /**\n     * The revalidation interval in seconds.\n     */\n    revalidate?: number | false\n    tags?: string[]\n  } = {}\n): T {\n  if (options.revalidate === 0) {\n    throw new Error(\n      `Invariant revalidate: 0 can not be passed to unstable_cache(), must be \"false\" or \"> 0\" ${cb.toString()}`\n    )\n  }\n\n  // Validate the tags provided are valid\n  const tags = options.tags\n    ? validateTags(options.tags, `unstable_cache ${cb.toString()}`)\n    : []\n\n  // Validate the revalidate options\n  validateRevalidate(\n    options.revalidate,\n    `unstable_cache ${cb.name || cb.toString()}`\n  )\n\n  // Stash the fixed part of the key at construction time. The invocation key will combine\n  // the fixed key with the arguments when actually called\n  // @TODO if cb.toString() is long we should hash it\n  // @TODO come up with a collision-free way to combine keyParts\n  // @TODO consider validating the keyParts are all strings. TS can't provide runtime guarantees\n  // and the error produced by accidentally using something that cannot be safely coerced is likely\n  // hard to debug\n  const fixedKey = `${cb.toString()}-${\n    Array.isArray(keyParts) && keyParts.join(',')\n  }`\n\n  const cachedCb = async (...args: any[]) => {\n    const workStore = workAsyncStorage.getStore()\n    const workUnitStore = workUnitAsyncStorage.getStore()\n\n    // We must be able to find the incremental cache otherwise we throw\n    const maybeIncrementalCache:\n      | import('../../lib/incremental-cache').IncrementalCache\n      | undefined =\n      workStore?.incrementalCache || (globalThis as any).__incrementalCache\n\n    if (!maybeIncrementalCache) {\n      throw new Error(\n        `Invariant: incrementalCache missing in unstable_cache ${cb.toString()}`\n      )\n    }\n    const incrementalCache = maybeIncrementalCache\n\n    const cacheSignal = workUnitStore ? getCacheSignal(workUnitStore) : null\n    if (cacheSignal) {\n      cacheSignal.beginRead()\n    }\n    try {\n      // If there's no request store, we aren't in a request (or we're not in\n      // app router) and if there's no static generation store, we aren't in app\n      // router. Default to an empty pathname and search params when there's no\n      // request store or static generation store available.\n      const fetchUrlPrefix =\n        workStore && workUnitStore\n          ? getFetchUrlPrefix(workStore, workUnitStore)\n          : ''\n\n      // Construct the complete cache key for this function invocation\n      // @TODO stringify is likely not safe here. We will coerce undefined to null which will make\n      // the keyspace smaller than the execution space\n      const invocationKey = `${fixedKey}-${JSON.stringify(args)}`\n      const cacheKey = await incrementalCache.generateCacheKey(invocationKey)\n      // $urlWithPath,$sortedQueryStringKeys,$hashOfEveryThingElse\n      const fetchUrl = `unstable_cache ${fetchUrlPrefix} ${cb.name ? ` ${cb.name}` : cacheKey}`\n      const fetchIdx =\n        (workStore ? workStore.nextFetchId : noStoreFetchIdx) ?? 1\n\n      const implicitTags = workUnitStore?.implicitTags\n\n      const innerCacheStore: UnstableCacheStore = {\n        type: 'unstable-cache',\n        phase: 'render',\n        implicitTags,\n        draftMode:\n          workUnitStore &&\n          workStore &&\n          getDraftModeProviderForCacheScope(workStore, workUnitStore),\n      }\n\n      if (workStore) {\n        workStore.nextFetchId = fetchIdx + 1\n\n        // We are in an App Router context. We try to return the cached entry if it exists and is valid\n        // If the entry is fresh we return it. If the entry is stale we return it but revalidate the entry in\n        // the background. If the entry is missing or invalid we generate a new entry and return it.\n\n        let isNestedUnstableCache = false\n\n        if (workUnitStore) {\n          switch (workUnitStore.type) {\n            case 'cache':\n            case 'private-cache':\n            case 'prerender':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n              // We update the store's revalidate property if the option.revalidate is a higher precedence\n              // options.revalidate === undefined doesn't affect timing.\n              // options.revalidate === false doesn't shrink timing. it stays at the maximum.\n              if (typeof options.revalidate === 'number') {\n                if (workUnitStore.revalidate < options.revalidate) {\n                  // The store is already revalidating on a shorter time interval, leave it alone\n                } else {\n                  workUnitStore.revalidate = options.revalidate\n                }\n              }\n\n              // We need to accumulate the tags for this invocation within the store\n              const collectedTags = workUnitStore.tags\n              if (collectedTags === null) {\n                workUnitStore.tags = tags.slice()\n              } else {\n                for (const tag of tags) {\n                  // @TODO refactor tags to be a set to avoid this O(n) lookup\n                  if (!collectedTags.includes(tag)) {\n                    collectedTags.push(tag)\n                  }\n                }\n              }\n              break\n            case 'unstable-cache':\n              isNestedUnstableCache = true\n              break\n            case 'prerender-client':\n            case 'request':\n              break\n            default:\n              workUnitStore satisfies never\n          }\n        }\n\n        if (\n          // when we are nested inside of other unstable_cache's\n          // we should bypass cache similar to fetches\n          !isNestedUnstableCache &&\n          workStore.fetchCache !== 'force-no-store' &&\n          !workStore.isOnDemandRevalidate &&\n          !incrementalCache.isOnDemandRevalidate &&\n          !workStore.isDraftMode\n        ) {\n          // We attempt to get the current cache entry from the incremental cache.\n          const cacheEntry = await incrementalCache.get(cacheKey, {\n            kind: IncrementalCacheKind.FETCH,\n            revalidate: options.revalidate,\n            tags,\n            softTags: implicitTags?.tags,\n            fetchIdx,\n            fetchUrl,\n          })\n\n          if (cacheEntry && cacheEntry.value) {\n            // The entry exists and has a value\n            if (cacheEntry.value.kind !== CachedRouteKind.FETCH) {\n              // The entry is invalid and we need a special warning\n              // @TODO why do we warn this way? Should this just be an error? How are these errors surfaced\n              // so bugs can be reported\n              // @TODO the invocation key can have sensitive data in it. we should not log this entire object\n              console.error(\n                `Invariant invalid cacheEntry returned for ${invocationKey}`\n              )\n              // will fall through to generating a new cache entry below\n            } else {\n              // We have a valid cache entry so we will be returning it. We also check to see if we need\n              // to background revalidate it by checking if it is stale.\n              const cachedResponse =\n                cacheEntry.value.data.body !== undefined\n                  ? JSON.parse(cacheEntry.value.data.body)\n                  : undefined\n\n              if (cacheEntry.isStale) {\n                if (!workStore.pendingRevalidates) {\n                  workStore.pendingRevalidates = {}\n                }\n\n                // Check if there's already a pending revalidation to avoid duplicate work\n                if (!workStore.pendingRevalidates[invocationKey]) {\n                  // Create the revalidation promise\n                  const revalidationPromise = workUnitAsyncStorage\n                    .run(innerCacheStore, cb, ...args)\n                    .then(async (result) => {\n                      await cacheNewResult(\n                        result,\n                        incrementalCache,\n                        cacheKey,\n                        tags,\n                        options.revalidate,\n                        fetchIdx,\n                        fetchUrl\n                      )\n                      return result\n                    })\n                    .catch((err) => {\n                      // @TODO This error handling seems wrong. We swallow the error?\n                      console.error(\n                        `revalidating cache with key: ${invocationKey}`,\n                        err\n                      )\n                      // Return the stale value on error for foreground revalidation\n                      return cachedResponse\n                    })\n\n                  // Attach the empty catch here so we don't get a \"unhandled promise\n                  // rejection\" warning. (Behavior is matched with patch-fetch)\n                  if (workStore.isStaticGeneration) {\n                    revalidationPromise.catch(() => {})\n                  }\n\n                  workStore.pendingRevalidates[invocationKey] =\n                    revalidationPromise\n                }\n\n                // Check if we need to do foreground revalidation\n                if (workStore.isStaticGeneration) {\n                  // When the page is revalidating and the cache entry is stale,\n                  // we need to wait for fresh data (blocking revalidate)\n                  return workStore.pendingRevalidates[invocationKey]\n                }\n                // Otherwise, we're doing background revalidation - return stale immediately\n              }\n\n              // We had a valid cache entry so we return it here\n              return cachedResponse\n            }\n          }\n        }\n\n        // If we got this far then we had an invalid cache entry and need to generate a new one\n        const result = await workUnitAsyncStorage.run(\n          innerCacheStore,\n          cb,\n          ...args\n        )\n\n        if (!workStore.isDraftMode) {\n          if (!workStore.pendingRevalidates) {\n            workStore.pendingRevalidates = {}\n          }\n\n          // We need to push the cache result promise to pending\n          // revalidates otherwise it won't be awaited and is just\n          // dangling\n          workStore.pendingRevalidates[invocationKey] = cacheNewResult(\n            result,\n            incrementalCache,\n            cacheKey,\n            tags,\n            options.revalidate,\n            fetchIdx,\n            fetchUrl\n          )\n        }\n\n        return result\n      } else {\n        noStoreFetchIdx += 1\n        // We are in Pages Router or were called outside of a render. We don't have a store\n        // so we just call the callback directly when it needs to run.\n        // If the entry is fresh we return it. If the entry is stale we return it but revalidate the entry in\n        // the background. If the entry is missing or invalid we generate a new entry and return it.\n\n        if (!incrementalCache.isOnDemandRevalidate) {\n          // We aren't doing an on demand revalidation so we check use the cache if valid\n          const cacheEntry = await incrementalCache.get(cacheKey, {\n            kind: IncrementalCacheKind.FETCH,\n            revalidate: options.revalidate,\n            tags,\n            fetchIdx,\n            fetchUrl,\n            softTags: implicitTags?.tags,\n          })\n\n          if (cacheEntry && cacheEntry.value) {\n            // The entry exists and has a value\n            if (cacheEntry.value.kind !== CachedRouteKind.FETCH) {\n              // The entry is invalid and we need a special warning\n              // @TODO why do we warn this way? Should this just be an error? How are these errors surfaced\n              // so bugs can be reported\n              console.error(\n                `Invariant invalid cacheEntry returned for ${invocationKey}`\n              )\n              // will fall through to generating a new cache entry below\n            } else if (!cacheEntry.isStale) {\n              // We have a valid cache entry and it is fresh so we return it\n              return cacheEntry.value.data.body !== undefined\n                ? JSON.parse(cacheEntry.value.data.body)\n                : undefined\n            }\n          }\n        }\n\n        // If we got this far then we had an invalid cache entry and need to generate a new one\n        const result = await workUnitAsyncStorage.run(\n          innerCacheStore,\n          cb,\n          ...args\n        )\n\n        // we need to wait setting the new cache result here as\n        // we don't have pending revalidates on workStore to\n        // push to and we can't have a dangling promise\n        await cacheNewResult(\n          result,\n          incrementalCache,\n          cacheKey,\n          tags,\n          options.revalidate,\n          fetchIdx,\n          fetchUrl\n        )\n        return result\n      }\n    } finally {\n      if (cacheSignal) {\n        cacheSignal.endRead()\n      }\n    }\n  }\n  // TODO: once AsyncLocalStorage.run() returns the correct types this override will no longer be necessary\n  return cachedCb as unknown as T\n}\n\nfunction getFetchUrlPrefix(\n  workStore: WorkStore,\n  workUnitStore: WorkUnitStore\n): string {\n  switch (workUnitStore.type) {\n    case 'request':\n      const pathname = workUnitStore.url.pathname\n      const searchParams = new URLSearchParams(workUnitStore.url.search)\n\n      const sortedSearch = [...searchParams.keys()]\n        .sort((a, b) => a.localeCompare(b))\n        .map((key) => `${key}=${searchParams.get(key)}`)\n        .join('&')\n\n      return `${pathname}${sortedSearch.length ? '?' : ''}${sortedSearch}`\n    case 'prerender':\n    case 'prerender-client':\n    case 'prerender-runtime':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      return workStore.route\n    default:\n      return workUnitStore satisfies never\n  }\n}\n","class UrlNode {\n  placeholder: boolean = true\n  children: Map<string, UrlNode> = new Map()\n  slugName: string | null = null\n  restSlugName: string | null = null\n  optionalRestSlugName: string | null = null\n\n  insert(urlPath: string): void {\n    this._insert(urlPath.split('/').filter(Boolean), [], false)\n  }\n\n  smoosh(): string[] {\n    return this._smoosh()\n  }\n\n  private _smoosh(prefix: string = '/'): string[] {\n    const childrenPaths = [...this.children.keys()].sort()\n    if (this.slugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[]'), 1)\n    }\n    if (this.restSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[...]'), 1)\n    }\n    if (this.optionalRestSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1)\n    }\n\n    const routes = childrenPaths\n      .map((c) => this.children.get(c)!._smoosh(`${prefix}${c}/`))\n      .reduce((prev, curr) => [...prev, ...curr], [])\n\n    if (this.slugName !== null) {\n      routes.push(\n        ...this.children.get('[]')!._smoosh(`${prefix}[${this.slugName}]/`)\n      )\n    }\n\n    if (!this.placeholder) {\n      const r = prefix === '/' ? '/' : prefix.slice(0, -1)\n      if (this.optionalRestSlugName != null) {\n        throw new Error(\n          `You cannot define a route with the same specificity as a optional catch-all route (\"${r}\" and \"${r}[[...${this.optionalRestSlugName}]]\").`\n        )\n      }\n\n      routes.unshift(r)\n    }\n\n    if (this.restSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[...]')!\n          ._smoosh(`${prefix}[...${this.restSlugName}]/`)\n      )\n    }\n\n    if (this.optionalRestSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[[...]]')!\n          ._smoosh(`${prefix}[[...${this.optionalRestSlugName}]]/`)\n      )\n    }\n\n    return routes\n  }\n\n  private _insert(\n    urlPaths: string[],\n    slugNames: string[],\n    isCatchAll: boolean\n  ): void {\n    if (urlPaths.length === 0) {\n      this.placeholder = false\n      return\n    }\n\n    if (isCatchAll) {\n      throw new Error(`Catch-all must be the last part of the URL.`)\n    }\n\n    // The next segment in the urlPaths list\n    let nextSegment = urlPaths[0]\n\n    // Check if the segment matches `[something]`\n    if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {\n      // Strip `[` and `]`, leaving only `something`\n      let segmentName = nextSegment.slice(1, -1)\n\n      let isOptional = false\n      if (segmentName.startsWith('[') && segmentName.endsWith(']')) {\n        // Strip optional `[` and `]`, leaving only `something`\n        segmentName = segmentName.slice(1, -1)\n        isOptional = true\n      }\n\n      if (segmentName.startsWith('…')) {\n        throw new Error(\n          `Detected a three-dot character ('…') at ('${segmentName}'). Did you mean ('...')?`\n        )\n      }\n\n      if (segmentName.startsWith('...')) {\n        // Strip `...`, leaving only `something`\n        segmentName = segmentName.substring(3)\n        isCatchAll = true\n      }\n\n      if (segmentName.startsWith('[') || segmentName.endsWith(']')) {\n        throw new Error(\n          `Segment names may not start or end with extra brackets ('${segmentName}').`\n        )\n      }\n\n      if (segmentName.startsWith('.')) {\n        throw new Error(\n          `Segment names may not start with erroneous periods ('${segmentName}').`\n        )\n      }\n\n      function handleSlug(previousSlug: string | null, nextSlug: string) {\n        if (previousSlug !== null) {\n          // If the specific segment already has a slug but the slug is not `something`\n          // This prevents collisions like:\n          // pages/[post]/index.js\n          // pages/[id]/index.js\n          // Because currently multiple dynamic params on the same segment level are not supported\n          if (previousSlug !== nextSlug) {\n            // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n            throw new Error(\n              `You cannot use different slug names for the same dynamic path ('${previousSlug}' !== '${nextSlug}').`\n            )\n          }\n        }\n\n        slugNames.forEach((slug) => {\n          if (slug === nextSlug) {\n            throw new Error(\n              `You cannot have the same slug name \"${nextSlug}\" repeat within a single dynamic path`\n            )\n          }\n\n          if (slug.replace(/\\W/g, '') === nextSegment.replace(/\\W/g, '')) {\n            throw new Error(\n              `You cannot have the slug names \"${slug}\" and \"${nextSlug}\" differ only by non-word symbols within a single dynamic path`\n            )\n          }\n        })\n\n        slugNames.push(nextSlug)\n      }\n\n      if (isCatchAll) {\n        if (isOptional) {\n          if (this.restSlugName != null) {\n            throw new Error(\n              `You cannot use both an required and optional catch-all route at the same level (\"[...${this.restSlugName}]\" and \"${urlPaths[0]}\" ).`\n            )\n          }\n\n          handleSlug(this.optionalRestSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.optionalRestSlugName = segmentName\n          // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n          nextSegment = '[[...]]'\n        } else {\n          if (this.optionalRestSlugName != null) {\n            throw new Error(\n              `You cannot use both an optional and required catch-all route at the same level (\"[[...${this.optionalRestSlugName}]]\" and \"${urlPaths[0]}\").`\n            )\n          }\n\n          handleSlug(this.restSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.restSlugName = segmentName\n          // nextSegment is overwritten to [...] so that it can later be sorted specifically\n          nextSegment = '[...]'\n        }\n      } else {\n        if (isOptional) {\n          throw new Error(\n            `Optional route parameters are not yet supported (\"${urlPaths[0]}\").`\n          )\n        }\n        handleSlug(this.slugName, segmentName)\n        // slugName is kept as it can only be one particular slugName\n        this.slugName = segmentName\n        // nextSegment is overwritten to [] so that it can later be sorted specifically\n        nextSegment = '[]'\n      }\n    }\n\n    // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n    if (!this.children.has(nextSegment)) {\n      this.children.set(nextSegment, new UrlNode())\n    }\n\n    this.children\n      .get(nextSegment)!\n      ._insert(urlPaths.slice(1), slugNames, isCatchAll)\n  }\n}\n\n/**\n * @deprecated Use `sortSortableRoutes` or `sortPages` instead.\n */\nexport function getSortedRoutes(\n  normalizedPages: ReadonlyArray<string>\n): string[] {\n  // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n  // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n  // Only 1 dynamic segment per nesting level\n\n  // So in the case that is test/integration/dynamic-routing it'll be this:\n  // pages/[post]/comments.js\n  // pages/blog/[post]/comment/[id].js\n  // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n  // So in this case `UrlNode` created here has `this.slugName === 'post'`\n  // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n  // Instead what has to be passed through is the upwards path's dynamic names\n  const root = new UrlNode()\n\n  // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n  normalizedPages.forEach((pagePath) => root.insert(pagePath))\n  // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n  return root.smoosh()\n}\n\n/**\n * @deprecated Use `sortSortableRouteObjects` or `sortPageObjects` instead.\n */\nexport function getSortedRouteObjects<T>(\n  objects: T[],\n  getter: (obj: T) => string\n): T[] {\n  // We're assuming here that all the pathnames are unique, that way we can\n  // sort the list and use the index as the key.\n  const indexes: Record<string, number> = {}\n  const pathnames: string[] = []\n  for (let i = 0; i < objects.length; i++) {\n    const pathname = getter(objects[i])\n    indexes[pathname] = i\n    pathnames[i] = pathname\n  }\n\n  // Sort the pathnames.\n  const sorted = getSortedRoutes(pathnames)\n\n  // Map the sorted pathnames back to the original objects using the new sorted\n  // index.\n  return sorted.map((pathname) => objects[indexes[pathname]])\n}\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\n\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/\n\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/\n\n/**\n * Check if a route is dynamic.\n *\n * @param route - The route to check.\n * @param strict - Whether to use strict mode which prohibits segments with prefixes/suffixes (default: true).\n * @returns Whether the route is dynamic.\n */\nexport function isDynamicRoute(route: string, strict: boolean = true): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route)\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","export { getSortedRoutes, getSortedRouteObjects } from './sorted-routes'\nexport { isDynamicRoute } from './is-dynamic'\n","import {\n  abortAndThrowOnSynchronousRequestDataAccess,\n  postponeWithTracking,\n} from '../../app-render/dynamic-rendering'\nimport { isDynamicRoute } from '../../../shared/lib/router/utils'\nimport {\n  NEXT_CACHE_IMPLICIT_TAG_ID,\n  NEXT_CACHE_SOFT_TAG_MAX_LENGTH,\n} from '../../../lib/constants'\nimport { workAsyncStorage } from '../../app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../../app-render/work-unit-async-storage.external'\nimport { DynamicServerError } from '../../../client/components/hooks-server-context'\nimport { InvariantError } from '../../../shared/lib/invariant-error'\n\ntype CacheLifeConfig = {\n  expire?: number\n}\n\n/**\n * This function allows you to purge [cached data](https://nextjs.org/docs/app/building-your-application/caching) on-demand for a specific cache tag.\n *\n * Read more: [Next.js Docs: `revalidateTag`](https://nextjs.org/docs/app/api-reference/functions/revalidateTag)\n */\nexport function revalidateTag(tag: string, profile: string | CacheLifeConfig) {\n  if (!profile) {\n    console.warn(\n      '\"revalidateTag\" without the second argument is now deprecated, add second argument of \"max\" or use \"updateTag\". See more info here: https://nextjs.org/docs/messages/revalidate-tag-single-arg'\n    )\n  }\n  return revalidate([tag], `revalidateTag ${tag}`, profile)\n}\n\n/**\n * This function allows you to update [cached data](https://nextjs.org/docs/app/building-your-application/caching) on-demand for a specific cache tag.\n * This can only be called from within a Server Action to enable read-your-own-writes semantics.\n *\n * Read more: [Next.js Docs: `updateTag`](https://nextjs.org/docs/app/api-reference/functions/updateTag)\n */\nexport function updateTag(tag: string) {\n  const workStore = workAsyncStorage.getStore()\n\n  // TODO: change this after investigating why phase: 'action' is\n  // set for route handlers\n  if (!workStore || workStore.page.endsWith('/route')) {\n    throw new Error(\n      'updateTag can only be called from within a Server Action. ' +\n        'To invalidate cache tags in Route Handlers or other contexts, use revalidateTag instead. ' +\n        'See more info here: https://nextjs.org/docs/app/api-reference/functions/updateTag'\n    )\n  }\n  // updateTag uses immediate expiration (no profile) without deprecation warning\n  return revalidate([tag], `updateTag ${tag}`, undefined)\n}\n\n/**\n * This function allows you to refresh client cache from server actions.\n * It's useful as dynamic data can be cached on the client which won't\n * be refreshed by expireTag\n */\nexport function refresh() {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (\n    !workStore ||\n    workStore.page.endsWith('/route') ||\n    workUnitStore?.phase !== 'action'\n  ) {\n    throw new Error(\n      'refresh can only be called from within a Server Action. ' +\n        'See more info here: https://nextjs.org/docs/app/api-reference/functions/refresh'\n    )\n  }\n\n  if (workStore) {\n    // TODO: break this to it's own field\n    workStore.pathWasRevalidated = true\n  }\n}\n\n/**\n * This function allows you to purge [cached data](https://nextjs.org/docs/app/building-your-application/caching) on-demand for a specific path.\n *\n * Read more: [Next.js Docs: `revalidatePath`](https://nextjs.org/docs/app/api-reference/functions/revalidatePath)\n */\nexport function revalidatePath(originalPath: string, type?: 'layout' | 'page') {\n  if (originalPath.length > NEXT_CACHE_SOFT_TAG_MAX_LENGTH) {\n    console.warn(\n      `Warning: revalidatePath received \"${originalPath}\" which exceeded max length of ${NEXT_CACHE_SOFT_TAG_MAX_LENGTH}. See more info here https://nextjs.org/docs/app/api-reference/functions/revalidatePath`\n    )\n    return\n  }\n\n  let normalizedPath = `${NEXT_CACHE_IMPLICIT_TAG_ID}${originalPath || '/'}`\n\n  if (type) {\n    normalizedPath += `${normalizedPath.endsWith('/') ? '' : '/'}${type}`\n  } else if (isDynamicRoute(originalPath)) {\n    console.warn(\n      `Warning: a dynamic page path \"${originalPath}\" was passed to \"revalidatePath\", but the \"type\" parameter is missing. This has no effect by default, see more info here https://nextjs.org/docs/app/api-reference/functions/revalidatePath`\n    )\n  }\n\n  const tags = [normalizedPath]\n  if (normalizedPath === `${NEXT_CACHE_IMPLICIT_TAG_ID}/`) {\n    tags.push(`${NEXT_CACHE_IMPLICIT_TAG_ID}/index`)\n  } else if (normalizedPath === `${NEXT_CACHE_IMPLICIT_TAG_ID}/index`) {\n    tags.push(`${NEXT_CACHE_IMPLICIT_TAG_ID}/`)\n  }\n\n  return revalidate(tags, `revalidatePath ${originalPath}`)\n}\n\nfunction revalidate(\n  tags: string[],\n  expression: string,\n  profile?: string | CacheLifeConfig\n) {\n  const store = workAsyncStorage.getStore()\n  if (!store || !store.incrementalCache) {\n    throw new Error(\n      `Invariant: static generation store missing in ${expression}`\n    )\n  }\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    if (workUnitStore.phase === 'render') {\n      throw new Error(\n        `Route ${store.route} used \"${expression}\" during render which is unsupported. To ensure revalidation is performed consistently it must always happen outside of renders and cached functions. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n      )\n    }\n\n    switch (workUnitStore.type) {\n      case 'cache':\n      case 'private-cache':\n        throw new Error(\n          `Route ${store.route} used \"${expression}\" inside a \"use cache\" which is unsupported. To ensure revalidation is performed consistently it must always happen outside of renders and cached functions. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n        )\n      case 'unstable-cache':\n        throw new Error(\n          `Route ${store.route} used \"${expression}\" inside a function cached with \"unstable_cache(...)\" which is unsupported. To ensure revalidation is performed consistently it must always happen outside of renders and cached functions. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n        )\n      case 'prerender':\n      case 'prerender-runtime':\n        // cacheComponents Prerender\n        const error = new Error(\n          `Route ${store.route} used ${expression} without first calling \\`await connection()\\`.`\n        )\n        return abortAndThrowOnSynchronousRequestDataAccess(\n          store.route,\n          expression,\n          error,\n          workUnitStore\n        )\n      case 'prerender-client':\n        throw new InvariantError(\n          `${expression} must not be used within a client component. Next.js should be preventing ${expression} from being included in client components statically, but did not in this case.`\n        )\n      case 'prerender-ppr':\n        return postponeWithTracking(\n          store.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      case 'prerender-legacy':\n        workUnitStore.revalidate = 0\n\n        const err = new DynamicServerError(\n          `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n        )\n        store.dynamicUsageDescription = expression\n        store.dynamicUsageStack = err.stack\n\n        throw err\n      case 'request':\n        if (process.env.NODE_ENV !== 'production') {\n          // TODO: This is most likely incorrect. It would lead to the ISR\n          // status being flipped when revalidating a static page with a server\n          // action.\n          workUnitStore.usedDynamic = true\n        }\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  if (!store.pendingRevalidatedTags) {\n    store.pendingRevalidatedTags = []\n  }\n\n  for (const tag of tags) {\n    const existingIndex = store.pendingRevalidatedTags.findIndex((item) => {\n      if (item.tag !== tag) return false\n      // Compare profiles: both strings, both objects, or both undefined\n      if (typeof item.profile === 'string' && typeof profile === 'string') {\n        return item.profile === profile\n      }\n      if (typeof item.profile === 'object' && typeof profile === 'object') {\n        return JSON.stringify(item.profile) === JSON.stringify(profile)\n      }\n      return item.profile === profile\n    })\n    if (existingIndex === -1) {\n      store.pendingRevalidatedTags.push({\n        tag,\n        profile,\n      })\n    }\n  }\n\n  // if profile is provided and this is a stale-while-revalidate\n  // update we do not mark the path as revalidated so that server\n  // actions don't pull their own writes\n  const cacheLife =\n    profile && typeof profile === 'object'\n      ? profile\n      : profile &&\n          typeof profile === 'string' &&\n          store?.cacheLifeProfiles?.[profile]\n        ? store.cacheLifeProfiles[profile]\n        : undefined\n\n  if (!profile || cacheLife?.expire === 0) {\n    // TODO: only revalidate if the path matches\n    store.pathWasRevalidated = true\n  }\n}\n","import { workAsyncStorage } from '../../app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../../app-render/work-unit-async-storage.external'\nimport { markCurrentScopeAsDynamic } from '../../app-render/dynamic-rendering'\n\n/**\n * This function can be used to declaratively opt out of static rendering and indicate a particular component should not be cached.\n *\n * It marks the current scope as dynamic.\n *\n * - In [non-PPR](https://nextjs.org/docs/app/api-reference/next-config-js/partial-prerendering) cases this will make a static render\n * halt and mark the page as dynamic.\n * - In PPR cases this will postpone the render at this location.\n *\n * If we are inside a cache scope then this function does nothing.\n *\n * @note It expects to be called within App Router and will error otherwise.\n *\n * Read more: [Next.js Docs: `unstable_noStore`](https://nextjs.org/docs/app/api-reference/functions/unstable_noStore)\n */\nexport function unstable_noStore() {\n  const callingExpression = 'unstable_noStore()'\n  const store = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (!store) {\n    // This generally implies we are being called in Pages router. We should probably not support\n    // unstable_noStore in contexts outside of `react-server` condition but since we historically\n    // have not errored here previously, we maintain that behavior for now.\n    return\n  } else if (store.forceStatic) {\n    return\n  } else {\n    store.isUnstableNoStore = true\n    if (workUnitStore) {\n      switch (workUnitStore.type) {\n        case 'prerender':\n        case 'prerender-client':\n        case 'prerender-runtime':\n          // unstable_noStore() is a noop in Dynamic I/O.\n          return\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n        case 'request':\n        case 'cache':\n        case 'private-cache':\n        case 'unstable-cache':\n          break\n        default:\n          workUnitStore satisfies never\n      }\n    }\n    markCurrentScopeAsDynamic(store, workUnitStore, callingExpression)\n  }\n}\n","import { InvariantError } from '../../shared/lib/invariant-error'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external'\n\nexport type CacheLife = {\n  // How long the client can cache a value without checking with the server.\n  stale?: number\n  // How frequently you want the cache to refresh on the server.\n  // Stale values may be served while revalidating.\n  revalidate?: number\n  // In the worst case scenario, where you haven't had traffic in a while,\n  // how stale can a value be until you prefer deopting to dynamic.\n  // Must be longer than revalidate.\n  expire?: number\n}\n// The equivalent header is kind of like:\n// Cache-Control: max-age=[stale],s-max-age=[revalidate],stale-while-revalidate=[expire-revalidate],stale-if-error=[expire-revalidate]\n// Except that stale-while-revalidate/stale-if-error only applies to shared caches - not private caches.\n\n// The default revalidates relatively frequently but doesn't expire to ensure it's always\n// able to serve fast results but by default doesn't hang.\n\n// This gets overridden by the next-types-plugin\ntype CacheLifeProfiles =\n  | 'default'\n  | 'seconds'\n  | 'minutes'\n  | 'hours'\n  | 'days'\n  | 'weeks'\n  | 'max'\n  | (string & {})\n\nfunction validateCacheLife(profile: CacheLife) {\n  if (profile.stale !== undefined) {\n    if ((profile.stale as any) === false) {\n      throw new Error(\n        'Pass `Infinity` instead of `false` if you want to cache on the client forever ' +\n          'without checking with the server.'\n      )\n    } else if (typeof profile.stale !== 'number') {\n      throw new Error('The stale option must be a number of seconds.')\n    }\n  }\n  if (profile.revalidate !== undefined) {\n    if ((profile.revalidate as any) === false) {\n      throw new Error(\n        'Pass `Infinity` instead of `false` if you do not want to revalidate by time.'\n      )\n    } else if (typeof profile.revalidate !== 'number') {\n      throw new Error('The revalidate option must be a number of seconds.')\n    }\n  }\n  if (profile.expire !== undefined) {\n    if ((profile.expire as any) === false) {\n      throw new Error(\n        'Pass `Infinity` instead of `false` if you want to cache on the server forever ' +\n          'without checking with the origin.'\n      )\n    } else if (typeof profile.expire !== 'number') {\n      throw new Error('The expire option must be a number of seconds.')\n    }\n  }\n\n  if (profile.revalidate !== undefined && profile.expire !== undefined) {\n    if (profile.revalidate > profile.expire) {\n      throw new Error(\n        'If providing both the revalidate and expire options, ' +\n          'the expire option must be greater than the revalidate option. ' +\n          'The expire option indicates how many seconds from the start ' +\n          'until it can no longer be used.'\n      )\n    }\n  }\n}\n\nexport function cacheLife(profile: CacheLifeProfiles | CacheLife): void {\n  if (!process.env.__NEXT_USE_CACHE) {\n    throw new Error(\n      '`cacheLife()` is only available with the `cacheComponents` config.'\n    )\n  }\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  switch (workUnitStore?.type) {\n    case 'prerender':\n    case 'prerender-client':\n    case 'prerender-runtime':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'request':\n    case 'unstable-cache':\n    case undefined:\n      throw new Error(\n        '`cacheLife()` can only be called inside a \"use cache\" function.'\n      )\n    case 'cache':\n    case 'private-cache':\n      break\n    default:\n      workUnitStore satisfies never\n  }\n\n  if (typeof profile === 'string') {\n    const workStore = workAsyncStorage.getStore()\n    if (!workStore) {\n      throw new Error(\n        '`cacheLife()` can only be called during App Router rendering at the moment.'\n      )\n    }\n    if (!workStore.cacheLifeProfiles) {\n      throw new InvariantError('`cacheLifeProfiles` should always be provided.')\n    }\n\n    // TODO: This should be globally available and not require an AsyncLocalStorage.\n    const configuredProfile = workStore.cacheLifeProfiles[profile]\n    if (configuredProfile === undefined) {\n      if (workStore.cacheLifeProfiles[profile.trim()]) {\n        throw new Error(\n          `Unknown \\`cacheLife()\\` profile \"${profile}\" is not configured in next.config.js\\n` +\n            `Did you mean \"${profile.trim()}\" without the spaces?`\n        )\n      }\n      throw new Error(\n        `Unknown \\`cacheLife()\\` profile \"${profile}\" is not configured in next.config.js\\n` +\n          'module.exports = {\\n' +\n          '  cacheLife: {\\n' +\n          `    \"${profile}\": ...\\n` +\n          '  }\\n' +\n          '}'\n      )\n    }\n    profile = configuredProfile\n  } else if (\n    typeof profile !== 'object' ||\n    profile === null ||\n    Array.isArray(profile)\n  ) {\n    throw new Error(\n      'Invalid `cacheLife()` option. Either pass a profile name or object.'\n    )\n  } else {\n    validateCacheLife(profile)\n  }\n\n  if (profile.revalidate !== undefined) {\n    // Track the explicit revalidate time.\n    if (\n      workUnitStore.explicitRevalidate === undefined ||\n      workUnitStore.explicitRevalidate > profile.revalidate\n    ) {\n      workUnitStore.explicitRevalidate = profile.revalidate\n    }\n  }\n  if (profile.expire !== undefined) {\n    // Track the explicit expire time.\n    if (\n      workUnitStore.explicitExpire === undefined ||\n      workUnitStore.explicitExpire > profile.expire\n    ) {\n      workUnitStore.explicitExpire = profile.expire\n    }\n  }\n  if (profile.stale !== undefined) {\n    // Track the explicit stale time.\n    if (\n      workUnitStore.explicitStale === undefined ||\n      workUnitStore.explicitStale > profile.stale\n    ) {\n      workUnitStore.explicitStale = profile.stale\n    }\n  }\n}\n","import { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external'\nimport { validateTags } from '../lib/patch-fetch'\n\nexport function cacheTag(...tags: string[]): void {\n  if (!process.env.__NEXT_USE_CACHE) {\n    throw new Error(\n      '`cacheTag()` is only available with the `cacheComponents` config.'\n    )\n  }\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  switch (workUnitStore?.type) {\n    case 'prerender':\n    case 'prerender-client':\n    case 'prerender-runtime':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'request':\n    case 'unstable-cache':\n    case undefined:\n      throw new Error(\n        '`cacheTag()` can only be called inside a \"use cache\" function.'\n      )\n    case 'cache':\n    case 'private-cache':\n      break\n    default:\n      workUnitStore satisfies never\n  }\n\n  const validTags = validateTags(tags, '`cacheTag()`')\n\n  if (!workUnitStore.tags) {\n    workUnitStore.tags = validTags\n  } else {\n    workUnitStore.tags.push(...validTags)\n  }\n}\n","const cacheExports = {\n  unstable_cache: require('next/dist/server/web/spec-extension/unstable-cache')\n    .unstable_cache,\n\n  updateTag: require('next/dist/server/web/spec-extension/revalidate')\n    .updateTag,\n\n  revalidateTag: require('next/dist/server/web/spec-extension/revalidate')\n    .revalidateTag,\n  revalidatePath: require('next/dist/server/web/spec-extension/revalidate')\n    .revalidatePath,\n\n  refresh: require('next/dist/server/web/spec-extension/revalidate').refresh,\n\n  unstable_noStore:\n    require('next/dist/server/web/spec-extension/unstable-no-store')\n      .unstable_noStore,\n  cacheLife: require('next/dist/server/use-cache/cache-life').cacheLife,\n  cacheTag: require('next/dist/server/use-cache/cache-tag').cacheTag,\n}\n\nlet didWarnCacheLife = false\nfunction unstable_cacheLife() {\n  if (!didWarnCacheLife) {\n    didWarnCacheLife = true\n    const error = new Error(\n      '`unstable_cacheLife` was recently stabilized and should be imported as `cacheLife`. The `unstable` prefixed form will be removed in a future version of Next.js.'\n    )\n    console.error(error)\n  }\n  return cacheExports.cacheLife.apply(this, arguments)\n}\n\nlet didWarnCacheTag = false\nfunction unstable_cacheTag() {\n  if (!didWarnCacheTag) {\n    didWarnCacheTag = true\n    const error = new Error(\n      '`unstable_cacheTag` was recently stabilized and should be imported as `cacheTag`. The `unstable` prefixed form will be removed in a future version of Next.js.'\n    )\n    console.error(error)\n  }\n  return cacheExports.cacheTag.apply(this, arguments)\n}\n\ncacheExports.unstable_cacheLife = unstable_cacheLife\ncacheExports.unstable_cacheTag = unstable_cacheTag\n\n// https://nodejs.org/api/esm.html#commonjs-namespaces\n// When importing CommonJS modules, the module.exports object is provided as the default export\nmodule.exports = cacheExports\n\n// make import { xxx } from 'next/cache' work\nexports.unstable_cache = cacheExports.unstable_cache\nexports.revalidatePath = cacheExports.revalidatePath\nexports.revalidateTag = cacheExports.revalidateTag\nexports.updateTag = cacheExports.updateTag\nexports.unstable_noStore = cacheExports.unstable_noStore\nexports.cacheLife = cacheExports.cacheLife\nexports.unstable_cacheLife = cacheExports.unstable_cacheLife\nexports.cacheTag = cacheExports.cacheTag\nexports.unstable_cacheTag = cacheExports.unstable_cacheTag\nexports.refresh = cacheExports.refresh\n","// This function ensures that all the exported values are valid server actions,\n// during the runtime. By definition all actions are required to be async\n// functions, but here we can only check that they are functions.\nexport function ensureServerEntryExports(actions: any[]) {\n  for (let i = 0; i < actions.length; i++) {\n    const action = actions[i]\n    if (typeof action !== 'function') {\n      throw new Error(\n        `A \"use server\" file can only export async functions, found ${typeof action}.\\nRead more: https://nextjs.org/docs/messages/invalid-use-server-value`\n      )\n    }\n  }\n}\n","'use server';\n\nimport * as mongoDB from \"mongodb\";\nimport { sub } from 'date-fns';\nimport { revalidatePath } from \"next/cache\";\n\nconst client = new mongoDB.MongoClient(\"mongodb://blitz:27017\");\nlet db: mongoDB.Db | null = null;\nlet range: string = \"day\";\nlet degree: string = \"fahrenheit\";\n\ninterface Item {\n    time: string;\n    temp: number;\n}\nlet temps: Item[] = [];\n\nasync function connect() {\n    await client.connect();\n    db = client.db(\"wine\");\n    console.log(\"Connected to MongoDB\");\n}\n\nfunction halfSize(rawTemps: mongoDB.WithId<mongoDB.BSON.Document>[]): mongoDB.WithId<mongoDB.BSON.Document>[] {\n    console.log('starting length: ', rawTemps.length);\n    var newTemps: mongoDB.WithId<mongoDB.BSON.Document>[] = [];\n    var prevTime = '';\n    var prevItem: mongoDB.WithId<mongoDB.BSON.Document> | null = null;\n    for (var item of rawTemps) {\n        if (prevTime === '') {\n            prevItem = item;\n            prevTime = item.time;\n        } else {\n            var d1msecs = (prevItem!.time as Date).getTime();\n            var d2msecs = (item.time as Date).getTime();\n            var avgTime = (d1msecs + d2msecs) / 2;\n            var result = new Date(avgTime);\n            var temp = (prevItem!.value + item.value) / 2;\n            newTemps.push({ _id: item._id, time: result, value: temp });\n            prevTime = '';\n        }\n    }\n    console.log('new length: ', newTemps.length);\n    return newTemps;\n}\n\nexport async function getTemps() {\n    if (!db) {\n        await connect();\n    }\n    var delta = 0;\n    switch (range) {\n        case \"all\": delta = 24 * 365; break;\n        case 'hour': delta = 1; break;\n        case '2hours': delta = 2; break;\n        case '6hours': delta = 6; break;\n        case '12hours': delta = 12; break;\n        case 'day': delta = 24; break;\n        case '2day': delta = 48; break;\n        case 'week': delta = 7 * 24; break;\n        case 'month': delta = 30 * 24; break;\n    }\n    var compare = new Date();\n    // console.log('Today is: ' + compare.toISOString());\n    compare = sub(compare, { hours: delta });\n    var search = { \"time\": { $gt: compare } };\n    // console.log(search);\n    var rawTemps = await db!.collection(\"temps\").find(search, { sort: [[\"time\", \"desc\"]] }).toArray();\n    temps = [];\n    while (rawTemps.length > 4000) {\n        rawTemps = halfSize(rawTemps);\n    }\n    rawTemps.forEach(doc => {\n        // console.log('time: ', doc.time.toISOString(), doc.value);\n        doc.time = doc.time.toISOString();\n        temps.push({ time: doc.time, temp: degree == 'celsius' ? doc.value : ((doc.value * 9 / 5) + 32) });\n    });\n    // console.log(temps)\n    console.log(\"Sending \", temps.length, \"records\");\n    return { temps: temps, degree: degree, range: range };\n}\n\nexport async function setRange(newRange: string) {\n    range = newRange;\n    console.log(\"Range set to \", range);\n    revalidatePath(\"/\");\n}\nexport async function setDegree(newDegree: string) {\n    degree = newDegree;\n    console.log(\"Degree set to \", degree);\n    revalidatePath(\"/\");\n}","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { addDays } from \"./addDays.js\";\n\n/**\n * The {@link subDays} function options.\n */\n\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be subtracted.\n * @param options - An object with options\n *\n * @returns The new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport function subDays(date, amount, options) {\n  return addDays(date, -amount, options);\n}\n\n// Fallback for modularized imports:\nexport default subDays;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addMonths} function options.\n */\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n * @param options - The options object\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(options?.in || date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","import { addMonths } from \"./addMonths.js\";\n\n/**\n * The subMonths function options.\n */\n\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be subtracted.\n * @param options - An object with options\n *\n * @returns The new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function subMonths(date, amount, options) {\n  return addMonths(date, -amount, options);\n}\n\n// Fallback for modularized imports:\nexport default subMonths;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { subDays } from \"./subDays.js\";\nimport { subMonths } from \"./subMonths.js\";\n\n/**\n * The {@link sub} function options.\n */\n\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n * @param options - An object with options\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns The new date with the seconds subtracted\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport function sub(date, duration, options) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n  } = duration;\n\n  const withoutMonths = subMonths(date, months + years * 12, options);\n  const withoutDays = subDays(withoutMonths, days + weeks * 7, options);\n\n  const minutesToSub = minutes + hours * 60;\n  const secondsToSub = seconds + minutesToSub * 60;\n  const msToSub = secondsToSub * 1000;\n\n  return constructFrom(options?.in || date, +withoutDays - msToSub);\n}\n\n// Fallback for modularized imports:\nexport default sub;\n"],"names":["registerServerReference","AppRenderSpan","AppRouteRouteHandlersSpan","BaseServerSpan","LoadComponentsSpan","LogSpanAllowList","MiddlewareSpan","NextNodeServerSpan","NextServerSpan","NextVanillaSpanAllowlist","NodeSpan","RenderSpan","ResolveMetadataSpan","RouterSpan","StartServerSpan","isThenable","promise","then","BubbledError","SpanKind","SpanStatusCode","getTracer","isBubbledError","api","process","env","NEXT_RUNTIME","require","err","context","propagation","trace","ROOT_CONTEXT","Error","constructor","bubble","result","error","closeSpanWithError","span","setAttribute","recordException","name","setStatus","code","ERROR","message","end","rootSpanAttributesStore","Map","rootSpanIdKey","createContextKey","lastSpanId","getSpanId","clientTraceDataSetter","set","carrier","key","value","push","NextTracerImpl","getTracerInstance","getContext","getTracePropagationData","activeContext","active","entries","inject","getActiveScopeSpan","getSpan","withPropagatedContext","fn","getter","getSpanContext","remoteContext","extract","with","args","type","fnOrOptions","fnOrEmpty","options","spanName","includes","NEXT_OTEL_VERBOSE","hideSpan","spanContext","parentSpan","isRootSpan","isRemote","spanId","attributes","setValue","startActiveSpan","startTime","globalThis","performance","now","undefined","onCleanup","delete","NEXT_OTEL_PERFORMANCE_PREFIX","measure","split","pop","replace","match","toLowerCase","start","Object","length","res","catch","finally","wrap","tracer","optionsObj","apply","arguments","lastArgId","cb","scopeBoundCb","bind","_span","done","startSpan","setSpan","getRootSpanAttributes","getValue","get","setRootSpanAttribute","has","DynamicServerError","isDynamicServerError","DYNAMIC_ERROR_CODE","description","digest","StaticGenBailoutError","isStaticGenBailoutError","NEXT_STATIC_GEN_BAILOUT","isHangingPromiseRejectionError","makeDevtoolsIOAwarePromise","makeHangingPromise","HANGING_PROMISE_REJECTION","HangingPromiseRejectionError","route","expression","abortListenersBySignal","WeakMap","signal","aborted","Promise","reject","hangingPromise","_","boundRejection","currentListeners","listeners","addEventListener","i","once","ignoreReject","underlying","requestStore","stage","stagedRendering","delayUntilStage","resolve","setTimeout","METADATA_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","ROOT_LAYOUT_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","atLeastOneTask","scheduleImmediate","scheduleOnNextTick","waitAtLeastOneReactRenderTask","nextTick","setImmediate","r","BailoutToCSRError","isBailoutToCSRError","BAILOUT_TO_CSR","reason","createPromiseWithResolvers","rej","RenderStage","StagedRenderingController","abortSignal","currentStage","runtimeStagePromise","dynamicStagePromise","advanceStage","getStagePromise","InvariantError","waitForStage","displayName","resolvedValue","ioTriggerPromise","makeDevtoolsIOPromiseFromIOTrigger","ioTrigger","Postpone","PreludeState","abortAndThrowOnSynchronousRequestDataAccess","abortOnSynchronousPlatformIOAccess","accessedDynamicData","annotateDynamicAccess","consumeDynamicAccess","createDynamicTrackingState","createDynamicValidationState","createHangingInputAbortSignal","createRenderInBrowserAbortSignal","delayUntilRuntimeStage","formatDynamicAPIAccesses","getFirstDynamicReason","isDynamicPostpone","isPrerenderInterruptedError","logDisallowedDynamicError","markCurrentScopeAsDynamic","postponeWithTracking","throwIfDisallowedDynamic","throwToInterruptStaticGeneration","trackAllowedDynamicAccess","trackDynamicDataInDynamicRender","trackSynchronousPlatformIOAccessInDev","useDynamicRouteParams","useDynamicSearchParams","hasPostpone","React","unstable_postpone","isDebugDynamicAccesses","dynamicAccesses","syncDynamicErrorWithStack","hasSuspenseAboveBody","hasDynamicMetadata","hasDynamicViewport","hasAllowedDynamic","dynamicErrors","trackingState","store","workUnitStore","forceDynamic","forceStatic","dynamicShouldError","dynamicTracking","revalidate","dynamicUsageDescription","dynamicUsageStack","stack","NODE_ENV","usedDynamic","prerenderStore","abortOnSynchronousDynamicDataAccess","createPrerenderInterruptedError","controller","abort","errorWithStack","Dynamic","prerenderSignal","workUnitAsyncStorage","getStore","assertPostpone","createPostponeReason","isDynamicPostponeReason","NEXT_PRERENDER_INTERRUPTED","serverDynamic","clientDynamic","filter","access","map","slice","line","join","AbortController","cacheSignal","inputReady","getRuntimeStagePromise","workStore","workAsyncStorage","fallbackParams","fallbackRouteParams","size","use","renderSignal","throwForMissingRequestStore","hasSuspenseRegex","bodyAndImplicitTags","hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex","RegExp","hasMetadataRegex","hasViewportRegex","hasOutletRegex","componentStack","dynamicValidation","test","createErrorWithComponentOrOwnerStack","ownerStack","captureOwnerStack","console","dev","hasReadableErrorStacks","prelude","cloneResponse","noop","registry","FinalizationRegistry","weakRef","stream","deref","locked","cancel","original","body","body1","body2","tee","cloned1","Response","status","statusText","headers","defineProperty","url","configurable","enumerable","writable","register","WeakRef","cloned2","createDedupeFetch","simpleCacheKey","headersToExcludeInCacheKey","Set","generateCacheKey","request","filteredHeaders","Array","from","JSON","stringify","method","mode","redirect","credentials","referrer","referrerPolicy","integrity","originalFetch","getCacheEntries","cache","dedupeFetch","resource","cacheKey","URL","Request","keepalive","cacheEntries","j","response","entry","CachedRouteKind","IncrementalCacheKind","DetachedPromise","Batcher","cacheKeyFn","schedulerFn","pending","create","batch","ENCODED_TAGS","OPENING","HTML","Uint8Array","BODY","CLOSED","HEAD","BODY_AND_HTML","META","ICON_MARK","indexOfUint8Array","isEquivalentUint8Arrays","removeFromUint8Array","a","b","completeMatch","tagIndex","subarray","removed","MISSING_ROOT_TAGS_ERROR","DOC_PREFETCH_RANGE_HEADER_VALUE","doesExportedHtmlMatchBuildId","insertBuildIdComment","DOCTYPE_PREFIX","MAX_BUILD_ID_LENGTH","escapeBuildId","buildId","truncated","originalHtml","startsWith","partialHtmlDocument","computeCacheBustingSearchParam","prefetchHeader","segmentPrefetchHeader","stateTreeHeader","nextUrlHeader","hexHash","chainStreams","continueDynamicHTMLResume","continueDynamicPrerender","continueFizzStream","continueStaticFallbackPrerender","continueStaticPrerender","createBufferedTransformStream","createDocumentClosingStream","createRootLayoutValidatorStream","renderToInitialFizzStream","streamFromBuffer","streamFromString","streamToBuffer","streamToString","voidCatch","encoder","TextEncoder","streams","ReadableStream","close","readable","TransformStream","pipeTo","preventClose","nextStream","lastStream","str","enqueue","encode","chunk","reader","getReader","chunks","read","Buffer","concat","decoder","TextDecoder","fatal","string","decode","maxBufferByteLength","Infinity","bufferedChunks","bufferByteLength","flush","copiedBytes","bufferedChunk","byteLength","scheduleFlush","detached","transform","createPrefetchCommentStream","isBuildTimePrerendering","didTransformFirstChunk","chunkStr","updatedChunkStr","ReactDOMServer","element","streamOptions","renderToReadableStream","createMetadataTransformStream","insert","chunkIndex","isMarkRemoved","iconMarkIndex","closedHeadIndex","iconMarkLength","replaced","insertion","encodedInsertion","insertionLength","createHeadInsertionTransformStream","inserted","hasBytes","index","insertedHeadContent","createClientResumeScriptInsertionTransformStream","segmentPath","cacheBustingHeader","searchStr","NEXT_RSC_UNION_QUERY","NEXT_CLIENT_RESUME_SCRIPT","RSC_HEADER","NEXT_ROUTER_PREFETCH_HEADER","NEXT_ROUTER_SEGMENT_PREFETCH_HEADER","didAlreadyInsert","headClosingTagIndex","createDeferredSuffixStream","suffix","flushed","createFlightDataInjectionTransformStream","delayDataUntilFirstHtmlChunk","htmlStreamFinished","pull","donePulling","startOrContinuePulling","startPulling","CLOSE_TAG","createMoveSuffixStream","foundSuffix","before","after","createStripDocumentClosingTagsTransform","foundHtml","foundBody","missingTags","c","chainTransformers","transformers","transformer","pipeThrough","renderStream","inlinedDataStream","isStaticGeneration","getServerInsertedHTML","getServerInsertedMetadata","validateRootLayout","suffixUnclosed","allReady","prerenderStream","NEXT_REQUEST_META","addRequestMeta","getRequestMeta","removeRequestMeta","setRequestMeta","Symbol","for","req","meta","detectDomainLocale","domainItems","hostname","detectedLocale","item","domainHostname","domain","defaultLocale","locales","some","locale","parsePath","path","hashIndex","indexOf","queryIndex","hasQuery","pathname","substring","query","hash","addPathPrefix","prefix","addPathSuffix","pathHasPrefix","addLocale","ignorePrefix","lower","formatNextPathnameInfo","info","trailingSlash","removeTrailingSlash","basePath","endsWith","getHostname","parsed","host","isArray","toString","removePathPrefix","withoutPrefix","getNextPathnameInfo","i18n","nextConfig","pathnameNoDataPrefix","paths","parseData","i18nProvider","analyze","normalizeLocalePath","NextURL","REGEX_LOCALHOST_HOSTNAME","parseURL","base","String","Internal","input","baseOrOpts","opts","__NEXT_NO_MIDDLEWARE_URL_NORMALIZE","domainLocale","domains","formatPathname","forceLocale","formatSearch","search","TypeError","searchParams","port","protocol","href","origin","password","username","toJSON","clone","PageSignatureError","RemovedPageError","RemovedUAError","page","RequestCookies","ResponseCookies","stringifyCookie","INTERNALS","NextRequest","init","validateURL","duplex","nextUrl","toNodeOutgoingHttpHeaders","cookies","bodyUsed","destination","fromEntries","ua","isNodeNextRequest","isNodeNextResponse","isWebNextRequest","isWebNextResponse","NextRequestAdapter","ResponseAborted","ResponseAbortedName","createAbortController","signalFromNodeResponse","writableFinished","errored","destroyed","AbortSignal","fromBaseNextRequest","fromWebNextRequest","fromNodeNextRequest","fromNodeOutgoingHttpHeaders","getClientComponentLoaderMetrics","wrapClientComponentLoader","clientComponentLoadStart","clientComponentLoadTimes","clientComponentLoadCount","ComponentMod","__next_app__","loadChunk","metrics","reset","isAbortError","pipeToNodeResponse","e","createWriterFromResponse","waitUntilForEnd","started","drained","onDrain","on","off","finished","WritableStream","write","flushHeaders","startResponse","ok","cause","destroy","writer","RenderResult","EMPTY","metadata","contentType","fromStatic","waitUntil","assignMetadata","assign","isNull","isDynamic","toUnchunkedString","isBuffer","coerce","unshift","RouteKind","fromResponseCacheEntry","routeKindToIncrementalCacheKind","toResponseCacheEntry","cacheEntry","kind","PAGES","html","pageData","APP_PAGE","postponed","rscData","segmentData","isMiss","isStale","cacheControl","HTML_CONTENT_TYPE_HEADER","routeKind","IMAGE","APP_ROUTE","PAGES_API","ResponseCache","minimal_mode","getBatcher","isOnDemandRevalidate","revalidateBatcher","responseGenerator","hasResolved","previousCacheEntry","previousCacheItem","expiresAt","Date","incrementalCache","isFallback","isRoutePPREnabled","isPrefetch","handleGet","previousIncrementalCacheEntry","resolved","incrementalResponseCacheEntry","handleRevalidate","responseCacheEntry","isRevalidating","Math","min","max","expire","NEXT_PATCH_SYMBOL","createPatchedFetcher","patchFetch","validateRevalidate","validateTags","isEdgeRuntime","isFetchPatched","revalidateVal","normalizedRevalidate","INFINITE_CACHE","isNaN","tags","validTags","invalidTags","tag","NEXT_CACHE_TAG_MAX_LENGTH","NEXT_CACHE_TAG_MAX_ITEMS","warn","log","trackFetchMetric","ctx","shouldTrackFetchMetrics","fetchMetrics","timeOrigin","idx","nextFetchId","createCachedPrerenderResponse","incrementalCacheContext","handleUnlock","bodyBuffer","arrayBuffer","fetchedData","FETCH","data","createCachedDynamicResponse","serverComponentsHmrCache","cacheSetPromise","pendingRevalidateKey","pendingRevalidates","originFetch","patched","fetch","fetchUrl","toUpperCase","isInternal","next","internal","NEXT_OTEL_FETCH_DISABLED","fetchStart","getCacheSignal","beginRead","internalFetch","CLIENT","Boolean","isDraftMode","isRequestInput","field","finalRevalidate","getNextField","originalFetchRevalidate","currentFetchRevalidate","revalidateStore","collectedTags","implicitTags","pageFetchCacheMode","fetchCache","isUsingNoStore","isUnstableNoStore","currentFetchCacheConfig","cacheReason","cacheWarning","isConflictingRevalidate","hasExplicitFetchCacheOptOut","noFetchConfigAndForceDynamic","_headers","initHeaders","Headers","hasUnCacheableHeader","isUnCacheableMethod","hasNoExplicitCacheConfig","autoNoCache","isImplicitBuildTimeCache","endRead","isCacheableRevalidate","isHmrRefresh","fetchIdx","doOriginalFetch","cacheReasonOverride","requestInputFields","reqInput","reqOptions","_ogBody","otherInput","clonedInit","fetchType","cacheStatus","CACHE_ONE_YEAR","incrementalCacheConfig","isForegroundRevalidate","isHmrRefreshCache","cachedFetchData","lock","softTags","getTimeoutBoundary","pendingRevalidate","__NEXT_CACHE_COMPONENTS","hasNextConfig","revalidatedResult","pendingResponse","responses","__nextPatched","__nextGetStaticStore","_nextOriginalFetch","currentTimeoutBoundary","unstable_cache","noStoreFetchIdx","cacheNewResult","keyParts","fixedKey","cachedCb","maybeIncrementalCache","__incrementalCache","fetchUrlPrefix","getFetchUrlPrefix","invocationKey","innerCacheStore","phase","draftMode","getDraftModeProviderForCacheScope","isNestedUnstableCache","cachedResponse","parse","revalidationPromise","run","URLSearchParams","sortedSearch","keys","sort","localeCompare","getSortedRouteObjects","getSortedRoutes","UrlNode","urlPath","_insert","smoosh","_smoosh","childrenPaths","children","slugName","splice","restSlugName","optionalRestSlugName","routes","reduce","prev","curr","placeholder","urlPaths","slugNames","isCatchAll","nextSegment","segmentName","isOptional","handleSlug","previousSlug","nextSlug","forEach","slug","normalizedPages","root","pagePath","objects","indexes","pathnames","sorted","isDynamicRoute","TEST_ROUTE","TEST_STRICT_ROUTE","strict","isInterceptionRouteAppPath","extractInterceptionRouteInformation","interceptedRoute","refresh","revalidatePath","revalidateTag","updateTag","profile","pathWasRevalidated","originalPath","NEXT_CACHE_SOFT_TAG_MAX_LENGTH","normalizedPath","NEXT_CACHE_IMPLICIT_TAG_ID","pendingRevalidatedTags","existingIndex","findIndex","cacheLife","cacheLifeProfiles","unstable_noStore","callingExpression","validateCacheLife","stale","__NEXT_USE_CACHE","configuredProfile","trim","explicitRevalidate","explicitExpire","explicitStale","cacheTag","ensureServerEntryExports","actions","action"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66]}